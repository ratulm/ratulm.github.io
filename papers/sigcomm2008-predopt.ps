%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: main.dvi
%%Pages: 13
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold Helvetica Symbol CMMI10 CMSY10
%%+ Times-Roman Times-Bold Times-Italic CMR10 Courier CMEX10 CMSS8 CMSS9
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Ppdf -Pcmz -Pamz -t letter -D600 -G0 -o
%+ main.ps main.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.06.12:1526
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "30 October 2002",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known not {userdict /pdfmark systemdict /cleartomark get put}
if
 
@fedspecial end
%%BeginFont: CMSS9
%!PS-AdobeFont-1.1: CMSS9 1.0
%%CreationDate: 1991 Aug 20 17:34:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 120 /x put
readonly def
/FontBBox{-63 -250 1027 760}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BDCEEA888D07B439DBD4E8B4C9
D198C0387612A3C669D6A672BF4726B90213C2EC063317A043B6447FEC896BD0
598D0AA1DDB874B7D72F3E89529FFB544C16C41F04AB6972093A91C201589D61
A8FE417702E200FC26E47359B881D02F7CB42A5B21F90424F82FEFEEC5ED59F6
C48895523098D73036537A54639526839F785D7157E08DDBCD96AEF023667FC0
1921070EA097CAAAE9E4E9D5D21DB9363555AD932858E23A534F7DA9F2F0E79E
9D46C0D5EDC452179B6A328A52412F2FC548B03A056663DCE243A441EADC0D63
8FF6D19EEC71606A368EC3EF1DB8FA9117DB6169ED3BD792D9AB2811378E50A8
535232683CFB2C5E0F3C350CD294AF9804B7B88FC848D962819940AC88247756
BD1EDE31C397076351447974F91BA99BF34081C1A6C65879C36934E1494108BF
FA61B57E3A8154D7CBB6AC9B671700FE227AECF9160145957A2E629C3931CA4D
42147A6CA42FE5E0947DD2EEEB0A640EF9C73800A59F0F0B6B75C3C9C863ADED
9627DEBC218141FA414913611061B3EBB46AA393CDB074A40492FDEAD1207838
A13CA709C2CDE567B9688DC5D4D622ACD752A7D6DE3F79002ACDA6AE41EEC084
BB1D3C962725E1AB05922698C598FEAB0D02ACFD97CD8BAD811193660043AEEE
659C18DADD0E614A401FA0F0A485AD4A47DB73FDB3D2B294145FFBCCB994FD2E
68B4ECB3364B377FF6243ED93921F3B3DFDAC3CE9CB3E2B23115BD45FF1F6734
70DDC37F712D78543A8A8A561DAF3303DD8F3742EB700043207D04A782D94952
1E57EC7E5858AA91F07524F2EF2A129D38CAF8698126B8981537CD4DC45AB99E
EE571322DA22745F552675C785D0A8898ADEDD5DA7388C11DF0FF5A5D239867D
F9CDB0FCCD2CEB70C745D37B8C9295CDC123AAFBDD4415338823277430E7AB53
3D27C4CCA0B57B0177EEE4FFDF808CA6C6D7A9621CE6BD7F5D6E9C0E9CF211DB
E9E9E61DEEB5381033D367212E28AE95A84BA89EB5BC959A51854ABA9C7E2D33
2C2D7888D057921B40D5F981B156C191092B8D533C0F9E0E2220C778796E95E1
7DC99A60F2B7B1B4C30171E14925B427FD206401CDA1ADB04505E34EEF27259D
2FDA12976DEADF32C16C15BA5DF7733EFAD8F6A9667BA670CD104386DF3A2F5F
A3142E9E5193B4DC5A6334EF926C9A8B0ECAE9D59583457A47718B70C19E9FC6
04FEAD8ED9608C8973820BD40FEEDF86FF043DAD16DE589E4D4081F9FDECA3AB
72DB0D47C9E836AFB3F25ED48C26BB7C50A5044C962E66F851FE6CC4AF4EC5A7
6069C31BC87369C7EB57AC71BCA30F24870FF458CAD5D848ACD99E3DB54558A3
D7B485AF5A3A1CFC7C9E4C4502275D6BBF206B8422695250D31BE00DB7456040
7E3B00C459397DB7AA58FCAF87659FFDA748F1021EE56A12BF508FD5B9E03F1E
6FA8B0F90337F26B0A47CE169F06F8112CA1D305B6D68FE1CE557EBFD997FFB4
C8AB8574825ABF586616E1051C1CCA253D6AF44087C39AFA7119BDBBFAC44799
38E7DC65A1125F21789C1B022023D942D3A933ACA80D8668B9FE569E9778745B
5D2A7F01CAC147AFFE7BE30F2D46F40EB851BD91B358B29DA239ED5C55EE9B55
D1FED13E430AB33A6A3BAA10A7A9514946121B8560B4913017E98163EF56C0C5
DD6BDEDD3BB0BE9FA9962055EED80016AE6B139F0A73A12FD8BB680F0EDBD535
2AAA47A328AECBC514CF36FFFC49425032EFC898951CE65D3C5975F1C0BB2C49
E900247EFE6AADF1F8FD099431D4F86F055FC2C0C5828D84DC7C5F5B9D40BE48
ACCA2E0C05E6C8E4AC457C845BA8DFBEF1DFC32531EF3284ABB735CC40A4C6B6
F730DFAF08F3081F3E1796581E552BF43B18142C628BCC30EADDCC1F87F28B2F
845E2E48F1F3BB45D9F97F16C22D298229AD781F86D39EB8626C1EAB89D83004
6045BFF39300CE9683E706DC04203AB9A532846CB14F9B8CDCE737AA01921F48
C41EA843DB6573D0C5700EB0D08AF34D61190C8E95D0AD6C712E836168A53D58
D74C02521F25CCAE72899DCE5C5E3B58F8FC8B6ED1B1ADEE0450E4A1D0A02583
73EEF73FAECAF806F5523872B3FAAB20CF02ADAA67FFBB3A2FBFC6DF7ABC8D97
E6C627FA5FEA27F7F40E7DAAD0E8EF5B7EDB80DB81D52A9B676E4EB3224F1FC0
65D7122900DC530BA22021939F75E5F9426F0D0A04F543056B0BDBD5D55063C5
54DB457F673FE1C062BF61C28E5D6E5118A29F6BAF64961FD1F252DF16B993E8
4028D9522C84F41C2E3328A2BF5BFB361AC7FE83B7798DA05A8CBA70AB72EF1F
4577BC56A8D0F0BC295E43BB9AC3D93DA81E65C77502F73472062A8596E177E4
DE77F678E72B7A08BF2BBEFDBCE02C78E36AC335860E6007CCE4B7926C43614A
F64632B2414AFC6CDEB5485074D932D74FC069FE1CC165D533C731FC2E188D71
3E9316CCD0DF3133A2A84CDD4ACA7650F8382AE662915346676CD3FFFFBB6626
DF94E8DB7B496067C62CBDE48EC771CB79A2F9F1A93BF495DF81CB5D2D53DC9F
85DFB5DFB095F58E700494D268886B14D2CDB2934D5218875352FE469D467A3A
8536B45218F271F743CD8B1842A2AA6EE4D7C5F6251F6D32DD765267FFAE7739
60180E3D608853C13BC174E7B035E388F889E27591F6FFA4B33B02C86AA65067
4FD4083061909D2486EF959F628109C528FEAC4A8501BE23C951ED57A206E443
373FC7F1193F4447346A4B1C13B6FBD026644B2149AFAC24D8F7A5B18F4AF316
B407B75EF8A5447B6E3359C8E478DE6273DE9448B78A9F9D50130267CDE1C868
113E847598F648EB7FBA9656B6E5B9EF8AA7BBE4A9C3B431A06496BA2A3809C4
FAF244355B4D30AB8FCFE738A7E1CEC3A342E872BC67C36942B9ACE6E3041B03
29BB8E0D74742AD2CDAA2C952F0E21B5AB8735DE169C91D57FB4FBC4C74F00EB
A9A0318E6C5715DFC548BAA0411D16AE3CCBA59D7039E78769D099212E1D50DC
0BB15473FB451AFB78A9A12EA5C9796E2CEE3CF2D2EC69A6FC124DA831F735E8
0DD0ABC2653D5EAB98A103C26340C0265DFE270C8F6284D7E740ABD590A28E9B
63ED8E4B590EB42B4D95D4D518FC05B5CB3D8E1C7654897B7C0B3D34C38285E0
64B76DCEDD8EF221CE79C89E148177F8C822BE2126C84F227F36871816123A4F
03780D54AD1E93B1838401944ADFA612DF244DEC7D02187CB4A57D2FBEA38141
EB3353BF34E8EAAF0F26A933F6AF10D79C8E762D9314620926F26DEDEAF013DF
F393
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 2 /bracketleftbig put
dup 3 /bracketrightbig put
dup 16 /parenleftBig put
dup 17 /parenrightBig put
dup 26 /braceleftbigg put
dup 40 /braceleftBigg put
dup 41 /bracerightBigg put
dup 56 /bracelefttp put
dup 58 /braceleftbt put
dup 60 /braceleftmid put
dup 62 /braceex put
dup 82 /integraltext put
dup 90 /integraldisplay put
dup 104 /bracketleftBig put
dup 105 /bracketrightBig put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1CBB5E6B31E759E6042B0FD925F0636A165D4C99A10CB7858955408E6
7E059218B961A3AFAEBB8AEBE508BE2E21C2AE88C1FFE3FC4DE40761BA7CEF56
A0973F8960415D8A35A3C9CEA5882B3F900E8C32B20B7C68A4C6ACF4502EEE17
5DCA6FBD2B769569091F19EF6F1ED84B7BE4DD34FE0C557019528304F71C15E2
91A88509AFAB1224E6AE0098BE1FB3A19D8530B3812338385A506CA545BE8787
A9748A50A81F2A4038ED456DEF90681C20C12646A4837EDF1CF7A8DDD6F46352
B4A3B5672D6FABF68D0C92C2EA398E37F3B65089E5703710C8BD724E002DE8E8
D5E3FF0FD8D7B47C5449C631B0418B0B51844F026B2F0A9461DD009DD987C8B1
201C7E266FE85D9D656163CA9E96B97113B2C8ABCFD3C5003F569E25EDEB0E8D
8EA4763596C269A40DE7DCF1955A6C5F1BD9661CBD0142A3D892B34B598CEA4A
4C73227FB91405F4784D3E0244F84AAF1A4970E60EE453358DF70ECD5724F0AB
49B358333822245D2CFFDF4088E41B81D36A0211F07700EB57D653ADB99D7EEB
82C1526F9936592E734D79BE41A7009F43FC26A9907EB5323975C4D7BD4549E5
A9EAE627FBF6DA588312F8523E51AA739BA29C63D36AF5C50682F52F80FC48D1
371D70EA19D4EB10589993BEC9EC558FFE85E8310F5DCEBA958EABED5C64088A
0DDD49A4F3CB4926A7F4D4C00CAB53C843935A104FB18CA097A81B8B693BCF27
0EDFF8A801BC0F613C4A12F2E4D1B9CB8962A45F46D448DE96773BD39B2C266B
0D6B6CE1B3F6BC9BF281A0F0E3E80E783EA7795147C2FCA83DE70EC639879D57
FAB0FFA412890B63F656607B10F81A79A502550297E8049849CE5C493DBDFF5E
AE909A6D1535C7C858A83D3165820C789E18B6512356F393FB24C7AB887F14F6
2C4FAF965DA0A683E21ED680EB3125C2D59217960AEB5F74C0ADF8A79F746D2D
71A42E06291664F2D97FD0CAFE8516A3E096A598F55098C81B806CE8BAC4F1C7
D5ED604E8357C05B7A7870EF55B3C0AB54DC2AB39019A380C6009767F398D29D
B0C827B33A6BA85FBC7D4539BAB152610F90745B8206D01BB6129AF3671F955E
208B82E802ACD854961B650D254FA3F27F6A7A435C6EE3680C6F24DD44192481
6372D440EE6D7B108607F7839B37087DA4BB70504C0B1C01139B93574AC1B249
5FCA9D2AD158041F90B337BE2FCA8EE1267AF44D0FD9CF718F409FCCB3A77048
51D95CCEDF117ABA5CAB0B7262EAF3BBC35195C423EC851BC62365AE48642A9D
FEEF237E137147B50E369FB4A370E983EBED6E92934F85386EF2A46E27EF009E
F9A7552AF4B342D35CC6483245AFA4AAD35626621C13482BC842BEE14F00FDE0
B1E365658D83E2481D387F468E022730265EF4FAA881BDAE191E0EC4FAA1A54C
ADAF9755B55E89C83E77DE5D978E6564466DBA22E4E162E0B5F8D5C081CBA803
9B71CD709A042E0BD6C5CB68ABB15A527BCECABADE0D9487138D651642F50D3C
939C3BED20A9E7FC56DADF46E7B50BB18305D7139E032F664C56E08E0CC15D0F
93C6F3280210211B94BD86D37C1C932CAFCE214C1B2F61F19ABA79D8DF7D175E
8F7C90238F4CA84DCBD41C6B53A7B2E79BC34B06A0771E4F17BEDC9338CEFD08
1A257BBA4BD199D0E993D9D4748FAE450B600B28C8B61606AB3BC05DA310831D
8127154DE979AA577F2D34DD7F5DE39E57E22A3F20EFCF17A25CDC2E97B8DFF5
8472371CAD5026645A5D37D993CCA3B2B25BEFF5A5C254413F301B63A9CF8E76
E821938307E600E398143D06254A93552329A422C46A1C3B8B187565648B4A63
48AF79B08A4E63ABE3EDEFFBD797BE05F7C274E58772E116A86E0B1105370F4C
94A93754E8A926B03C2B8F5410612902ED12336B68488718DD5F6F23E73EE78A
58EBFD016A29478BA208A6F54A79B81CFF919926B2E0B1720CD713B3B91D64D6
3896EEF8E4D8B7F92184B1323F0B462BCA6A03BD40E0DC49E7EFA05A6B803219
C9C055B0962860BA18C34170CA9EA332054F2C6E58232985E4A419CF0EF6EA68
EC50BF65D9AE82B3229CC7C3ACFAA2E42C09E63F1021B9F19A8644829CAA93D6
66E20EF6E0538D1ACE30CEB86ECB5440B3BCCB6AB2CC6D3BE0DA8EA63E80AD02
549E4D1567C06FCDFEB51E4037AD005BD6C63991F98A9FB04613F49C60AE564B
EB6FE3390B2723B11F3681EEAD38663249F1079D7464FCB27DF13035350A0C79
3C17FF9799188E37558A4F058B5D2E9363602E7F949BCDC8C850EB8EB9C6F274
6759652F051B09D3875FC63A92386DBDF11ED83CD18823A38A175E67BA5F5215
C07E29220306BB9C7C19A573EFCB6CDF328381689CA63F5D06328404688ADAC3
B400CA4E5421A468FA27F97904BCA1B5CA28A03D2A5BF7C42D32A2F88D3DB5F5
A1D64A83E41734B2ECF853AE993AD0E27571CAF54BCA1AF2A9D7366A1D35E980
A609E85622318CD5708FC39C4851FD3F36CAF2972DB6EAA295713DBAC530EA7E
DFFC07FC10A7117AFFE7A4BC2E83FA1F059C0739BF20DC8D8BC1B9C3924B04F8
0B13129DD13C37AB9953E51C2D10A80DB0BC8664A4D6B3BCBC9D2D96BC96B4CC
674FBE3FA1A17B8B54A47B904367C05B7CA1D2F6421A7D34840E008B5263599B
F3A6BD33C9C79BE3C369FC4DB0E4A8E381AFE5A8BE2F9383BD7654CC2F12B4C7
D314170EA56A04079841D23B7BAD07247B2C2A92D482E7CFC04BFDD2B2959B16
28C90DF2CC25E4506239536B58A9B00A131034EDCAC45192A34E59DC1DB56492
B04A2CB3A571258B3B05FC736330B6E9C2DD7AAADA82921736B1E1F98910C223
49F4C748B8D1D7786955E661FAC3FD9CD333F69A7815645E8FF45A863065C1B7
52A8ED2CE22E97D23E7A90D8961ABC05C4552B6544BC285C0E2A4640789A2E9F
AF6AECD673270AFBE6A0B0715528F349B7E352179FDF5019EA9F89414D8EB1AB
A197094972FA47967D7947F96AE12B2DC022A2D0571119714E48E96D3388D0D0
0F78219B1569FBB21EF09009F5764AA750D27B2739A9C97336736E70B7F2BC9E
7866B2EFA2D84F852ADCF52818FAA90E34C09FE7F7C7AED1B353FDC3955CE272
A9A0E508E143A3BF97EE39C0B9A1DCB8B8C377DBA4B6247DEB6EF8ED05248E82
060A3CF53BA8953CCA95B9293BBB8BF0C43ED03B38884D5655BCC0AAB8C831A2
DF5F259B579761893F4695E25AC5910B2E79A9476752C6905555288ECD5D3B1B
A2B8271B956C79ED07334342752843F6C605B0302F4970398EF469263804F694
7370FD1A21C3357014FE2B73F34A6472C176DA10D11BABECCCDE971D9D6663ED
0A6855FCC56B54432379BDA7EF132F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSS8
%!PS-AdobeFont-1.1: CMSS8 1.0
%%CreationDate: 1991 Aug 20 17:34:12
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-65 -250 1062 761}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B17498276F99362748F6E97327D
7CDA3F577075245561191667923D37830EEC37A0161B6A3EC8FDD63CDB8C8D4A
AD39C69A264813FA79C25E85AC95C71AB965F6C14A4A1ACF5BAE27A5F628B172
47CF6A12008558438874199C237501B72BFEFE64B606A327623BD8B217E8349B
7BF5C2204F4DE2FB269845D5714A31151A66064419CCC46A63F8E54B92B5070F
F3D80801DBEC658CD3926B15BE3D4B7591FC36663D3C03926D0D3637B53BCC22
73C8E0001B416A65FC67C53383458DC125FD14FFE391BBBA321B5AF5DEF85DBA
5A5FD759FD2AAB6AF31CDA6202EBB763E3CAC1FF91B1175EF818FD662B60C642
738A3B4F27822A0560BB7C08AD42F976351FA5225A0E6D56C7FBE06A809CC468
FB2E90C84FA56C62CB7BBFC80BD94F5C6BC0EED14433A4A356D2D15DC87B34B0
99A100502F55A32D736757642F9F9719FD9E35A1430A72C254614B4000113705
5474FCFCE47A6978F69FA467B818309E61598EC18089BB924C393B3FF1280D72
E1969BF5AD3D1074FF13202D4CC324396BAFF2397DAB2C516C656B6B240F023D
0C28AEBB957C23012C971D444DD1C4C2BD7DCE178D46CF8EC20DCAB9A930907E
124F3B3B8D16DBF166BA40CD780DE2155BF21EC2C3E0073422E54A09DF4A9491
63B55882122F6B40490D81533CB0E16967E32D4F5B5D5D14F578BAA0137704A3
2386E6AA4E3D160559EB245625253380CE64C30B41B573D7249B0B6157B02EFE
0D82006B4CF4A294FDDAB5B87CAD0B2D3367F9138EE0922FBDD3D7BFE4C6B297
762F95616A75D0FC2D2E22D79172DF1A3287C67BD27658A448FC61077B3033AA
5479ABBF5CD952B5E19E437CD642CDC43FBB26115DCC019FEB3195F77E7E3523
D06AEBB88BCA14277D804E24155ED14A3D4B3D8013072D61ED469EEAB9ED807E
85E6AEDD5A97A9C099F692C1D33F32BBA3CD35B6FAEC6509A57AB4A48E81CABD
51A6F916911A3B599B5C454BB3AF6F18D4D5C8796B679701CF407C8A6F61261A
FD9D38F808323E33CB106CFA1B99EEEA39CAE95C1EF723A1DBD4E1C89B721EE7
1D8BA2017B53EE544EE7FFC8F1029C347AF622E8F1FBC322D59E0A8439E717CD
59507BE0B5A36362FADF6B25AFA80339CE709F35BD5B240CF1948DA9F9C136E9
110767E9430E532A1ACC9EFB44967076628A1FB5BBF94A1FF0A3B496B87B71A9
B32EC92C259688E9F89F892EF02D4070D392A7ADBAD1EF1778003BF75AC724DA
F43808479FF6A94E2F92B4C06E7DF4CA2EB7D7FDAB638DA4834D6A8A042551DD
C5A391CAE24B0D48312032C062D13C17CD99043A586FBF3591604FAD8CD66120
FEBFA38E54773FF49105404892AC8D2DA2F039CFFB2667C6378FEFD8B9518655
BBFA1CED5243AC3B291F4107FB9C5AAD861F99F945A66BF27526B2F1E364012E
07E666420B9C2C8BB5FA1786170916A2F0A072624EB1CEBEFEE88FF54BDF0AFE
0E113755FCC5BF03EADBF40BCBA212E180A642556D99F90704EFA0CFA5A72F98
CC06E6196B84F4C50B63E218B2A84DC33596DDE5EC4AC8AE6E1E8C9F07FB6F38
FA30BD46915E7A1086C88CA51F4B7E71F8593FE964565800D626CC67E4606C1A
FB0AF30A7CA3BBD61474C844A9713E751BE37513003056A3A3E1D611C469CE7E
C7F984CE79C51003F841A6F6CE162BAF9FE3F0E9642ED5CEF4C2DC92F4C536F0
979C086CD870C294D884BD5CA179C8CD6EFE08A11B2566EE81DBC9D81F1FDD7B
54F211250A26ED573CAED512406161B269DE14609638750180AB0C28D3AE0D6E
29FF3F6FA0E05CCEDC1CC5F9438D1E33706973282AB1B63E476F85F7D8E1A3AD
82622E8F4E9F39AD0C86864F423F7FE12B6CDC159A8D466F1CCA5B79EF1F40CC
CABEA255648A6F6308825F87358299F5228125B0F816E9683283F3701F9CD333
A68C1EAA01763C75472E803C9C4BA9F6845559EB6AEAD1B5FB6ADF7B111E1881
352CE11C70A81518343AB4B2C69586B8D0BB5DDDE05C1B72C19C4BDB14D84EEC
1F02D8AEEC38F5BA5451883EC8A6FAF358A2829C32415B7625AA4C6A8915B9CA
77305FAD3ED6BA1A4C8EC493886B63A93BECAED320DD97567C9B22BE40DEC7F8
CEC267265E8E11F96B6016E18853BA30D05757281411F7C97A514C5467E366CD
23E17E72DA723BFE3A944201DD829B9B6908D97B67D027DD377AB2701B4377F6
9773B66AFA5FF456922FE73A4413F22C75B98E9A077ED1F0AAC7ADE873117EE1
1CE6D0CA1861EAAE3B8E40E18B21D2F326C867B7ABD6341A8794ED6E67927EED
96CBFB4CE933E92FCDC69EC0F65F676CFD1C9E5BB08A08B5A00463A52FFE071E
F332EA6D5F320C05F8AED27C1590591B2E8743A0DD658542E02D65BFC75A2279
ABF0B88DE682E7DADF80501C90BF25FCC4FD57B0ED02E7B582E5D08E507C3675
1F34B48AAB3BB97F6B41037C80CFFD843643838DBE8E3725D508BD7C68223E40
DA67917AF82D8D7595EA2F4B65B70A6CF551A344A1C7FB6351A14FD22EFBC0F0
DE405A1F8DC01F78A0E7F6205F98292166A9B9F0EA82D49B806412ADA61C8424
5F1D9DBB72C3726B640DD37CCF19CE5D70C7FA6E8A313FC504B54B4ACF270A1F
296EAFA1DB4220D6BEDA438925F6AC939FC9FA67B2F3F427C22D7963EEFB6169
4AEA6E34F1DA809F016C2A2E2ECCB0E1A75C45DF40CB930B8BFF223CB24BC986
39DD1F0033ABF681B6BCE7075AB679A32151CD2F876069F636EEA871025C25CD
022BC5DB7D3EAE208AC36A3ADDA6D560C462E09E5607EA9E09ED18B7A7DDE05A
9AAEF4EA7D328A8E6BE0B957BB3D9834E3DD5959B9376199C4E3FB13D12016DD
C5B87C48413CAC55DADEFE27212EBA17CF8D593A287860D6110EA39EA10AE0B8
DF81E0F7F938AF81136ED7DA5E366671588AEB8ACBA376A50906B0ED1290373D
56AFC6B2945062BED4A501D6476EB90C0CA15BCF7CC354FAEBC053CCB9AE0800
5C256FFDD41E04D2793B86E1F2AA4B41CBC36E87744B50C5192168F9313C2585
11FF719204E7E01B6B64ABE8F3A655B3D3EAAF72EB76274DD94819902F864BFF
90A3DFD6C9FB3244361E862BFA323142C40383C7167FDC47192945D4A97EEE66
E8DA103D952A4F3D4FBDFDA8F43619096EA283E18E658FC83087C5EAE2A3344A
DA7F5EB728089853BA8BBADE8A2FAB2F62181EEB8F421B4F6CE8E00043B02E8C
4A1D34812A55A240B84104155E031603EBD99F8BA3F69038223C8B3559F21CF7
152826BDA41AB40F022AA6B7742945E22931F52C0A32AB13BEC154E0C6876D2B
D98A8B06777F6C04A9B6610ED540E35FC648D651A3C9468001596FC86D258586
108DBC3043B61CFFFE3DD68855AB52947F3D9779A52911A111DB243CB1C6FBFE
2BC55D84425449AEB2637105A5125FEF4C6DFEBBA22DDB41418A8A77473CD4EB
4DB3991D9B5FC20E505D4019B05A2ECCAC9B690C4875F6DC911C83F3F8788669
9FF51FE05A1D2805B83990104ADE326B27353DF473913D7829FAAD92ABB5CDE0
0AEE9093EBE0F3C657D51EC03CCB4187AAFA50534DEFC3DDA166954F75B1AE8D
8FD2120FAE00EC2AA6FD8699D30B5DCAAB3F59EAD50C6DC2FBA0AEEE7F066361
6D03C9933BDA5BBD82946753E41258ECBEDC025EC8D78956B3886FF5DC9AA800
8667AE00DBF72BA495B4164FD5B0DC07B4689862B82EADC60BC33799BE208985
D116A567167B4D32D2A81966FF2D757F91A7E653EBD1F5708AE1436961E7C6BF
F635A0B2173D491283CE01315AA550DB127829933A07E8B652DB50796571D846
D5C8D9F2DEA279CE072816CD2FA6407DC04A8162897A948CB99FDAFAA45DF02F
F81A473702EFE607A7E2776F5493551BAE4C13D3693DE60D9FA981BFECA344D4
28E5E11353ACB743BAC3A28E44615C180B9DFFACA2A5FB4BFC24578AF5B7FF92
FE1CD393C83B703A2D9A905C12725E388A849C0ABDFBE66026BAAF5B7BCE1CA4
433FDB2826E882D48D421F017C1F533904BC23A8663DB86682A6EEF2471C8432
633B271CFA124C10F6B19DB7E6629D2E299BB3D8092B10CFD7E5191D53B99EBF
A82CAA4E58A610D00ACA1A379F4668BACEB66452D4D440B42ACB98036FA463B4
AF46649EC90EA7AE6358D0768B1A8E5CD847E6D669CD3224E1429094D5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 3 /asteriskmath put
dup 15 /bullet put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 25 /approxequal put
dup 33 /arrowright put
dup 48 /prime put
dup 50 /element put
dup 52 /triangle put
dup 54 /negationslash put
dup 56 /universal put
dup 102 /braceleft put
dup 103 /braceright put
dup 104 /angbracketleft put
dup 105 /angbracketright put
dup 106 /bar put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703701F77F50FBBE021F4761B08ACA96
DB5561981607A8BBEAB3F49FD8F059018A95D2C836A793C947AEE5EAB45815FF
7A18A4A453C1E8C10EC5E6020462A92A0AEE570E81752D6F6E82A1A002E55B6D
14234E5F0E23B2A08F456B184592BE28EB3F1854910775E38E2239C9EDD65D23
E8583DB2BE7FBC149C86AFA33F8B048DCE0E8DF315FD88A5E4EFD9920B849044
C41E99457788A3392DB8C5D5C9322D263DE89A6452D2E3BF0817842D6C968E88
EEA0EA52CAEDDBE7F423B5A4C08B1A3FC3F28146CDDF4CF592860F904AB80768
043E3AA13276A385EB0769AAF3462FDDAC3D8AC5D8B85331CA4D81EB1C698FFE
1A8F55C61EF004CD1BB76BB6BF651F231E692D46C00EB883A62D709FD04A0BA9
F0D5426D3445542F334BAB13E88AB4E91BE50180066B15502E3FC68B6C22D4B0
4912031F6209861EDA4A187BEE8BA9229E084AD765A9A17AB934C2822330A2A7
94252E30FD3CF9CAA3AFFCF6C578697D0E3A749E25BE4C376EFD83388F22DACB
B8B55D5355677A810ACC5D989D3C3F0F48847187D295B79A755408FF16B95B5E
E39BC966A570EC2F16AE0E5287F0E7A106F8ED035802AAB303FC0A48F6FB0523
8220778FC1C9E19F41BA361962973AA2FB344FD8CF3E2B5A67BC2EA0BB34591A
E0F7FF561B682B9D8F69EE9F709C5DDA7B172CA8415ED09632482C18E9E52D17
3119BC71FB4E2CEA52FB50D3F355F55016F81C90489E6AE01133051B837D7699
9E37951E6094B787E5ED4B5A4AB09120750E0A323CF9605714B80646935BCC07
06D9E8BCB1793D93117E345467103428A6EF19C1D814CB6C986BEF374D4B154F
F167AB235F5A34879B39D96A1522A51ECEDB3F0E1A434A3A751557A8753DE4CA
8DE957DA2916D7246B7118EB395604CBEDFCB05FDE9532F3B2B82336627B9617
8C2A8B53823F9207BF69FBC9318E293F4AB8EB540297283C95F2C0CF99DC8B81
6DAD9DF040FF50F0A51D638BDA1C9A50D80DF73BB142988849FC5E06AA3AA837
5048ED8F663020E3C8C625FE14C74D83622385D033411D5ECB69D023E5BEF4C0
E7CFFE480B1C9714DD1E2EFFB922D289444845636B9240598E0372D0D31BAEA4
B4213291B1F215BE06E3D57ED5DA722FB73A941ACC94FCCA005E0278199F8732
435B5739212F2DA47B00EAF7B3446BBCD3BA964CBEE59B259E0113DDE517863B
520B88DAB8A000D2AA89679CAEE529B9C3C2B8695FAE2ECE77F71C67C11D5096
E9CC5D7BCE0384C6D13E8458FFBB03A9A2B5D787E4A8ED43C8868365B900C9F7
C9EDAD1D288AF7D1A872A80B54E08D9FC1C7E93FB2DBFC1F0953DC0FECEBD5B5
E6660E833C609176D62F5BBCB7BB0CB39C300C5E8ACAAE5F0F7AA81AC51B8C2F
2C628788FB40E41D24697766B319CA7782755483B90E814E0841EA18D27E30E8
226652B4D269693E0D7DE618C5CB66AD33DF7A557A002B3AE527654BA9A88520
87E93584D029D47EF125798AED56E7907007710415A681F5E818BC870E0B332D
8F3D6C515F15AAF916A3E92C90AB331BE895F03DE086F390310D2DE791515B3C
75FDA8C65B6CAB3B137E69D8FAAC253F5ED2C4A3D61A7FE1DD10681F087FE3ED
B33F5085C3D81BA80A83B535BD90D6E8175B739FD14D03F3CC90462BC0C0611A
C19D3EA29AA36E744638DE2FBF0D9BFACF8AB58560C0A7A2BA08ACD3589753F8
D63381A539DD3600725730A405BDE8D5987F512A3C87DB5DF02FB9AA80D44823
0AFDEFA1F57F3F140599F98BFA0B9B752CF568AAEFECF626518A678A88A69754
E881298E21042EFF92000D4E1133DC288CE86DF244FCD201E88A518ED5ECF07D
B0C647A0BAF9F9A76AB9225C14329535A2AD8E024C7860374134AA1A5C6F22F1
BAA4C262E7A274484CF8912F53EC911123B9A6F92B4FE3CE1E9792B8ACA19A19
4D65B09A85A8EE7299E3041C62E858CB8462C79DEF44733B0723C8B43C2FBD74
F717A8CB20E6443C3FDCA2E51AB3878956C86B342286EC713FDC7056509526DF
6747AEC56AAB6F35C4D41E61EDA4A95AFDDE5F64FF643545DFB34E6776231235
6E812B05D79837E0C03A1F4F2AF420DB4D86F552AB665DF061493A9547E93DCB
18B1ABA813C3DF1590C6520E3D7A362387072A2EAA2F59ACA8EE6B8F2EDAF9DF
6E37FDE76F1D81B5E5B9E2FF05DCF77FAA73A5744C674264B4D61A459545B3A0
3DEFF3AE310E50D14705E2FB9868D38D8A9BB28A29BB39AA25049D40BDC96B48
73EA8F98108E1C84EDB3B5D377D918DD1833928FA7AE515DE41A91879E18F919
321BC8334E6D6DCEFE84F808C8C17B942AF1C01055230D08DA86B47DA78ABE58
91597B2B98FD1B575EE8C7CCD54E57A997512090E025CF6104E89BDAD75888E9
592E1E9DE1147C1E3ACAFE68EB9D2E97BA520E1A530893D9132BE8F8490FB43B
C7F8EE954EAFD19EA68E87BAAF9D8DE51552E1D67109AE022969D55BCD13D8F7
6BB9600E934DD5553E205C2707E2B817A385420255789894D2FB8FF60F03F704
37EF2113EB31039A28A658A07179A8B0EACA1C13C075412B4192E3A309169C13
0EF63F62317DAE000F4F28F04A74D338A5765185AA80066971C91F4D7433EEBE
89F270547D3361A857BBFDAA9085A087E4BD13C5BF6293DF386B961C2DE75A73
604037BF18A0535A313539913E686CB86AAE5749C4F6AB7C12921FC8666F4E59
60ED1621A9E8133F80AFDBA9EE4CFB1E39C098879E6E6826C51A3CEE5D9AE78A
FE35320F53EADFB0892E0E00D0F1DA7FDFB34BACD376D50B63FD4CF7EA1EF10E
612145072B03E3C720F9891A2BC0E3E0A93C546E9E9C995B4E6F88722292AC8C
063C64510C930391104A3B660A77B47A2EA0442B6524136A75FFC011BE571151
4F3F1A49C2B54D3280696F8C5FBB5A8B909EC112DAA73C02B97D91DD08EB377E
185D4EBAC8B81BB2C732EEE9A8845777E8E27F3C749B384CC1C1E1E49E1CA49C
04CAD270B6475E36EF74D712151902401D93AECAD6C2C1EF2A04D0364CDFED4E
FEE9AD0D9B2A882BCCEB1744AF6DFDB66A57043FB6A88B22FB84E38EDA66F13A
699B735C548D0FFAE0EE1C48169F5B138041A50E8BFBA1F1FC2155EBC327CEC5
339243FED93968E8B0EEDEE38D88F26FB37DBFD73D5D1476999EA548E6A1040F
AF407A8F923208808B5489131AB0E78490967AE89D3C29CAB00CB4FD7A1DF5C5
58777AD0F132AB6044D248C116C703C900A3C42CE30056B8D8166A955296AA06
CD81F2CA3F31BA557CD56251D7233F9B1499B6E1074435C39AD3A05CE188D43D
9D99A0687C5C909B6F56EDF740976CBDFF33A7016C446FF8D08B8181C9E62CC0
28F284141810F9DC6F13E0644D5FC41C66D7F521DC2B648462683F5B11C3806A
8D97AFD00252C3AADBE4579758A48757DD4897115B8C855D0BCF691737A01FEE
78B34019FDCADE4B210FC7A9E8AB8C420C470991C61BF7F636841F0AD62A4693
6F00D81F1178A278873471ABA7543EF8C71AAA864741F02E8FC7A5103B67A5EF
DFFF04E3453C8320AB4CA3A2B2244713A1A092E6B313BDDB8B0064453D0C4456
B92FC814C2A6E225CD1972B507524244965DC4EC23F23D806650592ADB018A8C
D5DDABA88F06C7E377288AF4C21C5DA54124AD132A6FA91590C0AB3E1EC91111
D38B192C42C83BD4B77CF750A3CEDE4BF9D338DDE953BC0EDA08D911D1484418
FCA263325E3B677C91F9B4688CF034BF582386CC9667ED8588572E13A4E9BEFA
942DD7CE2639A62F2B1990AA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3C8578EF9A20A0E06E
4F7ADDAF0E7D1E182D115BF1AD931977325AD391E72E2B13CC108E3726C11099
E2000623188AAAC9F3E233EB253BDD8B0A4759A66A113E066238B0086AC1B634
5ABFF90E4B5ED3FA69C22541981B2BFC9710AEF6B50A8BB53431C7B4D380D721
639E005D6B4688EE16BFF48443E7C9E5FB5BC5883E271CB03428966C96B6988B
2C9127404E8C64B122D405610B1207E61D6CB678BF414E64299C22D6B8DA233B
8E0E897EEAF81E43E962BD1DE1D8F24C8350761B0E688E433D01BCC9ADD5857E
BE9564F01D501D5F99C4272CA490100395D23DEC1BE59A6DE8D20B90C61434C9
062B6856C5C61184BD58F20E01B447F6140CB149BD370D59069F121FCA8AC937
4A86AF9E00E141BE1F2B0DEF30A4AC17817E4B58B1A8921B990F237E64A938AD
284A1DAB4F3BF58231B22F57219F9BF0E38585D631CF24EB1DDCBB1EA6E3DB31
88D7C3F8D9EAF27F7239557A2D2EA7AC5AED0DC02CDB0A2C9E4D64C24C3616F3
AA98D473C46596DC975C149FD66CE806C4529D92B0173BBCDA0D18B2956E0F51
179D7861557A915D2AA59CE21800265DAF737E83C7B4E9C41F80195E51A95158
F9CEAFA5ABDEBCDF332BC7107FEA70FDE84269ACCD15BB35D961846217D54B02
88995D6A3304BF88EEA7ACB9C548195606C4E601789F3562E89A69C40BEA9167
D3F49BF39DB2D57630674554F297DA605A079220182EA752B31072D46E091410
D021BFC8B8A1E4D6E2AC110AE143BE32F407F6AAD2FEE259839BF6AEE1B7FAC4
7597F8E3347EFB48F3DDE6E9198354D1D408AD5657D41F5D11FE6B805FBFA2E2
F92F6332DDAD4AE77D30758E37B67866D6CEA29B6027812977B8D68A570904DF
47550EA6773ED0DFE830F8B80BBECAA80EC33DC5ACDD4E683E5B688F5D1F14FA
A5778EE610C3FCF3429021E2A014F8B0B97BEAFFA7F3868E61B35678D54173BC
93A7BF29949C2814BB364594DA9ABAA2F2AEC654B0FB8C022B5775582D8CBA0D
D1AD19333BD74415F40C24E839E48B674B003359EAB05AC8A0ABD358DA7E999D
1AFE8359E410DE798A76FBF289C701E5DC730913F6FC2FD9693C34013B47C8CF
84670F3925D2FB69CA3C2C61029C9FD1066AD2C1D640A556E226D7056118CBBB
CB4C859D64B04B08751F3EFBDEF6F1F352DCBD682F73C89910D7A937D07ED50E
5DCA560DBAD3A96F708B639F62730A566E7D4D3C6C89BF3868707B721ED3ECD8
F185314C9D5B4E8456BC0B096F99F1A9AD67E40E0EBF19B06BFE1DE82BA32980
AA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /triangleright put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 63 /star put
dup 96 /lscript put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667D1074FE5415F315CFC941447D57558E64B9CC6A37302C970ACDBC0A
D848D2F2864AAD95C4C75300534FCFF57C408E26DB442341FE00C080A7D330C2
A9294F68492E863649894E4CC9B4AE0C25F6501700F77F7BDCECCFC5E68E6A93
520D0296CEBCDE4A7EA53F70CA38D95DF23CF42A72E801880BFFF351799B8FB4
686B14B3461CF7A953A1EC01AF4C6B62C55BCB74557B19D919B7D1AD90BB30DD
20E613167996D52F6506758D429086B6E7FF8E30720F44386FCA9146AE38D18B
ED06F5630D80311E8363503EB876E226876F3090FA91CE85A932FF9C5E54FD0A
6BE0E226417A3549ACAAFEC274B88BB325B037D3CA10FD0B3779990C9B16D612
7AF57D43DAC9FF5FAAC4586DBEE007C3B362C8700FA96222B00CD9FF8FDC488F
E146E50D4D9666B6ED3EC54A6463FEC984D76ABA63F5490F96760EE793EB6C0E
534CCAFCADDC03450F4185C47EF498E6288DC8FBD2C4E11F14A7A11D415ADC81
5C2BA0FFF8987DB1CAB0628C385123CB7B25AF2829F41198478ED3DFD2DFEF72
242C280D66E4DECDA7BC23FD19BEC78DBB6E3E2895C1BFD7262C4DC8EAC2B81C
CD8F9AE94DEA581CBDA2FC614F1E7E9034EECBF42304115AAC40D53E0FA1B1A6
7F16E6ADBED239F6A28A6F8D81497F4090253A158BE7A5702F42FF60FA3DA8B7
FA4C708620633F04019730F9C46E2AEA9E017CF67DCA2124121D08B32E79F750
C3C45DE1633FFC35F95F109559FDEB2473450E613D39E177DFCCD5FC7FC60A40
701BF0FCEC2604C6900424EB803EC620AE375C3A2ADB4BDE599CA8F258A89326
2C4B177D3C39078DFF63B847CA086DFE07A9542DC93B87FFE24CC51780781DE3
75CDF66004A2E8113FEB258C254E50161FF68D0CD494B73CD146003902219259
E01DFC7F995EBBC07C6E63B9D44A29D4A8529619A343A640A943CCCEAFD895A0
3807FA52831E8F9202495106BE3C7D3F7706E95D9E3C62B823FA2F006DB6F43A
DFB787BCF8C255C88EDEB85DB85894EE27374410E8C3DAADA5FC05378AE92FD0
64EA4BC4EED88B4DB2971D3EEB69A326E00E9E54D20953D9687D8EE73AB581C7
20759A3A882862EF1EBF3D0CFFA07D413C716A0B5E2C119911E37D866AF784FC
1465A75DF1E9CF0E7668CA9E9F532042C7AF308C910E4F3D661AF8A13BCEE35B
F04FF8F934061AFB8100983E2C607493854B68B717EE15036A31584395E474C7
FCF90488D1FB2DD6D48817054B6288FFF8CDA1BEFB9348DE36B0759FF1475688
15E527FCA6E7F8221F86968DCD4CD8DEE3B47565E553C3168693FC6A9707D353
DD6147CEDEBE98C6116D11388D606ED8DDC90E6897E30CC0085C0CF3D2DDCE3A
13717F52ECA7C12B801895FDA1557E05091499713B1BB59EE49D0ADFBEA51801
880C9C34BD089978C24F6D91182D768D04D81536B809B16EFF479BDA963AEAA8
362FE91A6D9CB658CADC9068CB385F1050F4D7F49519D51AE0E51B4668D3AAE3
A3580AC601868C7C90CBF060A6AD47B271BC276E19054D3AC6059509A76BD8FB
DEA497B78311041790621A2AE6687C4A59DB50FF8FD4C0E366D6258C70B9CE39
7C7181466E2FC7FC5802CD41902B8B0ACE954EE37D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (main.dvi)
@start /Fa 135[35 3[28 29 26 2[38 40 61 18 2[18 1[38
23 34 1[34 1[37 97[{}14 74.7198 /CMSS9 rf /Fc 134[28
28 2[32 22 24 21 1[32 31 32 49 15 30 1[15 32 31 19 27
1[27 32 30 97[{}20 58.1154 /CMSS8 rf /Fd 133[26 29 29
42 1[32 19 1[26 1[32 29 32 1[16 32 1[16 32 1[19 26 32
26 32 29 38[19 58[{TeXBase1Encoding ReEncodeFont}21 58.1154
/Times-Bold rf /Fe 173[25 82[{}1 52.3038 /CMEX10 rf /Ff
229[44 26[{}1 58.1154 /CMEX10 rf /Fg 203[37 1[28 1[11
44[21 32 1[32{}6 41.511 /CMSY10 rf /Fh 26[77 15[89 213[{}2
107.596 /Symbol rf /Fi 165[37 90[{}1 67.2477 /CMEX10
rf /Fj 150[35 35 41[66 1[66 1[66 1[66 14[60 60 22[45
45 12[31 31 2[{}12 74.7198 /CMEX10 rf /Fk 138[46 25 36
36 1[46 46 46 66 3[25 7[46 29[61 1[56 12[46 1[46 46 2[23
46[{TeXBase1Encoding ReEncodeFont}16 91.3242 /Times-Italic
rf /Fl 162[12 1[12 47[32 1[16 16 40[{}5 41.511 /CMR10
rf /Fm 135[21 2[21 12 16 14 1[21 21 21 32 12 21 1[12
4[21 18 1[18 44[21 1[21 21 21 48[{TeXBase1Encoding ReEncodeFont}19
41.511 /Times-Roman rf /Fn 26[30 229[{}1 41.511 /Symbol
rf /Fo 135[18 7[21 1[21 30 1[18 12 12 1[21 2[21 12[35
2[23 3[25 10[25 1[28 67[{TeXBase1Encoding ReEncodeFont}14
41.511 /Times-Italic rf /Fp 196[12 59[{}1 41.511 /CMMI10
rf /Fq 139[18 6[24 109[{.167 SlantFont}2 41.511 /Symbol
rf /Fr 149[21 29 29 47[42 1[0 3[50 16[75 7[58 3[58 58
4[37 11[37 58 21 58{}15 74.7198 /CMSY10 rf /Fs 162[16
1[16 29[45 17[45 1[23 23 40[{}6 58.1154 /CMR10 rf /Ft
162[21 1[21 29[58 17[58 1[29 29 40[{}6 74.7198 /CMR10
rf /Fu 26[53 160[46 68[{}2 74.7198 /Symbol rf /Fv 159[31
34[37 1[21 21 58[{}4 74.7198 /CMMI10 rf /Fw 73[37 65[33
2[39 3[43 41 10[47 97[{.167 SlantFont}6 74.7198 /Symbol
rf /Fx 172[33 3[48 1[55 3[22 1[48 3[44 10[33 7[33 3[17
4[22 39[{TeXBase1Encoding ReEncodeFont}10 66.4176 /Times-Italic
rf /Fy 105[33 28[33 1[48 33 33 18 26 22 33 33 33 33 52
18 33 1[18 33 33 22 29 33 29 33 29 9[63 1[48 41 37 2[37
2[59 9[44 1[48 7[33 33 33 33 33 2[33 33 33 18 17 22 17
7[33 33[37 2[{TeXBase1Encoding ReEncodeFont}46 66.4176
/Times-Roman rf /Fz 133[29 33 33 50 33 37 21 29 29 1[37
37 37 54 21 33 21 21 37 37 21 33 37 33 37 37 9[62 46
54 42 37 46 1[46 54 50 62 42 2[25 54 54 46 46 54 50 46
46 3[50 8[37 1[37 37 37 21 19 25 19 2[25 25 37[37 2[{
TeXBase1Encoding ReEncodeFont}57 74.7198 /Times-Italic
rf /FA 105[37 27[33 37 37 54 37 42 25 29 33 1[42 37 42
62 21 42 1[21 42 37 25 33 42 33 42 37 8[54 75 54 54 50
42 54 1[46 58 54 71 50 2[29 58 58 46 50 54 54 50 54 3[43
2[25 37 37 37 37 37 37 37 37 37 37 21 19 25 19 2[25 25
36[42 42 2[{TeXBase1Encoding ReEncodeFont}66 74.7198
/Times-Bold rf /FB 104[75 37 1[33 33 24[33 37 37 54 37
37 21 29 25 37 37 37 37 58 21 37 21 21 37 37 25 33 37
33 37 33 1[37 1[25 1[25 2[54 71 54 54 46 42 50 54 42
54 54 66 46 54 29 25 54 54 42 46 54 50 50 54 1[33 1[42
1[21 21 37 37 37 37 37 37 37 37 37 37 21 19 25 19 2[25
25 25 1[62 33[42 42 2[{TeXBase1Encoding ReEncodeFont}81
74.7198 /Times-Roman rf /FC 133[44 50 50 72 1[55 33 39
44 1[55 50 55 83 28 1[33 28 55 50 33 44 55 44 55 50 6[66
72 1[100 72 72 66 55 72 1[61 78 72 94 66 78 1[39 78 78
61 66 72 72 66 72 6[33 50 50 50 50 50 50 50 50 50 50
1[25 33 41[55 3[{TeXBase1Encoding ReEncodeFont}60 99.6264
/Times-Bold rf /FD 134[42 42 1[42 46 23 42 28 2[46 46
4[18 46 1[23 46 1[42 1[46 11[60 51 1[60 4[69 11[55 65[{
TeXBase1Encoding ReEncodeFont}20 83.022 /Helvetica rf
/FE 121[29 11[26 29 29 42 29 29 16 23 19 29 29 29 29
45 16 29 16 16 29 29 19 26 29 26 29 26 1[29 1[19 1[19
36 42 42 55 42 1[36 32 39 42 32 42 42 52 36 42 23 19
42 42 32 36 42 39 39 42 3[33 1[16 16 29 29 29 29 29 29
29 29 29 29 16 15 19 15 2[19 19 19 35[32 32 2[{
TeXBase1Encoding ReEncodeFont}77 58.1154 /Times-Roman
rf /FF 26[41 160[36 68[{}2 58.1154 /Symbol rf /FG 149[16
23 23 29 29 45[32 1[0 3[39 46[29 45 1[45{}11 58.1154
/CMSY10 rf /FH 133[23 26 26 39 26 29 16 23 23 29 29 29
29 42 16 26 16 16 29 29 16 26 29 26 29 29 8[36 48 36
1[32 29 36 1[36 42 39 48 32 39 26 19 42 42 36 36 42 39
36 36 6[19 6[29 29 2[16 15 19 15 2[19 19 37[29 2[{
TeXBase1Encoding ReEncodeFont}58 58.1154 /Times-Italic
rf /FI 192[29 45 1[45 16 16 11[29 46[{}6 58.1154 /CMMI10
rf /FJ 139[26 2[30 3[33 7[26 3[37 97[{.167 SlantFont}5
58.1154 /Symbol rf /FK 130[33 1[33 50 50 50 2[55 28 50
33 2[55 55 83 22 1[22 22 55 55 28 55 55 50 1[55 6[61
66 6[72 78 3[83 55 6[66 4[101 17[28 1[28 44[{
TeXBase1Encoding ReEncodeFont}32 99.6264 /Helvetica rf
/FL 133[75 2[116 2[50 83 58 1[91 91 91 133 42 83 1[42
2[50 83 91 83 91 83 9[141 6[100 116 108 78[{
TeXBase1Encoding ReEncodeFont}22 149.44 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Title () /Subject () /Creator (LaTeX with hyperref package)
/Author () /Producer (dvips + Distiller) /Keywords () /DOCINFO pdfmark
end
 0 0 a -152 -359
a
SDict begin H.S end
 -152 -359 a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 -152
-359 a 472 107 a FL(Predictab)o(le)41 b(P)l(erf)m(ormance)h
(Optimization)e(f)m(or)1278 273 y(Wireless)h(Netw)m(orks)510
611 y FK(Y)n(i)29 b(Li)702 584 y FI(?)881 611 y FK(Lili)f(Qiu)1185
584 y FI(?)1364 611 y FK(Y)n(in)h(Zhang)1815 584 y FI(?)1995
611 y FK(Ratul)f(Mahajan)2635 584 y FE(\206)2815 611
y FK(Er)q(ic)h(Rozner)3336 584 y FI(?)709 708 y FD(Univ)n(ersity)23
b(of)g(T)-10 b(e)n(xas)22 b(at)h(A)n(ustin)1744 681 y
FI(?)2423 708 y FD(Microsoft)g(Research)3139 681 y FE(\206)322
807 y FK({ylee)o(,lili,yzhang,erozner}@cs)o(.ute)m(xas)o(.edu)238
b(r)o(atul@microsoft.com)-152 1119 y
SDict begin [ /Count 0 /Dest (section.1) cvn /Title (1 Introduction)
/OUT pdfmark end
 -152 1119 a -152
1119 a
SDict begin [ /Count 0 /Dest (section.2) cvn /Title (2 Motivation)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (section.3) cvn /Title (3 Approach) /OUT
pdfmark end
 -152 1119 a -152 1119
a
SDict begin [ /Count 3 /Dest (section.4) cvn /Title (4 Our Model) /OUT
pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 2 /Dest (subsection.4.1) cvn /Title (4.1 Basic Model of 802.11 DCF)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (subsubsection.4.1.1) cvn /Title (4.1.1 Assumptions)
/OUT pdfmark end
 -152
1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (subsubsection.4.1.2) cvn /Title (4.1.2 Constraints)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (subsection.4.2) cvn /Title (4.2 Extensions to the Basic Model)
/OUT pdfmark end
 -152 1119
a -152 1119 a
SDict begin [ /Count 0 /Dest (subsection.4.3) cvn /Title (4.3 Model Initialization)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 4 /Dest (section.5) cvn /Title (5 Model-Driven Optimization)
/OUT pdfmark end
 -152 1119 a -152
1119 a
SDict begin [ /Count 0 /Dest (subsection.5.1) cvn /Title (5.1 Flow Throughput Feasibility Testing)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (subsection.5.2) cvn /Title (5.2 Fair Rate Allocation)
/OUT pdfmark end
 -152 1119 a -152 1119
a
SDict begin [ /Count 0 /Dest (subsection.5.3) cvn /Title (5.3 Total Throughput Maximization)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (subsection.5.4) cvn /Title (5.4 Discussion)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 3 /Dest (section.6) cvn /Title (6 Evaluation Methodology)
/OUT pdfmark end
 -152
1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (subsection.6.1) cvn /Title (6.1 Strawman: Conflict Graph Model)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (subsection.6.2) cvn /Title (6.2 Simulation Experiments)
/OUT pdfmark end
 -152 1119
a -152 1119 a
SDict begin [ /Count 0 /Dest (subsection.6.3) cvn /Title (6.3 Testbed Experiments)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 2 /Dest (section.7) cvn /Title (7 Model Validation)
/OUT pdfmark end
 -152 1119 a -152
1119 a
SDict begin [ /Count 0 /Dest (subsection.7.1) cvn /Title (7.1 Simulation Experiments)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (subsection.7.2) cvn /Title (7.2 Testbed Experiments)
/OUT pdfmark end
 -152 1119 a -152 1119
a
SDict begin [ /Count 2 /Dest (section.8) cvn /Title (8 Performance Optimization)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (subsection.8.1) cvn /Title (8.1 Maximizing Fairness)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (subsection.8.2) cvn /Title (8.2 Maximizing Total Throughput)
/OUT pdfmark end
 -152
1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (section.9) cvn /Title (9 The role of routing)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (section.10) cvn /Title (10 Related Work)
/OUT pdfmark end
 -152 1119
a -152 1119 a
SDict begin [ /Count 0 /Dest (section.11) cvn /Title (11 Conclusion)
/OUT pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ /Count 0 /Dest (section.12) cvn /Title (12 References)
/OUT pdfmark end
 -152 1119 a -152
1119 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseOutlines  /DOCVIEW
pdfmark end
 -152 1119 a -152 1119 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 -152 1119 a -152 1119
a
SDict begin H.S end
 -152 1119 a -152 1119 a
SDict begin 10.5 H.A end
 -152 1119 a -152 1119 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark
end
 -152
1119 a 83 x FC(ABSTRA)-5 b(CT)-152 1236 y
SDict begin H.S end
 -152 1236 a
-152 1236 a
SDict begin 10.5 H.A end
 -152 1236 a -152 1236 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark
end
 -152 1236 a 86 x
FB(W)f(e)20 b(present)g(a)g(no)o(v)o(el)g(approach)h(to)f(optimize)g
(the)g(performance)h(of)f(IEEE)-152 1409 y(802.11-based)32
b(multi-hop)f(wireless)e(netw)o(orks.)57 b(A)30 b(unique)h(feature)f
(of)-152 1496 y(our)21 b(approach)i(is)d(that)g(it)g(enables)i(an)f
(accurate)g(prediction)h(of)e(the)h(result-)-152 1583
y(ing)27 b(throughput)h(of)e(indi)n(vidual)h(\003o)n(ws.)45
b(At)25 b(its)h(heart)g(lies)g(a)g(simple)h(yet)-152
1671 y(realistic)j(model)g(of)g(the)g(netw)o(ork)g(that)g(captures)h
(interference,)i(traf)n(\002c,)-152 1758 y(and)27 b(MA)m(C-induced)g
(dependencies.)47 b(Unless)26 b(properly)g(accounted)i(for)m(,)-152
1845 y(these)c(dependencies)h(lead)f(to)f(unpredictable)h(beha)o
(viors.)37 b(F)o(or)22 b(instance,)-152 1932 y(we)28
b(sho)n(w)h(that)e(e)n(v)o(en)i(a)f(simple)g(netw)o(ork)h(of)f(tw)o(o)g
(links)g(with)f(one)i(\003o)n(w)-152 2019 y(is)22 b(vulnerable)i(to)e
(se)n(v)o(ere)h(performance)g(de)o(gradation.)34 b(W)-6
b(e)22 b(design)h(algo-)-152 2107 y(rithms)18 b(that)g(b)o(uild)f(on)i
(this)e(model)i(to)f(optimize)g(the)g(netw)o(ork)g(for)g(f)o(airness)
-152 2194 y(and)25 b(throughput.)41 b(Gi)n(v)o(en)25
b(traf)n(\002c)e(demands)j(as)e(input,)i(these)e(algorithms)-152
2281 y(compute)e(rates)e(at)g(which)g(indi)n(vidual)h(\003o)n(ws)f
(must)h(send)g(to)f(meet)g(the)g(ob-)-152 2368 y(jecti)n(v)o(e.)46
b(Ev)n(aluation)27 b(using)h(a)e(multi-hop)h(wireless)f(testbed)h(as)g
(well)f(as)-152 2455 y(simulations)f(sho)n(w)g(that)f(our)g(approach)i
(is)e(v)o(ery)g(ef)n(fecti)n(v)o(e.)39 b(When)25 b(opti-)-152
2542 y(mizing)c(for)f(f)o(airness,)h(our)g(methods)g(result)f(in)g
(close)h(to)f(perfect)h(f)o(airness.)-152 2630 y(When)g(optimizing)g
(for)g(throughput,)h(the)o(y)f(lead)g(to)g(100-200\045)h(impro)o(v)o
(e-)-152 2717 y(ment)d(for)g(UDP)f(traf)n(\002c)h(and)g(10-50\045)h
(for)f(TCP)f(traf)n(\002c.)-152 2912 y FC(Categories)25
b(and)g(Subject)i(Descriptors)-152 2966 y
SDict begin H.S end
 -152 2966 a
-152 2966 a
SDict begin 10.5 H.A end
 -152 2966 a -152 2966 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark
end
 -152 2966 a 67 x
FB(C.2.1)j([)p FA(Computer)m(-Communication)f(Netw)o(orks)p
FB(]:)45 b(Netw)o(ork)30 b(Archi-)-152 3120 y(tecture)24
b(and)h(Design\227)p Fz(W)l(ir)m(eless)f(communication)p
FB(;)k(C.4)23 b([)p FA(P)o(erf)n(ormance)-152 3207 y(of)c(Systems)p
FB(]:)k([Modeling)e(techniques])-152 3343 y FC(General)k(T)-9
b(erms)-152 3377 y
SDict begin H.S end
 -152 3377 a -152 3377 a
SDict begin 10.5 H.A end
 -152 3377
a -152 3377 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.3) cvn H.B /DEST pdfmark
end
 -152 3377 a 86 x FB(Algorithms,)19 b(Experimentation,)h
(Measurement,)g(Performance)-152 3598 y FC(K)n(eyw)o(ords)-152
3652 y
SDict begin H.S end
 -152 3652 a -152 3652 a
SDict begin 10.5 H.A end
 -152 3652 a -152 3652
a
SDict begin [ /View [/XYZ H.V] /Dest (section*.4) cvn H.B /DEST pdfmark
end
 -152 3652 a 67 x FB(Multi-hop)c(wireless)e(netw)o(orks,)i(Modeling,)g
(Optimization,)f(Interference)-152 3814 y
SDict begin H.S end
 -152 3814 a
-152 3814 a
SDict begin 10.5 H.A end
 -152 3814 a -152 3814 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark
end
 -152 3814 a 100 x
FC(1.)100 b(INTR)m(ODUCTION)-77 4022 y FB(W)m(ireless)24
b(netw)o(orks)h(are)g(becoming)h(increasingly)f(ubiquitous)h(in)f(the)
-152 4109 y(form)d(of)f(WLANs,)f(city-wide)h(meshes,)i(and)f(sensor)g
(netw)o(orks.)31 b(But)21 b(e)o(x-)-152 4197 y(tracting)g(predictable)h
(performance)h(from)e(these)g(netw)o(orks)i(today)e(is)g(no-)-152
4284 y(toriously)27 b(hard.)46 b(A)26 b(single)h(ne)n(w)f(\003o)n(w)g
(can)h(lead)g(to)f(a)g(disproportionate)-152 4371 y(decline)18
b(in)e(netw)o(ork)i(performance.)24 b(Attempts)16 b(to)h(increase)g
(netw)o(ork)h(per)o(-)-152 4458 y(formance,)28 b(for)d(instance)h(by)f
(adding)i(relay)e(nodes)h(to)g(shorten)g(link)f(dis-)-152
4545 y(tances,)c(can)f(end)h(up)f(reducing)h(performance.)28
b(This)19 b(is)h(in)g(sharp)g(contrast)-152 4873 y Fy(Permission)26
b(to)f(mak)o(e)h(digital)i(or)d(hard)g(copies)i(of)e(all)h(or)f(part)g
(of)g(this)h(w)o(ork)f(for)-152 4948 y(personal)f(or)f(classroom)g(use)
f(is)g(granted)j(without)e(fee)h(pro)o(vided)g(that)f(copies)h(are)-152
5022 y(not)c(made)f(or)g(distrib)o(uted)i(for)e(pro\002t)g(or)g
(commercial)i(adv)n(antage)h(and)d(that)h(copies)-152
5097 y(bear)e(this)g(notice)g(and)g(the)f(full)h(citation)i(on)d(the)h
(\002rst)e(page.)22 b(T)-5 b(o)16 b(cop)o(y)i(otherwise,)g(to)-152
5172 y(republish,)g(to)e(post)f(on)h(serv)o(ers)g(or)g(to)g(redistrib)o
(ute)i(to)e(lists,)g(requires)i(prior)e(speci\002c)-152
5246 y(permission)i(and/or)h(a)e(fee.)-152 5321 y Fx(SIGCOMM'08,)h
Fy(August)g(17\22622,)f(2008,)g(Seattle,)i(W)-5 b(ashington,)18
b(USA.)-152 5396 y(Cop)o(yright)i(2008)d(A)m(CM)g
(978-1-60558-175-0/08/08)22 b(...$5.00.)2040 1202 y FB(to)29
b(wireline)f(netw)o(ork)i(management,)i(where)d(netw)o(ork)h(operators)
f(ha)o(v)o(e)2040 1289 y(man)o(y)20 b(ef)n(fecti)n(v)o(e)f(techniques)h
(to)f(predict)g(and)h(impro)o(v)o(e)f(performance.)2115
1376 y(W)-6 b(e)31 b(seek)h(to)f(de)n(v)o(elop)i(optimization)f
(techniques)h(for)e(wireless)g(net-)2040 1463 y(w)o(orks)24
b(that)f(enable)h(a)f(prediction)h(of)f(the)g(resulting)h(performance)g
(at)f(the)2040 1550 y(le)n(v)o(el)h(of)f(indi)n(vidual)i(\003o)n(ws.)37
b(As)24 b(moti)n(v)n(ating)g(e)o(xamples,)i(consider)e(three)2040
1637 y(basic)k(capabilities)g(that)g(are)g(not)g(a)o(v)n(ailable)g
(today)-5 b(,)30 b(and)f(to)f(our)g(kno)n(wl-)2040 1725
y(edge,)22 b(cannot)g(e)n(v)o(en)f(be)g(approximated)h(easily)f(for)g
(real)f(netw)o(orks.)30 b(First,)2040 1812 y(netw)o(ork)19
b(operators)g(should)g(be)g(able)f(to)g(predict)h(if)e(the)h(netw)o
(ork)h(can)g(sup-)2040 1899 y(port)c(the)g(current)g(or)g(a)g(planned)h
(traf)n(\002c)f(demand.)23 b(Second,)16 b(the)o(y)f(should)h(be)2040
1986 y(able)22 b(to)f(perform)h(\223what)g(if)t(\224)f(analysis)h(to)f
(predict)g(the)h(impact)g(of)f(con\002g-)2040 2073 y(uration)h(changes)
h(such)g(as)e(addition)h(of)g(ne)n(w)g(\003o)n(ws)f(or)h(routing)g
(changes.)2040 2160 y(Finally)-5 b(,)18 b(the)o(y)i(should)f(be)h(able)
f(to)g(predict)g(safe)g(sending)h(rates)f(of)g(v)n(arious)2040
2248 y(\003o)n(ws)g(based)h(on)f(polic)o(y)g(and)h(path)f(capacity)-5
b(.)2115 2335 y(W)f(e)19 b(sho)n(w)i(in)f(the)g(body)i(of)e(the)g
(paper)h(that)f(the)g(\002nal)g(capability)g(abo)o(v)o(e)2040
2422 y(is)f(especially)h(important)f(for)h(good)g(performance.)25
b(W)m(ithout)19 b(appropriate)2040 2509 y(rate-limiting,)24
b(netw)o(ork)h(throughput)h(can)e(decline)g(sharply)h(when)g(\003o)n
(ws)2040 2596 y(send)19 b(more)g(than)f(what)g(the)h(path)f(can)h
(support.)24 b(This)18 b(de)o(gradation)h(can)g(be)2040
2684 y(se)n(v)o(ere)f(e)n(v)o(en)f(in)g(a)g(simple)g(setting)g(of)g(a)g
(single)g(\003o)n(w)g(tra)o(v)o(ersing)g(tw)o(o)g(links.)2040
2771 y(End-to-end)28 b(congestion)h(control,)h Fz(e)o(.g)o(.)p
FB(,)e(using)g(TCP)-8 b(,)25 b(while)i(helpful,)j(is)2040
2858 y(not)19 b(suf)n(\002cient)g(to)g(pre)n(v)o(ent)h(this)e
(pathological)j(beha)o(vior)l(.)2115 2945 y(In)14 b(this)h(paper)m(,)g
(we)g(propose)h(a)e(no)o(v)o(el)h(model-dri)n(v)o(en)h(approach)g(for)e
(opti-)2040 3032 y(mizing)j(wireless)f(netw)o(orks.)23
b(W)-6 b(e)16 b(focus)g(on)h(static,)f(802.11-based,)j(multi-)2040
3119 y(hop)25 b(netw)o(orks,)g(though)h(we)d(belie)n(v)o(e)i(that)e
(the)h(general)h(methodology)h(is)2040 3207 y(applicable)f(to)f(other)g
(scenarios.)38 b(The)24 b(cornerstone)h(of)f(our)g(approach)i(is)2040
3294 y(a)j(ne)n(w)g(model)h(that)e(captures)i(the)f(comple)o(x)h
(interference,)h(traf)n(\002c,)g(and)2040 3381 y(MA)m(C-induced)c
(dependencies)h(in)d(the)g(netw)o(ork.)44 b(These)25
b(dependencies)2040 3468 y(are)16 b(the)f(underlying)i(cause)f(of)g
(unpredictable)h(beha)o(vior)l(.)22 b(Capturing)16 b(them)2040
3555 y(accurately)24 b(and)f(in)g(a)f(w)o(ay)h(that)g(subsequently)i
(allo)n(ws)d(for)h(optimization)2040 3642 y(is)c(the)g(fundamental)h
(challenge)g(in)f(ful\002lling)f(our)h(goal.)2115 3730
y(Despite)e(much)i(w)o(ork)f(on)g(interference)g(and)g(MA)m(C)f
(modeling,)i(none)f(of)2040 3817 y(the)g(e)o(xisting)h(models)g(for)f
(multi-hop)h(netw)o(orks)g(ful\002lls)e(our)i(need.)k(Man)o(y)2040
3904 y(e)o(xisting)g(models)h(mak)o(e)g(simplifying)f(assumptions)i
(about)e(signal)h(prop-)2040 3991 y(agation)f([)2307
3992 y
SDict begin H.S end
 2307 3992 a -1 x FB(13)2381 3940 y
SDict begin H.R end
 2381 3940 a
2381 3991 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.GK00) cvn H.B /ANN pdfmark end
 2381 3991 a FB(],)h(traf)n(\002c)d([)2672
3992 y
SDict begin H.S end
 2672 3992 a -1 x FB(10)2746 3940 y
SDict begin H.R end
 2746 3940 a
2746 3991 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.knightly-model) cvn H.B /ANN pdfmark end
 2746 3991 a FB(,)2789 3992 y
SDict begin H.S end
 2789 3992 a
-1 x FB(30)2863 3940 y
SDict begin H.R end
 2863 3940 a 2863 3991 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.sigcomm06-Reis) cvn H.B /ANN pdfmark end
 2863 3991
a FB(,)2906 3992 y
SDict begin H.S end
 2906 3992 a -1 x FB(8)2943 3940 y
SDict begin H.R end

2943 3940 a 2943 3991 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lui-model) cvn H.B /ANN pdfmark end
 2943 3991 a FB(,)2985 3992 y
SDict begin H.S end

2985 3992 a -1 x FB(27)3059 3940 y
SDict begin H.R end
 3059 3940 a 3059 3991
a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lili-mobicom07) cvn H.B /ANN pdfmark end
 3059 3991 a FB(],)j(topology)g([)3440 3991 y
SDict begin H.S end
 3440 3991
a FB(1)3477 3940 y
SDict begin H.R end
 3477 3940 a 3477 3991 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.bianchi) cvn H.B /ANN pdfmark end
 3477 3991
a FB(,)3519 3992 y
SDict begin H.S end
 3519 3992 a -1 x FB(18)3593 3940 y
SDict begin H.R end

3593 3940 a 3593 3991 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.Kumar-single-cell) cvn H.B /ANN pdfmark end
 3593 3991 a FB(,)3636 3992 y
SDict begin H.S end

3636 3992 a -1 x FB(8)3673 3940 y
SDict begin H.R end
 3673 3940 a 3673 3991
a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lui-model) cvn H.B /ANN pdfmark end
 3673 3991 a FB(,)3715 3992 y
SDict begin H.S end
 3715 3992 a -1 x FB(10)3789
3940 y
SDict begin H.R end
 3789 3940 a 3789 3991 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.knightly-model) cvn H.B /ANN pdfmark end
 3789 3991 a FB(],)g(or)e(the)2040
4078 y(MA)m(C)d(layer)h([)2420 4078 y
SDict begin H.S end
 2420 4078 a FB(14)2494
4028 y
SDict begin H.R end
 2494 4028 a 2494 4078 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.JPPQ03) cvn H.B /ANN pdfmark end
 2494 4078 a FB(].)k(These)19
b(assumptions)h(often)g(do)f(not)h(hold)f(for)h(real)e(net-)2040
4165 y(w)o(orks)23 b([)2269 4166 y
SDict begin H.S end
 2269 4166 a -1 x FB(17)2343
4115 y
SDict begin H.R end
 2343 4115 a 2343 4165 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.Kotz04) cvn H.B /ANN pdfmark end
 2343 4165 a FB(].)34 b(Man)o(y)23
b(models)g(also)f(ha)o(v)o(e)h(high)g(comple)o(xity)g(and)g(may)g(re-)
2040 4253 y(quire)c(an)h(e)o(xponential)g(number)g(of)f(constraints)g
([)3363 4253 y
SDict begin H.S end
 3363 4253 a FB(14)3437 4202 y
SDict begin H.R end
 3437 4202
a 3437 4253 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.JPPQ03) cvn H.B /ANN pdfmark end
 3437 4253 a FB(])g(or)g(states)g([)3772
4254 y
SDict begin H.S end
 3772 4254 a -1 x FB(27)3846 4202 y
SDict begin H.R end
 3846 4202 a
3846 4253 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lili-mobicom07) cvn H.B /ANN pdfmark end
 3846 4253 a FB(].)2115 4340 y(Our)14 b(model)h(strik)o(es)g
(a)f(balance)h(between)h(simplicity)e(and)h(realism.)21
b(Based)2040 4427 y(on)i(easily)g(collected)h(measurements)g(from)e
(the)h(netw)o(ork)h(itself,)f(it)f(char)o(-)2040 4514
y(acterizes)j(the)f(set)h(of)f(feasible)h(netw)o(ork)h
(con\002gurations)f(and)h(traf)n(\002c)e(as-)2040 4601
y(signments)k(using)f(v)o(ery)h(fe)n(w)e(constraints.)48
b(Gi)n(v)o(en)27 b Fz(n)g FB(links)g(that)g(are)f(ac-)2040
4689 y(ti)n(v)o(ely)i(sending)i(traf)n(\002c,)f(our)f(model)h(has)g
Fz(O)p Ft(\()p Fz(n)3311 4661 y FE(2)3344 4689 y Ft(\))f
FB(comple)o(xity)h(and)g(only)2040 4776 y Fz(O)p Ft(\()p
Fz(n)p Ft(\))18 b FB(constraints.)23 b(Despite)18 b(its)f(simplicity)-5
b(,)17 b(our)i(model)f(can)g(handle)h(real-)2040 4863
y(w)o(orld)24 b(comple)o(xities)g(such)h(as)f(hidden)h(terminals,)f
(non-uniform)h(traf)n(\002c,)2040 4950 y(multi-hop)20
b(\003o)n(ws,)e(and)i(non-binary)g(interference.)2115
5037 y(W)-6 b(e)14 b(then)h(de)n(v)o(elop)g(optimization)g(algorithms)g
(that)f(compute)i(rate-limits)2040 5124 y(for)23 b(\003o)n(ws)f
(according)i(to)e(the)h(speci\002ed)g(performance)h(objecti)n(v)o(e.)34
b(These)2040 5212 y(algorithms)17 b(tak)o(e)g(\003o)n(w)f(demands)i(as)
e(input)h(and)g(use)g(our)f(model)h(as)g(a)f(basic)2040
5299 y(b)o(uilding)24 b(block.)39 b(The)24 b(tw)o(o)f(performance)j
(objecti)n(v)o(es)e(that)g(we)f(consider)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152 -359
a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark
end
 -152 -359 a 290
x FB(in)16 b(this)f(paper)i(are)e(maximizing)i(f)o(airness)f(and)g
(maximizing)g(total)g(netw)o(ork)-152 19 y(throughput.)34
b(T)-6 b(o)22 b(our)h(kno)n(wledge,)h(such)e(goal-dri)n(v)o(en)i(and)e
(precise)h(opti-)-152 106 y(mization)d(for)e(multi-hop)i(wireless)e
(netw)o(orks)i(w)o(as)f(not)g(possible)h(before.)-77
193 y(Ev)n(aluation)d(using)h(a)e(multi-hop)i(wireless)e(testbed)h(and)
h(simulation)f(e)o(x-)-152 280 y(periments)29 b(sho)n(ws)f(that)g(our)g
(approach)h(is)f(highly)g(ef)n(fecti)n(v)o(e.)51 b(Across)28
b(a)-152 367 y(range)20 b(of)f(topology)h(and)g(traf)n(\002c)e
(con\002gurations,)i(it)e(is)h(able)g(to)g(accurately)-152
454 y(approximate)e(the)e(throughput)i(that)e(the)g(netw)o(ork)h
(yields.)22 b(It)15 b(rarely)g(under)o(-)-152 542 y(predicts,)j(and)g
(for)g(80\045)g(of)f(the)h(cases,)g(its)e(estimate)i(is)f(within)g
(20\045)h(of)g(the)-152 629 y(actual)23 b(throughput.)35
b(When)23 b(maximizing)g(f)o(airness)g(using)g(our)g(methods,)-152
716 y(we)i(achie)n(v)o(e)h(close)f(to)g(perfect)g(f)o(airness)g
(amongst)h(\003o)n(ws)f(for)g(both)g(UDP)-152 803 y(and)i(TCP)e(traf)n
(\002c.)45 b(When)26 b(maximizing)h(throughput,)j(we)c(\002nd)g(that)g
(our)-152 890 y(methods)d(can)f(impro)o(v)o(e)g(netw)o(ork)g
(throughput)h(by)f(100-200\045)h(for)f(UDP-)-152 977
y(based)j(traf)n(\002c)f(and)h(10-50\045)g(for)g(TCP-based)f(traf)n
(\002c.)38 b(Interestingly)-5 b(,)26 b(we)-152 1065 y(also)21
b(\002nd)f(in)g(our)g(e)o(xperiments)h(that)f(the)g(e)o(xact)h(choice)f
(of)h(routing)f(proto-)-152 1152 y(col)h(is)f(not)h(important)g(for)f
(good)i(performance;)g(what)f(matters)f(instead)h(is)-152
1239 y(that)e(\003o)n(ws)g(be)g(rate-limited)f(per)h(the)g(desired)h
(performance)g(goal.)-77 1326 y(In)d(summary)-5 b(,)19
b(our)f(w)o(ork)f(to)h(predictably)g(optimize)g(wireless)f(netw)o(orks)
-152 1413 y(mak)o(es)j(the)f(follo)n(wing)h(contrib)o(utions.)-40
1546 y Fr(\017)38 b FB(It)15 b(sho)n(ws)g(that)g(rate-limiting)g(\003o)
n(ws)g(to)g(le)n(v)o(els)g(that)g(the)g(netw)o(ork)h(can)35
1633 y(safely)29 b(support)g(is)f(critical)g(for)g(good)h(performance;)
35 b(otherwise,)35 1721 y(netw)o(ork)20 b(throughput)g(can)f(sharply)h
(de)o(grade)f(e)n(v)o(en)h(in)e(v)o(ery)i(simple)35 1808
y(settings)f(\(Section)550 1808 y
SDict begin H.S end
 550 1808 a FB(2)587
1757 y
SDict begin H.R end
 587 1757 a 587 1808 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.2) cvn H.B /ANN pdfmark end
 587 1808 a FB(\).)-40 1918
y Fr(\017)38 b FB(W)-6 b(e)18 b(de)n(v)o(elop)i(a)e(no)o(v)o(el)h
(approach)g(to)g(optimize)f(multi-hop)h(wireless)35 2005
y(netw)o(orks)f(\(Section)591 2006 y
SDict begin H.S end
 591 2006 a -1 x
FB(3)628 1954 y
SDict begin H.R end
 628 1954 a 628 2005 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.3) cvn H.B /ANN pdfmark end
 628 2005 a FB(\).)k(Our)17
b(approach)i(includes)f(a)f(simple)g(yet)g(re-)35 2092
y(alistic)k(model)g(of)g(netw)o(ork)h(throughput)h(under)f
(interference-)g(and)35 2179 y(MA)m(C-induced)31 b(dependencies)g
(\(Section)1202 2179 y
SDict begin H.S end
 1202 2179 a FB(4)1239 2129 y
SDict begin H.R end
 1239
2129 a 1239 2179 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.4) cvn H.B /ANN pdfmark end
 1239 2179 a FB(\).)54 b(W)-6 b(e)28
b(design)i(algo-)35 2266 y(rithms)24 b(that)g(use)h(this)f(model)h(to)f
(optimize)h(for)f(f)o(airness)h(amongst)35 2354 y(\003o)n(ws)19
b(and)g(for)g(throughput)i(\(Section)1061 2355 y
SDict begin H.S end
 1061
2355 a -1 x FB(5)1098 2303 y
SDict begin H.R end
 1098 2303 a 1098 2354 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.5) cvn H.B /ANN pdfmark end

1098 2354 a FB(\).)-40 2463 y Fr(\017)38 b FB(W)-6 b(e)24
b(e)n(v)n(aluate)i(our)g(approach)g(using)f(e)o(xtensi)n(v)o(e)h
(testbed)f(and)h(sim-)35 2551 y(ulation)31 b(based)g(e)o(xperiments)g
(\(Sections)1175 2552 y
SDict begin H.S end
 1175 2552 a -1 x FB(6)1212 2500
y
SDict begin H.R end
 1212 2500 a 1212 2551 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.6) cvn H.B /ANN pdfmark end
 1212 2551 a FB(\226)1249 2553
y
SDict begin H.S end
 1249 2553 a -2 x FB(9)1286 2500 y
SDict begin H.R end
 1286 2500 a 1286
2551 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.9) cvn H.B /ANN pdfmark end
 1286 2551 a FB(\).)57 b(The)30 b(e)n(v)n(aluation)35
2638 y(sho)n(ws)15 b(that)g(it)e(can)i(accurately)g(predict)g(netw)o
(ork)g(throughput,)i(achie)n(v)o(e)35 2725 y(close)23
b(to)g(perfect)g(f)o(airness,)h(and)g(substantially)f(impro)o(v)o(e)h
(netw)o(ork)35 2812 y(throughput.)-152 2899 y
SDict begin H.S end
 -152 2899
a -152 2899 a
SDict begin 10.5 H.A end
 -152 2899 a -152 2899 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark
end
 -152 2899 a 100
x FC(2.)100 b(MO)l(TIV)-13 b(A)k(TION)-77 3107 y FB(The)30
b(goal)h(of)f(our)h(w)o(ork)f(is)g(to)g(enable)h(systematic)g
(optimization)g(of)-152 3194 y(multi-hop)23 b(wireless)f(netw)o(orks,)j
(whose)e(resulting)f(performance)i(can)f(be)-152 3281
y(predicted)28 b(at)g(the)f(le)n(v)o(el)g(of)h(indi)n(vidual)g(\003o)n
(ws.)48 b(W)-6 b(e)27 b(moti)n(v)n(ate)h(this)f(goal)-152
3369 y(using)21 b(e)o(xamples)g(of)f(abilities)g(that)g(an)h(operator)f
(may)h(w)o(ant)f(b)o(ut)g(does)h(not)-152 3456 y(ha)o(v)o(e)27
b(today)-5 b(.)48 b(These)27 b(abilities)f(are)h(all)g(pretty)f(basic)i
(when)f(it)f(comes)i(to)-152 3543 y(managing)21 b(netw)o(orks)f(and)f
(are)g(a)o(v)n(ailable)g(in)g(wired)g(netw)o(orks)h(today)-5
b(.)-152 3581 y
SDict begin H.S end
 -152 3581 a -152 3581 a
SDict begin 10.5 H.A end
 -152 3581 a -152
3581 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.1) cvn H.B /DEST pdfmark
end
 -152 3581 a -58 3676 a FB(1.)37 b(Determine)16
b(whether)g(the)g(current)g(or)g(a)f(planned)j(traf)n(\002c)d(matrix)g
(can)35 3763 y(be)22 b(supported)i(by)e(the)g(netw)o(ork.)34
b(This)21 b(is)h(an)g(essential)g(capability)35 3850
y(for)29 b(netw)o(ork)h(planning)g(as)f(it)f(tells)h(the)g(operators)g
(when)h(to)f(add)35 3937 y(more)d(resources,)i Fz(e)o(.g)o(.)p
FB(,)e(additional)h(radios)f(on)g(orthogonal)h(chan-)35
4025 y(nels)19 b(or)g(directional)g(antennae)i(to)d(reduce)i
(interference.)-152 4025 y
SDict begin H.S end
 -152 4025 a -152 4025 a
SDict begin 10.5 H.A end
 -152
4025 a -152 4025 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.2) cvn H.B /DEST pdfmark
end
 -152 4025 a -58 4134 a FB(2.)37 b(Perform)15
b(\223what)h(if)t(\224)g(analysis)g(on)g(v)n(arious)h(con\002guration)f
(changes,)35 4222 y(to)f(judge)g(the)g(impact)g(of)g(a)g(change)h(on)f
(the)g(netw)o(ork.)22 b(Such)15 b(an)g(anal-)35 4309
y(ysis)g(should)h(be)f(able)g(to)f(answer)i(questions)f(such)h(as)f
(the)f(follo)n(wing.)35 4396 y(What)22 b(if)g(a)g(ne)n(w)g(\003o)n(w)g
(is)g(added)h(between)g(tw)o(o)g(nodes?)34 b(What)22
b(if)g(a)35 4483 y(particular)h(link)f(or)g(node)i(is)e(remo)o(v)o(ed)h
(from)g(the)f(netw)o(ork?)35 b(What)35 4570 y(if)18 b(a)h(particular)g
(routing)h(change)g(is)f(implemented?)-152 4585 y
SDict begin H.S end
 -152
4585 a -152 4585 a
SDict begin 10.5 H.A end
 -152 4585 a -152 4585 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.3) cvn H.B /DEST pdfmark
end
 -152 4585
a -58 4680 a FB(3.)37 b(Compute)22 b(and)g(cap)g(the)g(sending)g(rate)g
(of)f(indi)n(vidual)h(\003o)n(ws)g(based)35 4767 y(on)29
b(netw)o(ork)g(polices)f(and)h(path)g(capacity)-5 b(.)51
b(This)28 b(again)g(is)g(espe-)35 4855 y(cially)15 b(important)g(in)f
(wireless)h(netw)o(orks.)22 b(A)15 b(\003o)n(w)f(that)h(sends)g(more)35
4942 y(impacts)25 b(not)g(only)h(those)f(\003o)n(ws)g(that)g(it)f
(shares)i(links)f(with)f(\(as)h(is)35 5029 y(the)18 b(case)h(in)f
(wired)g(netw)o(orks\),)h(b)o(ut)f(also)h(man)o(y)g(other)f(\003o)n(ws)
g(in)h(the)35 5116 y(vicinity)24 b(due)h(to)f(interference.)39
b(More)24 b(importantly)-5 b(,)26 b(as)e(we)g(sho)n(w)35
5203 y(belo)n(w)-5 b(,)29 b(a)e(\003o)n(w)g(that)f(sends)i(more)f(than)
h(what)e(the)h(path)h(supports)35 5290 y(can)18 b(cause)h(a)f(sharp)g
(decline)g(in)g(throughput.)25 b(This)17 b(decline)h(is)g(rem-)35
5378 y(iniscent)h(of)g(congestion)i(collapse)e(in)g(wired)g(netw)o
(orks.)2115 -69 y(As)h(we)h(discuss)g(later)m(,)g(our)g(optimization)g
(strate)o(gy)g(relies)f(on)i(comput-)2040 19 y(ing)e(\003o)n(w)f(rates)
g(such)h(that)f(the)g(speci\002ed)h(performance)g(objecti)n(v)o(e)g(is)
f(met.)2040 106 y(Here,)d(we)f(sho)n(w)h(that)f(limiting)g(\003o)n(w)h
(rates)f(is)g(essential)g(to)h(obtaining)g(good)2040
193 y(performance)33 b(from)e(the)g(netw)o(ork.)60 b(W)m(ithout)31
b(it,)i(se)n(v)o(ere)f(performance)2040 280 y(de)o(gradation)20
b(can)g(occur)l(.)2040 409 y FA(UDP)c(traf\002c)97 b
FB(W)-6 b(e)16 b(illustrate)g(this)g(point)h(using)g(the)g(tw)o(o)f
(simple)h(topolo-)2040 496 y(gies)24 b(in)f(Figure)2483
496 y
SDict begin H.S end
 2483 496 a FB(1)2520 445 y
SDict begin H.R end
 2520 445 a 2520 496
a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.1) cvn H.B /ANN pdfmark end
 2520 496 a FB(\(a\).)36 b(Both)23 b(ha)o(v)o(e)h(one)g(reliable)f
(\(\223good\224\))i(link)e(and)h(one)2040 583 y(lossy)c
(\(\223bad\224\))h(link)f(b)o(ut)g(the)g(order)g(of)g(the)g(tw)o(o)g
(links)g(is)g(dif)n(ferent.)26 b(Using)2040 670 y(QualNet)f([)2343
671 y
SDict begin H.S end
 2343 671 a -1 x FB(28)2417 620 y
SDict begin H.R end
 2417 620 a 2417
670 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.qualnet) cvn H.B /ANN pdfmark end
 2417 670 a FB(],)i(we)e(simulated)g(the)h(case)f(of)g
Fz(S)h FB(sending)h(512-byte)f(UDP)2040 757 y(pack)o(ets)i(to)e
Fz(D)g FB(as)h(f)o(ast)f(as)h(possible.)46 b(Unless)27
b(otherwise)g(speci\002ed,)h(our)2040 845 y(e)o(xperiments)21
b(use)f(802.11a)i(and)e(6)g(Mbps)h(MA)m(C)f(bit)g(rate)g(throughout)h
(the)2040 932 y(paper)l(.)2115 1019 y(Figure)2329 1019
y
SDict begin H.S end
 2329 1019 a FB(1)2366 968 y
SDict begin H.R end
 2366 968 a 2366 1019 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.1) cvn H.B /ANN pdfmark end

2366 1019 a FB(\(b\))f(sho)n(ws)g(that)f(the)g(throughput)i(of)f(the)f
(tw)o(o)h(topologies)g(as)f(a)2040 1106 y(function)e(of)f(loss)h(rate)e
(on)i(the)f(bad)h(link)f(are)h(v)o(ery)f(dif)n(ferent.)23
b(At)15 b(a)h(loss)h(rate)2040 1193 y(of)i(0.5,)h(the)f(throughput)i
(of)e(the)h(good-bad)h(topology)f(is)f(less)g(than)h(half)f(of)2040
1280 y(the)g(bad-good)i(topology)-5 b(.)2115 1368 y(The)24
b(reason)i(for)e(this)g(disparity)h(is)f(the)h(follo)n(wing.)40
b(F)o(or)24 b(a)h(successful)2040 1455 y(reception)20
b(in)f(the)g(good-bad)i(topology)-5 b(,)20 b Fz(S)g FB(needs)g(to)f
(transmit)f(a)h(pack)o(et)h(to)2040 1542 y Fz(R)h FB(only)g(once,)h(b)o
(ut)f Fz(R)g FB(has)g(to)g(transmit)g(to)g Fz(D)f FB(more)i(than)f
(once.)30 b(Since)21 b(the)2040 1629 y(802.11)e(MA)m(C)e(allocates)h
(the)f(medium)h(f)o(airly)f(among)i Fz(S)f FB(and)g Fz(R)e
FB(under)j(sat-)2040 1716 y(urated)e(demands,)i(the)e(incoming)g(traf)n
(\002c)g(at)f Fz(R)g FB(is)h(more)g(than)g(the)g(outgoing)2040
1803 y(traf)n(\002c,)g(and)i(man)o(y)g(pack)o(ets)h(sent)e(by)h
Fz(S)g FB(are)f(e)n(v)o(entually)h(dropped)h(at)e Fz(R)g
FB(due)2040 1891 y(to)k(queue)g(o)o(v)o(er\003o)n(w)-5
b(.)32 b(These)22 b(w)o(asted)g(transmissions)g(of)g
Fz(S)g FB(compete)h(with)2040 1978 y(those)e(from)g Fz(R)e
FB(and)j(reduce)f(the)f(throughput)j(of)d(the)h(good-bad)h(topology)-5
b(.)2040 2065 y(Such)26 b(w)o(astage)g(does)g(not)f(e)o(xist)h(in)f
(the)g(bad-good)j(topology)e(because)h Fz(R)2040 2152
y FB(can)19 b(send)h(all)f(incoming)g(traf)n(\002c.)2115
2239 y(This)f(problem)i(cannot)g(be)f(solv)o(ed)h(by)f(R)l(TS/CTS)d
(because)k(both)f(trans-)2040 2327 y(mitters)g(can)i(hear)f(each)g
(other)h(and)f(there)g(is)g(no)g(hidden)h(terminal.)26
b(More-)2040 2414 y(o)o(v)o(er)m(,)g(simply)g(changing)g(the)f(MA)m(C)g
(allocation)g(polic)o(y)h(will)e(not)h(\002x)f(the)2040
2501 y(problem)19 b(in)g(the)g(general)g(case)g(because)g(the)g
(bottleneck)h(can)f(be)g(multiple)2040 2588 y(hops)h(a)o(w)o(ay)f(from)
g(the)g(source.)2115 2675 y(The)24 b(w)o(astage)h(in)g(the)f(good-bad)j
(topology)e(leads)g(to)f(a)h(sharp)g(decline)2040 2762
y(in)19 b(throughput)h(as)e(the)h(sending)h(rate)e(is)g(increased.)24
b(Figure)3639 2762 y
SDict begin H.S end
 3639 2762 a FB(1)3676 2712 y
SDict begin H.R end
 3676
2712 a 3676 2762 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.1) cvn H.B /ANN pdfmark end
 3676 2762 a FB(\(c\))19 b(plots)f(the)2040
2850 y(throughput)e(of)f(the)f(tw)o(o)h(topologies)h(as)e
Fz(S)h FB(increases)g(its)f(sending)i(rate.)21 b(The)2040
2937 y(loss)f(rate)g(is)f(con\002gured)i(to)f(0.5.)26
b(In)20 b(the)f(good-bad)j(topology)-5 b(,)22 b(increasing)2040
3024 y(the)j(sending)h(rate)e(be)o(yond)j(a)d(threshold)i(sharply)f(de)
o(grades)h(throughput.)2040 3111 y(This)17 b(threshold)i(represents)f
(the)f(sending)i(rate)e(of)h Fz(S)g FB(at)f(which)h Fz(R)f
FB(can)h(relay)2040 3198 y(all)g(recei)n(v)o(ed)i(pack)o(ets.)k(Be)o
(yond)c(it,)d Fz(R)h FB(cannot)i(k)o(eep)g(up)f(as)g(the)f(medium)i(is)
2040 3285 y(increasingly)h(occupied)g(by)g(the)f(transmissions)g(from)g
Fz(S)h FB(that)f(are)g(e)n(v)o(entu-)2040 3373 y(ally)e(dropped.)24
b(The)18 b(throughput)i(stabilizes)d(when)i(the)f(medium)h(usage)f(of)
2040 3460 y Fz(R)g FB(decreases)i(to)f(half.)2115 3547
y(The)c(graph)h(also)f(sho)n(ws)h(that)f(the)g(tw)o(o)g(topologies)h
(ha)o(v)o(e)g(the)f(same)g(max-)2040 3634 y(imum)k(capacity)-5
b(,)20 b(b)o(ut)f(in)g(the)g(good-bad)i(case,)e(it)f(can)i(be)f(achie)n
(v)o(ed)h(only)g(if)2040 3721 y(we)f(limit)f Fz(S)i FB(to)g(the)f
(threshold)h(sending)g(rate.)k(Ho)n(we)n(v)o(er)m(,)c(none)g(of)g(the)f
(cur)o(-)2040 3808 y(rent)27 b(routing)h(protocols)g(gi)n(v)o(e)g(rate)
f(feedback.)49 b(Moreo)o(v)o(er)29 b(the)o(y)e(cannot)2040
3896 y(e)n(v)o(en)18 b(distinguish)f(between)h(these)f(tw)o(o)g(paths.)
23 b(The)17 b(path)g(quality)g(as)g(mea-)2040 3983 y(sured)j(by)f
(current)g(protocols)h(will)e(be)h(the)g(same)g(for)g(both)h
(topologies.)2115 4070 y(This)29 b(sharp)i(decline)f(in)g(throughput)h
(is)f(reminiscent)g(of)g(congestion)2040 4157 y(collapse)c(in)g(the)f
(Internet.)43 b(But)26 b(it)e(is)h(unique)i(in)f(that)f(it)g(is)g
(caused)h(by)g(a)2040 4244 y(single)21 b(\003o)n(w)g(o)o(v)o(er)g(a)g
(v)o(ery)g(simple)g(topology)-5 b(.)31 b(Kno)n(wn)21
b(e)o(xamples)h(of)f(con-)2040 4332 y(gestion)g(collapse)g(in)g(wired)f
(netw)o(orks)h([)3128 4333 y
SDict begin H.S end
 3128 4333 a -1 x FB(6)3165
4281 y
SDict begin H.R end
 3165 4281 a 3165 4332 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.sally-e2e) cvn H.B /ANN pdfmark end
 3165 4332 a FB(])g(in)m(v)o(olv)o(e)g
(more)f(comple)o(x)i(con-)2040 4419 y(\002gurations.)32
b(A)22 b(k)o(e)o(y)g(dif)n(ference)h(is)e(that)h(the)g(capacity)h(of)e
(the)h(bottleneck)2040 4506 y(link)e(in)f(a)g(wired)h(netw)o(ork)g(is)f
(not)g(impacted)i(by)e(other)h(links,)f(b)o(ut)h(in)f(wire-)2040
4593 y(less)i(netw)o(orks)h(interference)g(reduces)g(bottleneck)g
(capacity)g(when)g(other)2040 4680 y(links)d(are)g(acti)n(v)o(e.)2115
4767 y(Figure)2339 4767 y
SDict begin H.S end
 2339 4767 a FB(2)2376 4717
y
SDict begin H.R end
 2376 4717 a 2376 4767 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.2) cvn H.B /ANN pdfmark end
 2376 4767 a 29 w FB(con\002rms)29
b(that)g(this)f(pathology)j(can)e(be)g(replicated)h(in)e(the)2040
4855 y(more)h(realistic)e(testbed)i(setting)f(as)h(well.)50
b(W)-6 b(e)28 b(emulate)h(dif)n(ferent)f(loss)2040 4942
y(rates)18 b(in)h(the)g(testbed)g(by)g(changing)h(the)e(distance)i
(between)f(the)f(machines)2040 5029 y(and)27 b(v)n(arying)g(layers)g
(of)f(foil)g(around)h(the)f(wireless)g(cards.)45 b(Figure)3912
5029 y
SDict begin H.S end
 3912 5029 a FB(2)3949 4978 y
SDict begin H.R end
 3949 4978 a 3949
5029 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.2) cvn H.B /ANN pdfmark end
 3949 5029 a FB(\(a\))2040 5116 y(sho)n(ws)21 b(that)f(the)g(tw)o
(o)g(topologies)i(perform)e(dif)n(ferently)h(when)g Fz(S)f
FB(sends)h(as)2040 5203 y(f)o(ast)h(as)g(possible.)34
b(Figure)2767 5203 y
SDict begin H.S end
 2767 5203 a FB(2)2804 5153 y
SDict begin H.R end
 2804
5153 a 2804 5203 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.2) cvn H.B /ANN pdfmark end
 2804 5203 a FB(\(b\))22 b(sho)n(ws)h(the)f(sudden)i
(throughput)g(decline)2040 5290 y(in)c(the)f(good-bad)j(topology)f
(when)g(the)e(bad)i(link)e(has)h(roughly)h(50\045)g(loss.)2040
5378 y(The)f Fz(x)p FB(-axis)h(in)f(this)g(graph)i(denotes)f(the)f
(fraction)h(of)f(the)g(f)o(astest)h(possible)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152 -359
a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark
end
 -152 -359 a -152
-152 a
SDict begin H.S end
 -152 -152 a -152 -152 a
SDict begin 10.5 H.A end
 -152 -152 a -152 -152
a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.1.1) cvn H.B /DEST
pdfmark end
 -152 -152 a 280 661 a @beginspecial 34 @llx 601 @lly
280 @urx 722 @ury 1224 @rwi @setspecial
%%BeginDocument: NewFigs/good-bad.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 34 601 280 722
%%Title: good-bad
%%CreationDate: Thu Jan 25 11:56:55 2007
%%Creator: Tgif-4.1.43 written by William Chia-Wei Cheng (bill.cheng@acm.org)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 55 dict def
tgifdict begin

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/TGEL % tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%Page: 1 1

%%PageBoundingBox: 34 601 280 722
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% OVAL
0 SG
GS
   GS
      NP 88 168 24 24 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      96 176 M
      GS
        GS
        0
            /Courier FF [24 0 0 -24 0 0] MS
            (S) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier FF [24 0 0 -24 0 0] MS
            (S) SH
      GR
   GR

% OVAL
0 SG
GS
   GS
      NP 472 168 24 24 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      480 176 M
      GS
        GS
        0
            /Courier FF [24 0 0 -24 0 0] MS
            (D) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier FF [24 0 0 -24 0 0] MS
            (D) SH
      GR
   GR

% OVAL
0 SG
GS
   GS
      NP 280 168 24 24 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      288 176 M
      GS
        GS
        0
            /Courier FF [24 0 0 -24 0 0] MS
            (R) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier FF [24 0 0 -24 0 0] MS
            (R) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      112 160 M
      0 144 atan DU cos 10.000 MU 256 exch SU
      exch sin 10.000 MU 160 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      256 160 10.000 4.000 144 0 TGAT
   1 SG CP F
   0 SG
   NP
      256 160 10.000 4.000 144 0 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      304 160 M
      0 144 atan DU cos 10.000 MU 448 exch SU
      exch sin 10.000 MU 160 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      448 160 10.000 4.000 144 0 TGAT
   1 SG CP F
   0 SG
   NP
      448 160 10.000 4.000 144 0 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      176 144 M
      GS
        GS
        0
            /Courier FF [24 0 0 -24 0 0] MS
            (good) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier FF [24 0 0 -24 0 0] MS
            (good) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      368 144 M
      GS
        GS
        0
            /Courier FF [24 0 0 -24 0 0] MS
            (bad) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier FF [24 0 0 -24 0 0] MS
            (bad) SH
      GR
   GR

% OVAL
0 SG
GS
   GS
      NP 88 312 24 24 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      96 320 M
      GS
        GS
        0
            /Courier FF [24 0 0 -24 0 0] MS
            (S) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier FF [24 0 0 -24 0 0] MS
            (S) SH
      GR
   GR

% OVAL
0 SG
GS
   GS
      NP 472 312 24 24 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      480 320 M
      GS
        GS
        0
            /Courier FF [24 0 0 -24 0 0] MS
            (D) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier FF [24 0 0 -24 0 0] MS
            (D) SH
      GR
   GR

% OVAL
0 SG
GS
   GS
      NP 280 312 24 24 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      288 320 M
      GS
        GS
        0
            /Courier FF [24 0 0 -24 0 0] MS
            (R) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier FF [24 0 0 -24 0 0] MS
            (R) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      112 304 M
      0 144 atan DU cos 10.000 MU 256 exch SU
      exch sin 10.000 MU 304 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      256 304 10.000 4.000 144 0 TGAT
   1 SG CP F
   0 SG
   NP
      256 304 10.000 4.000 144 0 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      304 304 M
      0 144 atan DU cos 10.000 MU 448 exch SU
      exch sin 10.000 MU 304 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      448 304 10.000 4.000 144 0 TGAT
   1 SG CP F
   0 SG
   NP
      448 304 10.000 4.000 144 0 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      176 288 M
      GS
        GS
        0
            /Courier FF [24 0 0 -24 0 0] MS
            (bad) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier FF [24 0 0 -24 0 0] MS
            (bad) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      368 288 M
      GS
        GS
        0
            /Courier FF [24 0 0 -24 0 0] MS
            (good) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier FF [24 0 0 -24 0 0] MS
            (good) SH
      GR
   GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Thu Jan 25 11:56:55 2007
%%DocumentFonts: Courier
%%EOF

%%EndDocument
 @endspecial 736 748 a FB(\(a\))1430 661 y
SDict begin H.S end
 1430 661 a
1430 661 a
SDict begin 10.5 H.A end
 1430 661 a 1430 661 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.1.2) cvn H.B /DEST
pdfmark end
 1430 661 a @beginspecial
43 @llx 193 @lly 550 @urx 597 @ury 1224 @rwi @setspecial
%%BeginDocument: NewFigs/twohops_throughput.eps
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: ./twohops_throughput.eps
%%CreationDate: 03/02/2007  09:43:59
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    43   193   550   597
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 2.77778 def
portraitMode 0050 1700 csm

   70    41  1409  1122 MR c np
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 1601 1202 PR
1.38889 w
0 919 1125 0 0 -919 323 1009 4 MP
PP
-1125 0 0 919 1125 0 0 -919 323 1009 5 MP stroke
0.925926 w
DO
SO
1.38889 w
0 sg
 323 1009 mt 1448 1009 L
 323 1009 mt  323   90 L
 323 1009 mt  323  997 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 66.6667 FMSR

 305 1079 mt 
(0) s
 548 1009 mt  548  997 L
 502 1079 mt 
(0.2) s
 773 1009 mt  773  997 L
 727 1079 mt 
(0.4) s
 998 1009 mt  998  997 L
 952 1079 mt 
(0.6) s
1223 1009 mt 1223  997 L
1177 1079 mt 
(0.8) s
1448 1009 mt 1448  997 L
1430 1079 mt 
(1) s
 323 1009 mt  334 1009 L
 278 1033 mt 
(0) s
 323  779 mt  334  779 L
 204  803 mt 
(500) s
 323  549 mt  334  549 L
 167  573 mt 
(1000) s
 323  319 mt  334  319 L
 167  343 mt 
(1500) s
 323   90 mt  334   90 L
 167  114 mt 
(2000) s
 759 1142 mt 
(Loss rate) s
 138  815 mt  -90 rotate
(Throughput \(Kbps\)) s
90 rotate
gs 323 90 1126 920 MR c np
5.55556 w
11 2 11 1 12 2 11 2 11 2 11 1 12 1 11 3 
11 2 11 2 12 4 11 2 11 1 11 3 12 3 11 3 
11 3 11 5 12 4 11 1 11 3 11 6 12 4 11 3 
11 5 11 4 12 6 11 3 11 11 11 5 12 3 11 4 
11 8 11 7 12 10 11 7 11 8 11 4 12 11 11 9 
11 13 11 1 12 12 11 10 11 12 11 12 12 10 11 9 
11 11 11 12 12 16 11 12 11 16 11 14 12 10 11 13 
11 21 11 9 12 20 11 8 11 22 11 14 12 11 11 16 
11 16 11 16 12 16 11 14 11 15 11 20 12 12 11 20 
11 14 11 16 12 16 11 16 11 13 11 14 12 19 11 16 
11 13 11 18 12 14 11 15 11 17 11 15 12 13 11 16 
11 15 11 13 323 122 91 MP stroke
DO
11 4 11 6 12 5 11 5 11 6 11 5 12 6 11 6 
11 6 11 6 12 6 11 7 11 8 11 6 12 7 11 8 
11 7 11 9 12 9 11 9 11 8 11 8 12 10 11 10 
11 9 11 9 12 12 11 10 11 11 11 11 12 13 11 10 
11 12 11 10 12 15 11 11 11 12 11 14 12 12 11 14 
11 12 11 14 12 9 11 13 11 13 11 14 12 11 11 15 
11 12 11 11 12 15 11 13 11 10 11 13 12 11 11 10 
11 14 11 12 12 13 11 10 11 11 11 10 12 10 11 11 
11 10 11 11 12 9 11 10 11 7 11 10 12 11 11 7 
11 11 11 7 12 8 11 8 11 8 11 8 12 7 11 7 
11 8 11 7 12 7 11 7 11 7 11 8 12 6 11 6 
11 7 11 4 323 122 91 MP stroke
SO
1.38889 w
gr

1 sg
0 171 415 0 0 -171 1006 281 4 MP
PP
-415 0 0 171 415 0 0 -171 1006 281 5 MP stroke
0.925926 w
DO
SO
1.38889 w
0 sg
1006  281 mt 1421  281 L
1006  110 mt 1421  110 L
1006  281 mt 1006  110 L
1421  281 mt 1421  110 L
1006  281 mt 1421  281 L
1006  281 mt 1006  110 L
1006  281 mt 1421  281 L
1006  110 mt 1421  110 L
1006  281 mt 1006  110 L
1421  281 mt 1421  110 L
1118  179 mt 
(good-bad) s
gs 1006 110 416 172 MR c np
5.55556 w
86 0 1023 155 2 MP stroke
gr

5.55556 w
1118  261 mt 
(bad-good) s
gs 1006 110 416 172 MR c np
DO
86 0 1023 235 2 MP stroke
SO
1.38889 w
gr

1.38889 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%BoundingBox:    43   193   550   597
%%Pages: 001
%%EOF

%%EndDocument
 @endspecial 1884 748 a FB(\(b\))2581 661 y
SDict begin H.S end
 2581 661
a 2581 661 a
SDict begin 10.5 H.A end
 2581 661 a 2581 661 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.1.3) cvn H.B /DEST
pdfmark end
 2581 661 a @beginspecial
39 @llx 193 @lly 570 @urx 583 @ury 1224 @rwi @setspecial
%%BeginDocument: NewFigs/rate-control.eps
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: ./rate-control.eps
%%CreationDate: 03/02/2007  09:44:00
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    39   193   570   583
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 2.77778 def
portraitMode 0050 1700 csm

   61    79  1473  1084 MR c np
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 1601 1202 PR
1.38889 w
0 919 1171 0 0 -919 277 1009 4 MP
PP
-1171 0 0 919 1171 0 0 -919 277 1009 5 MP stroke
0.925926 w
DO
SO
1.38889 w
0 sg
 277 1009 mt 1448 1009 L
 277 1009 mt  277   90 L
 277 1009 mt  277  997 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 66.6667 FMSR

 259 1079 mt 
(0) s
 569 1009 mt  569  997 L
 495 1079 mt 
(1000) s
 862 1009 mt  862  997 L
 788 1079 mt 
(2000) s
1155 1009 mt 1155  997 L
1081 1079 mt 
(3000) s
1448 1009 mt 1448  997 L
1374 1079 mt 
(4000) s
 277 1009 mt  288 1009 L
 232 1033 mt 
(0) s
 277  804 mt  288  804 L
 158  828 mt 
(200) s
 277  600 mt  288  600 L
 158  624 mt 
(400) s
 277  396 mt  288  396 L
 158  420 mt 
(600) s
 277  192 mt  288  192 L
 158  216 mt 
(800) s
 572 1142 mt 
(Sending rate \(Kbps\)) s
 129  815 mt  -90 rotate
(Throughput \(Kbps\)) s
90 rotate
gs 277 90 1172 920 MR c np
5.55556 w
2 0 3 0 2 0 2 0 3 0 2 0 3 0 2 0 
2 0 3 0 2 0 3 0 2 0 2 0 3 0 2 0 
3 0 2 0 2 0 3 0 2 0 3 0 2 0 2 0 
3 0 2 2 3 -2 2 0 2 0 3 2 2 -2 3 0 
2 0 2 0 3 0 2 2 3 -2 2 0 2 -4 3 6 
2 -2 3 0 2 -4 2 6 3 -2 2 0 2 -4 3 6 
2 -2 3 -2 2 -2 2 0 3 4 2 -2 3 2 2 -4 
2 0 3 6 2 -2 3 -4 2 0 2 6 3 0 2 -6 
3 0 2 6 2 0 3 -2 2 -4 3 0 2 6 2 0 
3 -6 2 7 3 -7 2 6 2 0 3 -6 2 0 3 6 
2 0 2 1 3 -7 2 6 3 0 2 -6 2 0 3 6 
2 0 3 1 2 -7 2 7 3 -1 2 1 3 -7 2 7 
2 -7 3 6 2 -6 1212 611 100 MP stroke
3 7 2 -4 2 3 3 -4 2 5 3 -9 2 5 2 -3 
3 -2 2 10 3 -8 2 0 2 0 3 1 2 2 3 -3 
2 3 2 0 3 -1 2 3 3 -1 2 -5 2 6 3 -1 
2 0 3 5 2 0 2 -1 3 -4 2 2 3 -1 2 -1 
2 5 3 -3 2 -5 3 9 2 -9 2 10 3 -9 2 0 
3 -1 2 -2 2 6 3 4 2 2 3 -5 2 1 2 -4 
3 9 2 0 3 2 2 6 2 -6 3 3 2 9 2 -1 
3 -5 2 1 3 6 2 1 2 8 3 -2 2 -4 3 6 
2 5 2 -5 3 9 2 3 3 0 2 -4 2 4 3 3 
2 6 3 -5 2 6 2 0 3 3 2 1 3 3 2 -2 
2 6 3 -2 2 4 3 4 2 3 2 1 3 4 2 2 
3 -2 2 6 2 -7 3 5 2 5 3 3 2 -1 2 3 
3 1 2 3 3 12 974 498 100 MP stroke
2 -10 2 2 3 4 2 2 3 6 2 -3 2 7 3 -7 
2 6 3 1 2 5 2 4 3 -6 2 15 3 -5 2 -3 
2 5 3 -4 2 8 3 10 2 -1 2 -2 3 -8 2 10 
3 5 2 7 2 -2 3 4 2 -2 3 4 2 0 2 2 
3 0 2 8 3 -5 2 5 2 8 3 -14 2 7 3 6 
2 5 2 -8 3 5 2 5 3 2 2 0 2 6 3 1 
2 0 3 6 2 -6 2 6 3 -7 2 11 3 1 2 7 
2 2 3 -5 2 0 3 5 2 1 2 -3 3 9 2 1 
3 7 2 -9 2 9 3 -2 2 10 2 -7 3 8 2 -1 
3 -2 2 8 2 2 3 3 2 -4 3 3 2 7 2 -2 
3 3 2 8 3 -7 2 1 2 -2 3 6 2 -2 3 1 
2 10 2 -7 3 4 2 9 3 6 2 3 2 -2 3 4 
2 -2 3 3 2 1 737 318 100 MP stroke
2 6 3 -2 2 4 3 -9 2 14 2 -7 3 4 2 9 
3 -2 2 8 2 -3 3 8 2 -2 3 5 2 4 2 -2 
3 1 2 -3 3 1 2 11 2 -7 3 3 2 7 3 -5 
2 4 2 9 3 -7 2 11 3 2 2 -1 2 9 3 -6 
2 4 3 -3 2 7 2 -1 3 3 2 2 3 7 2 0 
2 0 3 7 2 -9 3 8 2 1 2 -5 3 10 2 -1 
3 3 2 6 2 -4 3 2 2 6 3 -1 2 1 2 9 
3 0 2 -4 3 1 2 3 2 -1 3 8 2 0 3 3 
2 3 2 5 3 4 2 0 3 -7 2 7 2 1 3 9 
2 -1 3 3 2 4 2 6 3 2 2 -3 3 1 2 2 
2 -2 3 4 2 3 2 6 3 -15 2 8 3 0 2 -1 
2 -6 3 -6 2 -6 3 -8 2 -8 2 -8 3 -9 2 -8 
3 -9 2 -8 2 -8 500 237 100 MP stroke
3 -8 2 -9 3 -8 2 -8 2 -9 3 -8 2 -8 3 -8 
2 -9 2 -8 3 -8 2 -9 3 -8 2 -8 2 -8 3 -9 
2 -8 3 -8 2 -8 2 -8 3 -9 2 -8 3 -9 2 -8 
2 -8 3 -9 2 -7 3 -9 2 -8 2 -8 3 -9 2 -8 
3 -9 2 -8 2 -8 3 -9 2 -8 3 -8 2 -9 2 -8 
3 -8 2 -9 3 -8 396 594 44 MP stroke
DO
2 -3 3 5 2 -5 2 5 3 0 2 -5 3 5 2 0 
2 0 3 0 2 -5 3 5 2 0 2 -5 3 5 2 0 
3 0 2 0 2 0 3 0 2 0 3 -5 2 5 2 -5 
3 5 2 0 3 0 2 0 2 0 3 -5 2 5 3 -5 
2 5 2 0 3 -5 2 5 3 -5 2 0 2 5 3 -5 
2 5 3 0 2 -5 2 5 3 -5 2 5 2 0 3 0 
2 0 3 0 2 -5 2 5 3 -5 2 5 3 0 2 0 
2 0 3 0 2 -4 3 4 2 -5 2 5 3 0 2 0 
3 0 2 0 2 -5 3 5 2 -5 3 5 2 0 2 -5 
3 5 2 -5 3 0 2 5 2 -5 3 5 2 0 3 -5 
2 5 2 -5 3 5 2 0 3 0 2 0 2 0 3 -5 
2 5 3 -5 2 5 2 0 3 0 2 0 3 0 2 -5 
2 5 3 -5 2 4 1212 134 100 MP stroke
3 1 2 -5 2 5 3 -5 2 0 3 5 2 -5 2 4 
3 -4 2 3 3 2 2 -5 2 5 3 0 2 -5 3 4 
2 1 2 -5 3 4 2 -4 3 5 2 0 2 0 3 -1 
2 -2 3 -2 2 4 2 -3 3 4 2 -5 3 5 2 -1 
2 1 3 -5 2 4 3 -4 2 5 2 -3 3 -1 2 1 
3 -2 2 2 2 2 3 -4 2 5 3 -5 2 0 2 4 
3 -3 2 3 3 0 2 1 2 -3 3 3 2 -1 2 0 
3 -2 2 2 3 -4 2 5 2 -1 3 1 2 -5 3 4 
2 -4 2 4 3 -4 2 2 3 2 2 -2 2 -1 3 0 
2 0 3 1 2 -2 2 0 3 4 2 -4 3 4 2 -4 
2 0 3 4 2 -2 3 -1 2 -2 2 1 3 2 2 -2 
3 2 2 2 2 1 3 -5 2 4 3 -3 2 3 2 -3 
3 4 2 -3 3 3 974 133 100 MP stroke
2 -3 2 -2 3 2 2 2 3 -4 2 1 2 3 3 -3 
2 3 3 -4 2 0 2 4 3 -4 2 2 3 2 2 -8 
2 8 3 -2 2 3 3 -5 2 5 2 -10 3 10 2 -3 
3 2 2 -4 2 5 3 -1 2 -9 3 9 2 1 2 -5 
3 2 2 -2 3 -1 2 5 2 -4 3 4 2 0 3 -3 
2 -6 2 0 3 5 2 2 3 -2 2 2 2 -2 3 -5 
2 9 3 -4 2 1 2 -1 3 3 2 -3 3 0 2 2 
2 0 3 0 2 -7 3 6 2 1 2 2 3 -3 2 4 
3 -10 2 8 2 0 3 -3 2 -1 2 5 3 -8 2 3 
3 -3 2 4 2 2 3 0 2 -7 3 4 2 -3 2 4 
3 0 2 0 3 6 2 -9 2 5 3 -1 2 -1 3 1 
2 0 2 -4 3 1 2 3 3 -1 2 4 2 -3 3 -7 
2 8 3 4 2 -7 737 139 100 MP stroke
2 2 3 1 2 0 3 5 2 -4 2 -3 3 -5 2 0 
3 1 2 11 2 -12 3 0 2 1 3 3 2 2 2 -4 
3 0 2 -2 3 5 2 2 2 -8 3 7 2 -3 3 6 
2 -2 2 2 3 -5 2 4 3 -5 2 4 2 -3 3 3 
2 -2 3 4 2 -7 2 8 3 -5 2 0 3 1 2 -1 
2 -1 3 6 2 -3 3 2 2 -1 2 0 3 0 2 -3 
3 -2 2 3 2 1 3 4 2 0 3 -4 2 -4 2 2 
3 2 2 -2 3 4 2 -1 2 0 3 -5 2 -2 3 9 
2 -7 2 0 3 4 2 -4 3 -2 2 4 2 4 3 -5 
2 2 3 0 2 0 2 0 3 1 2 1 3 6 2 -12 
2 0 3 6 2 -4 2 -2 3 -2 2 3 3 -3 2 -7 
2 -6 3 -7 2 -8 3 -8 2 -8 2 -9 3 -8 2 -8 
3 -8 2 -8 2 -9 500 237 100 MP stroke
3 -8 2 -8 3 -9 2 -8 2 -8 3 -9 2 -8 3 -8 
2 -9 2 -8 3 -8 2 -8 3 -9 2 -8 2 -8 3 -9 
2 -8 3 -8 2 -8 2 -9 3 -8 2 -8 3 -9 2 -8 
2 -8 3 -9 2 -8 3 -8 2 -9 2 -8 3 -8 2 -8 
3 -8 2 -9 2 -8 3 -9 2 -8 3 -8 2 -8 2 -9 
3 -8 2 -8 3 -8 396 593 44 MP stroke
SO
1.38889 w
gr

1 sg
0 170 415 0 0 -170 1006 989 4 MP
PP
-415 0 0 170 415 0 0 -170 1006 989 5 MP stroke
0.925926 w
DO
SO
1.38889 w
0 sg
1006  989 mt 1421  989 L
1006  819 mt 1421  819 L
1006  989 mt 1006  819 L
1421  989 mt 1421  819 L
1006  989 mt 1421  989 L
1006  989 mt 1006  819 L
1006  989 mt 1421  989 L
1006  819 mt 1421  819 L
1006  989 mt 1006  819 L
1421  989 mt 1421  819 L
1118  888 mt 
(good-bad) s
gs 1006 819 416 171 MR c np
5.55556 w
86 0 1023 863 2 MP stroke
gr

5.55556 w
1118  969 mt 
(bad-good) s
gs 1006 819 416 171 MR c np
DO
86 0 1023 944 2 MP stroke
SO
1.38889 w
gr

1.38889 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%BoundingBox:    39   193   570   583
%%Pages: 001
%%EOF

%%EndDocument
 @endspecial 3037 748 a FB(\(c\))-152 790 y
SDict begin H.S end
 -152 790
a -152 790 a
SDict begin 10.5 H.A end
 -152 790 a -152 790 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.1) cvn H.B /DEST pdfmark
end
 -152 790 a 147 x FA(Figur)o(e)25
b(1:)183 937 y
SDict begin H.S end
 183 937 a 183 937 a
SDict begin H.R end
 183 937 a 183 937
a
SDict begin [ /View [/XYZ H.V] /Dest (figure.1) cvn H.B /DEST pdfmark
end
 183 937 a 37 w FA(The)g(importance)h(of)g(rate)g(feedback.)43
b Ft(\()p Fz(a)p Ft(\))26 b FA(T)-6 b(w)o(o)26 b(topologies)g(that)f
(differ)g(in)g(wher)o(e)h(the)f(lossy)h(link)e(occurs.)44
b Ft(\()p Fz(b)p Ft(\))26 b FA(Thr)o(oughput)d(as)j(a)-152
1024 y(function)19 b(of)h(loss)g(rate)h(when)e Fz(S)i
FA(sends)e(as)i(fast)f(as)g(possible.)26 b Ft(\()p Fz(c)p
Ft(\))20 b FA(Thr)o(oughput)e(as)j(a)f(function)f(of)h(the)f(sending)g
(rate)i(when)e(the)h(loss)g(rate)g(of)h(the)e(bad)-152
1111 y(link)f(is)g(0.5.)-152 1172 y
SDict begin H.S end
 -152 1172 a -152
1172 a
SDict begin 10.5 H.A end
 -152 1172 a -152 1172 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.2.1) cvn H.B /DEST
pdfmark end
 -152 1172 a -137 1852
a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury 1166
@rwi @setspecial
%%BeginDocument: NewFigs/pe.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: pe.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Feb 28 19:59:14 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1368 720 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1368 1296 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 500) Rshow
grestore
1.000 UL
LTb
1368 1872 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
1368 2448 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 1500) Rshow
grestore
1.000 UL
LTb
1368 3024 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 2000) Rshow
grestore
1.000 UL
LTb
1368 3600 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 2500) Rshow
grestore
1.000 UL
LTb
1368 4176 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 3000) Rshow
grestore
1.000 UL
LTb
1368 4752 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 3500) Rshow
grestore
1.000 UL
LTb
1368 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
1971 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
2573 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 20) Cshow
grestore
1.000 UL
LTb
3176 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 30) Cshow
grestore
1.000 UL
LTb
3779 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 40) Cshow
grestore
1.000 UL
LTb
4381 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 50) Cshow
grestore
1.000 UL
LTb
4984 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 60) Cshow
grestore
1.000 UL
LTb
5587 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 70) Cshow
grestore
1.000 UL
LTb
6189 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 80) Cshow
grestore
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 90) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1368 720 M
5424 0 V
0 4032 V
-5424 0 V
0 -4032 V
LTb
240 2736 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Throughput \( Kbps \)) Cshow
grestore
grestore
LTb
4080 120 M
gsave 0 setgray
(Link Loss Rates \( % \)) Cshow
grestore
2.000 UP
2.000 UP
1.000 UL
LT0
LTb
5658 4569 M
gsave 0 setgray
(bad - good) Rshow
grestore
LT0
5802 4569 M
702 0 V
1892 4545 M
-24 28 V
4128 2493 L
139 -691 V
90 697 V
6497 1003 L
144 -95 V
1892 4545 Pls
1868 4573 Pls
4128 2493 Pls
4267 1802 Pls
4357 2499 Pls
6497 1003 Pls
6641 908 Pls
6153 4569 Pls
2.000 UP
1.000 UL
LT1
LTb
5658 4329 M
gsave 0 setgray
(good - bad) Rshow
grestore
LT1
5802 4329 M
702 0 V
-4690 92 R
54 -145 V
3610 1606 L
0 -648 V
1205 56 V
5478 756 L
705 75 V
1814 4421 Crs
1868 4276 Crs
3610 1606 Crs
3610 958 Crs
4815 1014 Crs
5478 756 Crs
6183 831 Crs
6153 4329 Crs
1.000 UL
LTb
1368 720 M
5424 0 V
0 4032 V
-5424 0 V
0 -4032 V
2.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 295 1939 a FB(\(a\))854 1852 y
SDict begin H.S end
 854 1852
a 854 1852 a
SDict begin 10.5 H.A end
 854 1852 a 854 1852 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.2.2) cvn H.B /DEST
pdfmark end
 854 1852 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: NewFigs/rl.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: rl.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Mar  1 22:28:40 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1368 720 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1368 1224 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 200) Rshow
grestore
1.000 UL
LTb
1368 1728 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 400) Rshow
grestore
1.000 UL
LTb
1368 2232 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 600) Rshow
grestore
1.000 UL
LTb
1368 2736 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 800) Rshow
grestore
1.000 UL
LTb
1368 3240 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
1368 3744 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 1200) Rshow
grestore
1.000 UL
LTb
1368 4248 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 1400) Rshow
grestore
1.000 UL
LTb
1368 4752 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
gsave 0 setgray
( 1600) Rshow
grestore
1.000 UL
LTb
1368 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
2453 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 0.2) Cshow
grestore
1.000 UL
LTb
3538 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 0.4) Cshow
grestore
1.000 UL
LTb
4622 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 0.6) Cshow
grestore
1.000 UL
LTb
5707 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 0.8) Cshow
grestore
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1368 720 M
5424 0 V
0 4032 V
-5424 0 V
0 -4032 V
LTb
240 2736 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Throughput \( Kbps \)) Cshow
grestore
grestore
LTb
4080 120 M
gsave 0 setgray
(Sending rate factor) Cshow
grestore
2.000 UP
2.000 UP
1.000 UL
LT0
6792 3134 M
-542 446 V
-543 199 V
-542 -10 V
-543 154 V
-542 108 V
-542 540 V
2995 3993 L
2453 3489 L
1910 2355 L
6792 3134 Pls
6250 3580 Pls
5707 3779 Pls
5165 3769 Pls
4622 3923 Pls
4080 4031 Pls
3538 4571 Pls
2995 3993 Pls
2453 3489 Pls
1910 2355 Pls
1.000 UL
LTb
1368 720 M
5424 0 V
0 4032 V
-5424 0 V
0 -4032 V
2.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 1284 1939 a FB(\(b\))-152 1980 y
SDict begin H.S end
 -152 1980
a -152 1980 a
SDict begin 10.5 H.A end
 -152 1980 a -152 1980 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.2) cvn H.B /DEST pdfmark
end
 -152 1980 a 143
x FA(Figur)o(e)j(2:)171 2123 y
SDict begin H.S end
 171 2123 a 171 2123 a
SDict begin H.R end

171 2123 a 171 2123 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.2) cvn H.B /DEST pdfmark
end
 171 2123 a FA(T)-7 b(estbed)21
b(experiments)g(con\002rm)h(the)f(importance)h(of)f(rate)-152
2210 y(contr)o(ol.)29 b(\(a\))21 b(Thr)o(oughput)e(vs.)30
b(loss)21 b(rate)g(in)f(the)h(tw)o(o)g(topologies.)30
b(\(b\))-152 2298 y(Thr)o(oughput)c(vs.)49 b(sending)26
b(rate)i(in)e(the)h(good-bad)g(topology)i(when)-152 2385
y(the)19 b(loss)g(rate)g(on)f(the)h(bad)f(link)f(is)i(0.5.)425
3109 y @beginspecial 52 @llx 637 @lly 172 @urx 739 @ury
1008 @rwi @setspecial
%%BeginDocument: Figs/pathology/star.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 52 637 172 739
%%Title: star
%%CreationDate: Wed Jun  4 23:33:15 2008
%%Creator: Tgif-4.1.43 written by William Chia-Wei Cheng (bill.cheng@acm.org)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 55 dict def
tgifdict begin

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/TGEL % tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%Page: 1 1

%%PageBoundingBox: 52 637 172 739
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% OVAL
0 SG
GS
   GS
      NP 112 112 16 16 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 112 256 16 16 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 208 192 16 16 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 288 112 16 16 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 288 256 16 16 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      112 112 M
      GS
            0 SG
            /Courier FF [14 0 0 -14 0 0] MS
            (1) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      288 112 M
      GS
            0 SG
            /Courier FF [14 0 0 -14 0 0] MS
            (2) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      208 192 M
      GS
            0 SG
            /Courier FF [14 0 0 -14 0 0] MS
            (3) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      112 256 M
      GS
            0 SG
            /Courier FF [14 0 0 -14 0 0] MS
            (4) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      288 256 M
      GS
            0 SG
            /Courier FF [14 0 0 -14 0 0] MS
            (5) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      128 128 M
      48 64 atan DU cos 8.000 MU 192 exch SU
      exch sin 8.000 MU 176 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      192 176 8.000 3.000 64 48 TGAT
   1 SG CP F
   0 SG
   NP
      192 176 8.000 3.000 64 48 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      224 208 M
      32 48 atan DU cos 8.000 MU 272 exch SU
      exch sin 8.000 MU 240 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      272 240 8.000 3.000 48 32 TGAT
   1 SG CP F
   0 SG
   NP
      272 240 8.000 3.000 48 32 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      272 128 M
      48 -48 atan DU cos 8.000 MU 224 exch SU
      exch sin 8.000 MU 176 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      224 176 8.000 3.000 -48 48 TGAT
   1 SG CP F
   0 SG
   NP
      224 176 8.000 3.000 -48 48 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      192 208 M
      48 -64 atan DU cos 8.000 MU 128 exch SU
      exch sin 8.000 MU 256 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      128 256 8.000 3.000 -64 48 TGAT
   1 SG CP F
   0 SG
   NP
      128 256 8.000 3.000 -64 48 TGAT
   CP F
GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Wed Jun  4 23:33:15 2008
%%DocumentFonts: Courier
%%EOF

%%EndDocument
 @endspecial -152 3095 a
SDict begin H.S end
 -152 3095 a -152 3095 a
SDict begin 10.5 H.A end
 -152
3095 a -152 3095 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.3) cvn H.B /DEST pdfmark
end
 -152 3095 a 128 3265 a FA(Figur)o(e)f(3:)442
3265 y
SDict begin H.S end
 442 3265 a 442 3265 a
SDict begin H.R end
 442 3265 a 442 3265 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.3) cvn H.B /DEST pdfmark
end
 442
3265 a FA(The)h(topology)g(f)n(or)h(the)e(TCP)g(example.)-152
3431 y FB(sending)26 b(rate.)39 b(When)25 b(the)g(sending)g(rate)g(f)o
(actor)f(is)g(1,)i(the)f(source)g(sends)-152 3518 y(pack)o(ets)d
(back-to-back.)29 b(The)20 b(curv)o(e)h(is)f(not)g(as)h(smooth)g
(because)g(the)g(loss)-152 3605 y(rate)27 b(in)g(the)g(testbed)g
(cannot)h(be)g(precisely)f(controlled.)48 b(Ov)o(erall,)28
b(these)-152 3692 y(results)19 b(con\002rm)g(the)g(ill-ef)n(fects)f(of)
h(not)g(controlling)h(sending)g(rates.)-152 3808 y FA(TCP)30
b(traf\002c)184 b FB(Similar)29 b(problems)j(occur)f(with)g(TCP)e(as)i
(well)f(be-)-152 3896 y(cause)25 b(TCP')l(s)f(b)o(uilt-in)f(rate)h
(control)h(and)g(congestion)h(response)g(are)e(not)-152
3983 y(well-suited)c(for)h(the)f(wireless)g(en)m(vironment.)28
b(Consider)21 b(a)f(star)g(topology)-152 4070 y(sho)n(wn)g(in)e(Figure)
349 4071 y
SDict begin H.S end
 349 4071 a -1 x FB(3)386 4019 y
SDict begin H.R end
 386 4019 a
386 4070 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.3) cvn H.B /ANN pdfmark end
 386 4070 a FB(,)h(where)f(all)g(links)h(are)f(reliable.)23
b(There)18 b(are)h(tw)o(o)f(com-)-152 4157 y(peting)25
b(TCP)d(\003o)n(ws)i(1)19 b Fr(!)g FB(5)24 b(and)g(2)c
Fr(!)f FB(4.)37 b(W)-6 b(e)23 b(\002nd)h(performance)h(de)o(gra-)-152
4244 y(dation)g(due)g(to)f(o)o(v)o(erload)h(when)g(the)g(central)f
(node)h(cannot)g(relay)g(all)f(the)-152 4332 y(traf)n(\002c)j(sent)h
(by)h(its)e(neighbors.)51 b(W)m(ith)27 b(1024-byte)j(pack)o(ets,)h(in)d
(the)f(ab-)-152 4419 y(sence)32 b(of)e(additional)h(rate)g(limiting,)h
(the)f(tw)o(o)f(\003o)n(ws)h(get)f(0.805)i(Mbps)-152
4506 y(and)g(0.740)g(Mbps,)k(respecti)n(v)o(ely)-5 b(.)61
b(In)31 b(comparison,)36 b(if)30 b(we)i(limit)e(their)-152
4593 y(application-layer)c(sending)g(rates)f(using)h(our)f
(optimization)h(frame)n(w)o(ork)-152 4680 y(\(see)31
b(Section)254 4681 y
SDict begin H.S end
 254 4681 a -1 x FB(5)291 4630 y
SDict begin H.R end

291 4630 a 291 4680 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.5) cvn H.B /ANN pdfmark end
 291 4680 a FB(\))f(and)i(constrain)f(the)g(b)o
(urstiness)g(of)f(TCP)g(by)h(limiting)-152 4767 y(the)22
b(TCP)f(sender)i(b)o(uf)n(fer)e(to)h(2)g(pack)o(ets,)h(the)f(tw)o(o)g
(\003o)n(ws)g(get)g(1.066)h(Mbps)-152 4855 y(and)i(1.064)g(Mbps,)i
(respecti)n(v)o(ely)-5 b(,)26 b(which)f(translates)f(to)g(37.9\045)h
(increase)-152 4942 y(in)k(total)g(throughput.)55 b(W)m(ith)28
b(512-byte)i(pack)o(ets,)j(rate)28 b(limiting)h(results)-152
5029 y(in)22 b(20.8\045)g(increase)g(in)f(total)h(throughput.)32
b(This)21 b(e)o(xample)i(demonstrates)-152 5116 y(that)18
b(TCP)f(is)h(unable)h(to)f(appropriately)h(set)f(its)g(rate)g(to)g
(where)g(it)g(can)g(max-)-152 5203 y(imize)26 b(throughput.)45
b(This)25 b(is)h(lik)o(ely)g(because)g(TCP')l(s)f(aggressi)n(v)o(e)i
(band-)-152 5290 y(width)e(probing)g(mak)o(es)g(the)g(\003o)n(ws)f
(stabilize)g(at)g(a)g(loss)g(rate)g(higher)h(than)-152
5378 y(the)19 b(loss)g(rate)g(under)h(maximum)f(throughput)i([)1106
5379 y
SDict begin H.S end
 1106 5379 a -1 x FB(7)1143 5329 y
SDict begin H.R end
 1143 5329 a
1143 5378 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.TCP-problem-TMC) cvn H.B /ANN pdfmark end
 1143 5378 a FB(].)2040 1172 y
SDict begin H.S end
 2040 1172 a
2040 1172 a
SDict begin 10.5 H.A end
 2040 1172 a 2040 1172 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark
end
 2040 1172 a 83 x
FC(3.)99 b(APPR)m(O)l(A)-5 b(CH)2115 1363 y FB(The)15
b(pre)n(vious)h(section)f(sho)n(wed)h(that)e(dependencies)j(introduced)
f(by)g(in-)2040 1450 y(terference)21 b(and)h(MA)m(C)f(can)g(lead)g(to)g
(signi\002cant)g(performance)i(problems)2040 1537 y(in)18
b(wireless)h(netw)o(orks.)k(Thus,)c(an)o(y)g(optimization)g(strate)o
(gy)g(must)f(be)h(able)2040 1624 y(to)h(model)g(and)g(predict)g(these)g
(ef)n(fects.)25 b(W)-6 b(e)19 b(de)n(v)o(elop)i(a)e(model-dri)n(v)o(en)
i(op-)2040 1711 y(timization)27 b(approach.)49 b(W)-6
b(e)27 b(focus)g(on)h(IEEE)d(802.11-based)30 b(netw)o(orks,)2040
1798 y(though)19 b(our)f(frame)n(w)o(ork)g(w)o(ould)h(be)e(useful)h
(for)g(other)g(MA)m(C)f(protocols)h(as)2040 1886 y(well,)g(which)h(we)g
(plan)h(to)e(in)m(v)o(estigate)h(in)g(the)g(future.)2115
1973 y(W)-6 b(e)29 b(need)h(a)f(model)h(with)f(the)h(follo)n(wing)g(tw)
o(o)f(properties.)56 b(First,)30 b(it)2040 2060 y(pro)o(vides)25
b(an)g(accurate)g(and)g(compact)g(characterization)h(of)e(the)g
(feasible)2040 2147 y(solution)f(space,)g(which)g(can)f(then)h(be)f
(incorporated)h(in)f(an)h(optimization)2040 2234 y(procedure)30
b(to)f(\002nd)f(a)h(high-performance)h(con\002gurations.)54
b(Second,)31 b(it)2040 2321 y(strik)o(es)15 b(a)g(balance)i(between)e
(\002delity)-5 b(,)16 b(generality)-5 b(,)16 b(and)g(tractability)-5
b(,)15 b(which)2040 2409 y(is)k(crucial)g(for)f(optimization)i(to)f(be)
g(ef)n(fecti)n(v)o(e)g(and)h(ef)n(\002cient.)2115 2496
y(W)-6 b(e)27 b(de)n(v)o(elop)i(a)e(no)o(v)o(el)h(model)g(that)f
(satis\002es)g(both)h(requirements.)50 b(It)2040 2583
y(has)21 b(lo)n(w)f(comple)o(xity)-5 b(.)28 b(Gi)n(v)o(en)20
b Fz(n)h FB(links)f(that)g(are)g(acti)n(v)o(ely)h(sending)g(traf)n
(\002c,)2040 2670 y(our)27 b(model)g(has)g Fz(O)p Ft(\()p
Fz(n)2625 2643 y FE(2)2659 2670 y Ft(\))f FB(comple)o(xity)-5
b(.)47 b(It)27 b(consists)g(of)f Fz(O)p Ft(\()p Fz(n)p
Ft(\))h FB(constraints)2040 2757 y(that)j(capture)g(the)g(inter)o
(-dependenc)o(y)h(between)g(throughput,)j(transmis-)2040
2844 y(sion)27 b(probabilities,)h(and)f(pack)o(et)g(loss)g(rates)f(of)g
(dif)n(ferent)h(links.)45 b(These)2040 2932 y(constraints)26
b(collecti)n(v)o(ely)f(characterize)h(the)f(set)g(of)g(netw)o(ork)i
(con\002gura-)2040 3019 y(tions)g(and)h(traf)n(\002c)f(assignments)h
(that)f(can)g(be)h(achie)n(v)o(ed)g(in)f(802.11)h(net-)2040
3106 y(w)o(orks.)c(In)19 b(contrast,)g(man)o(y)g(e)o(xisting)g(models)h
(are)f(comple)o(x)h(and)f(may)h(re-)2040 3193 y(quire)15
b(an)g(e)o(xponential)g(number)h(of)e(state)g(v)n(ariables)h([)3431
3194 y
SDict begin H.S end
 3431 3194 a -1 x FB(27)3505 3142 y
SDict begin H.R end
 3505 3142 a
3505 3193 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lili-mobicom07) cvn H.B /ANN pdfmark end
 3505 3193 a FB(])g(or)g(constraints)f([)3984
3193 y
SDict begin H.S end
 3984 3193 a FB(14)4058 3142 y
SDict begin H.R end
 4058 3142 a 4058
3193 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.JPPQ03) cvn H.B /ANN pdfmark end
 4058 3193 a FB(])2040 3280 y(in)22 b(the)h(w)o(orst)f(case.)34
b(Despite)22 b(its)g(simplicity)-5 b(,)22 b(our)h(model)g(is)f(general)
h(and)2040 3367 y(realistic.)54 b(It)29 b(is)g(based)i(on)f(easily)f
(collected)h(measurements)h(from)e(the)2040 3455 y(underlying)d(netw)o
(ork)g(and)g(is)e(thus)h(more)g(accurate)h(than)f(abstract)g(mod-)2040
3542 y(els)31 b(of)g(RF)f(propagation)j(such)e(as)h(those)f(based)h(on)
g(distance.)60 b(It)30 b(also)2040 3629 y(deals)23 b(with)f(real-w)o
(orld)h(comple)o(xities)g(such)g(as)f(hidden)i(terminals,)f(non-)2040
3716 y(uniform)k(traf)n(\002c,)h(multi-hop)f(\003o)n(ws,)i(and)e
(non-binary)h(interference.)47 b(In)2040 3803 y(contrast,)27
b(e)o(xisting)e(interference)h(models)g(often)g(impose)g(restricti)n(v)
o(e)f(as-)2040 3891 y(sumptions)31 b(about)g(signal)f(propagation)h([)
3192 3892 y
SDict begin H.S end
 3192 3892 a -1 x FB(13)3266 3840 y
SDict begin H.R end
 3266 3840
a 3266 3891 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.GK00) cvn H.B /ANN pdfmark end
 3266 3891 a FB(],)i(traf)n(\002c)c([)3574
3892 y
SDict begin H.S end
 3574 3892 a -1 x FB(10)3648 3840 y
SDict begin H.R end
 3648 3840 a
3648 3891 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.knightly-model) cvn H.B /ANN pdfmark end
 3648 3891 a FB(,)3700 3892 y
SDict begin H.S end
 3700 3892 a
-1 x FB(30)3774 3840 y
SDict begin H.R end
 3774 3840 a 3774 3891 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.sigcomm06-Reis) cvn H.B /ANN pdfmark end
 3774 3891
a FB(,)3826 3892 y
SDict begin H.S end
 3826 3892 a -1 x FB(8)3863 3840 y
SDict begin H.R end

3863 3840 a 3863 3891 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lui-model) cvn H.B /ANN pdfmark end
 3863 3891 a FB(,)3914 3892 y
SDict begin H.S end

3914 3892 a -1 x FB(27)3988 3840 y
SDict begin H.R end
 3988 3840 a 3988 3891
a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lili-mobicom07) cvn H.B /ANN pdfmark end
 3988 3891 a FB(],)2040 3978 y(topology)21 b([)2350
3978 y
SDict begin H.S end
 2350 3978 a FB(1)2387 3927 y
SDict begin H.R end
 2387 3927 a 2387
3978 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.bianchi) cvn H.B /ANN pdfmark end
 2387 3978 a FB(,)2425 3979 y
SDict begin H.S end
 2425 3979 a -1 x
FB(18)2499 3927 y
SDict begin H.R end
 2499 3927 a 2499 3978 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.Kumar-single-cell) cvn H.B /ANN pdfmark end
 2499 3978 a
FB(,)2538 3979 y
SDict begin H.S end
 2538 3979 a -1 x FB(8)2575 3927 y
SDict begin H.R end
 2575
3927 a 2575 3978 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lui-model) cvn H.B /ANN pdfmark end
 2575 3978 a FB(,)2613 3979 y
SDict begin H.S end
 2613
3979 a -1 x FB(10)2687 3927 y
SDict begin H.R end
 2687 3927 a 2687 3978 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.knightly-model) cvn H.B /ANN pdfmark end

2687 3978 a FB(],)f(or)f(the)h(MA)m(C)f(layer)h([)3323
3978 y
SDict begin H.S end
 3323 3978 a FB(14)3397 3927 y
SDict begin H.R end
 3397 3927 a 3397
3978 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.JPPQ03) cvn H.B /ANN pdfmark end
 3397 3978 a FB(].)25 b(These)19 b(assumptions)2040
4065 y(rarely)g(hold)h(for)e(real)h(netw)o(orks)h([)2938
4066 y
SDict begin H.S end
 2938 4066 a -1 x FB(17)3012 4014 y
SDict begin H.R end
 3012 4014 a
3012 4065 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.Kotz04) cvn H.B /ANN pdfmark end
 3012 4065 a FB(].)2115 4152 y(Our)f(model)h(can)f(be)h
(used)g(in)f(se)n(v)o(eral)g(w)o(ays)h(for)f(wireless)g(netw)o(ork)h
(op-)2040 4239 y(timization.)i(First,)15 b(it)h(can)h(be)g(used)g(to)f
(answer)h(\223what-if)t(\224)f(questions,)i(such)2040
4326 y(as)24 b(testing)f(whether)h(desired)g(end-to-end)h(throughput)g
(can)f(be)g(achie)n(v)o(ed)2040 4414 y(\(see)c(Section)2425
4415 y
SDict begin H.S end
 2425 4415 a -1 x FB(5.1)2518 4363 y
SDict begin H.R end
 2518 4363
a 2518 4414 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(subsection.5.1) cvn H.B /ANN pdfmark end
 2518 4414 a FB(\).)27 b(It)19 b(can)i(also)g(predict)f
(the)g(performance)i(under)f(dif)n(fer)o(-)2040 4501
y(ent)i(netw)o(ork)g(con\002gurations,)h(such)f(as)g(the)f(impact)h(of)
g(enabling)g(or)g(dis-)2040 4588 y(abling)k(R)l(TS/CTS.)c(Second,)28
b(in)f(conjunction)g(with)f(an)h(ef)n(\002cient)f(search)2040
4675 y(mechanism,)f(the)f(model)g(can)g(be)g(directly)f(applied)h(to)g
(optimize)f(certain)2040 4762 y(performance)18 b(objecti)n(v)o(es)f
(when)g(there)f(are)h(only)g(a)f(small)g(number)h(of)g(con-)2040
4849 y(trol)k(parameters.)31 b(This)21 b(is)g(the)g(case)h(for)f(f)o
(air)g(rate)g(allocation,)h(which)g(has)2040 4937 y(a)h(single)g
(optimization)g(parameter)g(\(see)f(Section)3407 4938
y
SDict begin H.S end
 3407 4938 a -1 x FB(5.2)3500 4886 y
SDict begin H.R end
 3500 4886 a 3500
4937 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(subsection.5.2) cvn H.B /ANN pdfmark end
 3500 4937 a FB(\).)34 b(Third,)23 b(the)g(con-)2040
5024 y(straints)29 b(of)g(our)g(model)g(can)h(be)f(linearized)g(and)h
(incorporated)g(into)f(an)2040 5111 y(optimization)f(procedure.)49
b(This)26 b(is)h(the)g(case)h(for)f(netw)o(ork)h(throughput)2040
5198 y(maximization,)19 b(which)h(has)f(man)o(y)h(parameters)f(\(see)g
(Section)3720 5199 y
SDict begin H.S end
 3720 5199 a -1 x FB(5.3)3813 5147
y
SDict begin H.R end
 3813 5147 a 3813 5198 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(subsection.5.3) cvn H.B /ANN pdfmark end
 3813 5198 a FB(\).)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152 -359
a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.4) cvn H.B /DEST pdfmark
end
 -152 -359 a -145
-148 1979 5 v -147 -81 5 67 v -119 -101 a FH(E)t(P)-50
-92 y Fo(i)p -14 -81 V 19 -101 a FE(Expected)14 b(payload)g
(transmission)h(time)g(for)g(Link)f FH(i)p 1832 -81 V
-147 -15 V -123 -35 a(T)-95 -26 y Fm(slot)p -14 -15 V
19 -35 a FE(Re)o(gular)h(slot)f(time)p 1832 -15 V -147
55 5 70 v -124 35 a FH(T)-85 14 y Fm(dat)-96 50 y Fo(i)p
-14 55 V 19 35 a FE(D)n(A)-6 b(T)h(A)13 b(duration)i(on)g(Link)f
FH(i)h FE(from)g(source)f(to)h(destination\))p 1832 55
V -147 124 V -128 104 a FH(T)-88 83 y Fm(ack)-100 120
y Fo(i)p -14 124 V 19 104 a FE(A)n(CK)f(duration)h(on)g(Link)f
FH(i)h FE(from)g(destination)g(to)g(source\))p 1832 124
V -147 193 V -121 173 a FH(L)-89 152 y Fm(dat)-89 189
y Fo(i)p -14 193 V 19 173 a FE(Inherent)g(D)n(A)-6 b(T)h(A)13
b(loss)h(rate)h(on)f(Link)h FH(i)f FE(from)i(source)e(to)h
(destination\))p 1832 193 V -147 263 V -124 243 a FH(L)-92
222 y Fm(ack)-92 258 y Fo(i)p -14 263 V 19 243 a FE(Inherent)g(A)n(CK)f
(loss)g(rate)h(on)f(Link)h FH(i)f FE(from)i(destination)f(to)f
(source\))p 1832 263 V -147 334 5 71 v -124 309 a FH(D)-82
288 y Fm(src)-82 325 y Fo(i)6 b(j)p -14 334 V 19 309
a FE(Probability)16 b(for)f(Link)g FH(i)p FE(')m(s)f(source)g(to)h
(carrier)g(sense)f(Link)23 b FH(j)q FE(')m(s)15 b(source)p
1832 334 V -147 407 5 74 v -124 383 a FH(D)-82 362 y
Fm(dst)-82 399 y Fo(i)6 b(j)p -14 407 V 19 383 a FE(Probability)16
b(for)f(Link)g FH(i)p FE(')m(s)f(source)g(to)h(carrier)g(sense)f(Link)
23 b FH(j)q FE(')m(s)15 b(destination)p 1832 407 V -147
474 5 67 v -109 454 a FH(S)-80 463 y Fo(i)6 b(j)p -14
474 V 19 454 a FE(Synchronous)15 b(collision)g(loss)f(probability)h
(for)h(Link)e FH(i)g FE(due)h(to)g(Link)23 b FH(j)q FE(')m(s)14
b(transmission)p 1832 474 V -147 540 V -112 520 a FH(A)-76
529 y Fo(i)6 b(j)p -14 540 V 19 520 a FE(Asynchronous)14
b(collision)h(loss)f(e)o(xponent)h(for)g(Link)f FH(i)h
FE(due)g(to)f(Link)24 b FH(j)q FE(')m(s)14 b(transmission)p
1832 540 V -147 673 5 133 v -119 587 a FH(W)-74 596 y
Fo(i)6 b(j)p -14 673 V 19 587 a FE(Expected)18 b(w)o(aiting)g(time)h
(for)g(Link)f FH(i)g FE(when)g(Link)27 b FH(j)16 b FG(6)p
Fs(=)f FH(i)j FE(is)g(transmitting.)26 b FH(W)1645 596
y Fo(ii)1691 587 y FE(is)18 b(the)19 653 y(e)o(xpected)c(time)h(for)h
(Link)e FH(i)h FE(to)f(complete)h(a)f(transmission.)p
1832 673 V -145 677 1979 5 v -147 744 5 67 v -98 724
a FJ(t)-72 733 y Fo(i)p -14 744 V 19 724 a FE(Probability)i(for)f(Link)
g FH(i)f FE(to)h(transmit)g(in)g(a)f(random)h(v)o(ariable-length)g
(slot)g(\(VLS\))p 1832 744 V -147 810 V -98 790 a FH(p)-69
799 y Fo(i)p -14 810 V 19 790 a FE(T)-5 b(otal)15 b(pack)o(et)f(loss)g
(rate)h(on)g(Link)f FH(i)p FE(.)p 1832 810 V -147 876
V -102 856 a FJ(m)-69 865 y Fo(i)p -14 876 V 19 856 a
FE(Expected)g(VLS)g(duration)h(of)g(Link)g FH(i)p 1832
876 V -147 943 V -100 923 a(g)-71 932 y Fo(i)p -14 943
V 19 923 a FE(Throughput)g(of)g(Link)f FH(i)p 1832 943
V -147 1009 V -100 989 a FJ(q)-70 998 y Fo(i)p -14 1009
V 19 989 a FE(Probability)i(for)f(Link)g FH(i)f FE(to)h(start)g
(sending)f(at)g(a)h(random)g(slot)f(time)p 1832 1009
V -145 1013 1979 5 v -152 1000 a
SDict begin H.S end
 -152 1000 a -152 1000
a
SDict begin 10.5 H.A end
 -152 1000 a -152 1000 a
SDict begin [ /View [/XYZ H.V] /Dest (table.1) cvn H.B /DEST pdfmark
end
 -152 1000 a 6 1143 a FA(T)-7
b(able)18 b(1:)285 1143 y
SDict begin H.S end
 285 1143 a 285 1143 a
SDict begin H.R end
 285 1143
a 285 1143 a
SDict begin [ /View [/XYZ H.V] /Dest (table.1) cvn H.B /DEST pdfmark
end
 285 1143 a FA(Model)h(constants)f(\(upper)g(case\))h(and)f
(v)o(ariables.)-152 1276 y
SDict begin H.S end
 -152 1276 a -152 1276 a
SDict begin 10.5 H.A end
 -152
1276 a -152 1276 a
SDict begin [ /View [/XYZ H.V] /Dest (section.4) cvn H.B /DEST pdfmark
end
 -152 1276 a 83 x FC(4.)100 b(OUR)24
b(MODEL)-77 1467 y FB(In)k(this)g(section,)i(we)e(de)n(v)o(elop)h(a)f
(model)g(for)g(IEEE)e(802.11)j(that)f(can)-152 1554 y(be)23
b(used)g(for)f(model-dri)n(v)o(en)i(optimization.)34
b(W)-6 b(e)22 b(describe)h(our)g(model)g(in)-152 1641
y(terms)i(of)g(netw)o(ork)g(\223links.)-5 b(\224)41 b(Links)25
b(are)g(unidirectional,)i(and)e(each)h(link)-152 1728
y(has)20 b(a)e(unique)j(source-destination)f(pair)f(of)g(nodes.)-152
1811 y
SDict begin H.S end
 -152 1811 a -152 1811 a
SDict begin 10.5 H.A end
 -152 1811 a -152 1811
a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.1) cvn H.B /DEST
pdfmark end
 -152 1811 a 71 x FC(4.1)99 b(Basic)25 b(Model)g(of)g(802.11)f(DCF)-77
1990 y FB(W)-6 b(e)14 b(\002rst)g(de)n(v)o(elop)h(a)g(basic)g(model)g
(of)f(802.11)i(DCF)e(for)g(the)h(base)g(case)g(in)-152
2077 y(which)22 b(all)f(\003o)n(ws)h(are)f(one-hop)j(UDP)c(\003o)n(ws)i
(and)g(R)l(TS/CTS)d(is)i(disabled.)-152 2164 y(W)-6 b(e)25
b(then)h(e)o(xtend)g(the)f(model)h(to)f(support)h(R)l(TS/CTS,)c
(multi-hop)k(\003o)n(ws,)-152 2251 y(and)20 b(dif)n(ferent)f(transport)
g(protocols)h(in)f(Section)1150 2252 y
SDict begin H.S end
 1150 2252 a -1
x FB(4.2)1243 2201 y
SDict begin H.R end
 1243 2201 a 1243 2251 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(subsection.4.2) cvn H.B /ANN pdfmark end
 1243 2251
a FB(.)-152 2334 y
SDict begin H.S end
 -152 2334 a -152 2334 a
SDict begin 10.5 H.A end
 -152 2334
a -152 2334 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.4.1.1) cvn H.B
/DEST pdfmark end
 -152 2334 a -129 2405 a Fk(4.1.1)90 b(Assumptions)-77
2512 y FB(Our)19 b(model)g(mak)o(es)h(tw)o(o)f(k)o(e)o(y)h
(assumptions:)-104 2658 y Fz(A)p FB(1.)37 b(It)26 b(assumes)i(pairwise)
e(interference,)j Fz(i.e)o(.)p FB(,)e(the)g(interference)g(rela-)35
2745 y(tionship)k(between)g(tw)o(o)f(links)g(is)g(independent)i(of)e
(acti)n(vities)g(on)35 2833 y(other)23 b(links.)34 b(Pre)n(vious)23
b(w)o(orks)h(sho)n(w)f(that)g(pairwise)f(interference)35
2920 y(is)d(good)h(approximation)g(in)f(real)g(netw)o(orks)h([)1251
2921 y
SDict begin H.S end
 1251 2921 a -1 x FB(25)1325 2869 y
SDict begin H.R end
 1325 2869 a
1325 2920 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.imc05) cvn H.B /ANN pdfmark end
 1325 2920 a FB(,)1363 2921 y
SDict begin H.S end
 1363 2921 a
-1 x FB(23)1437 2869 y
SDict begin H.R end
 1437 2869 a 1437 2920 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.interference-map) cvn H.B /ANN pdfmark end
 1437 2920
a FB(].)-104 3041 y Fz(A)p FB(2.)37 b(It)17 b(assumes)i(that)f(dif)n
(ferent)g(types)g(of)g(loss)g(\()p Fz(e)o(.g)o(.)p FB(,)f(collision)h
(loss)g(and)35 3128 y(inherent)i(wireless)e(medium)i(loss\))f(are)g
(independent.)-77 3274 y(While)29 b(these)g(assumptions)h(do)g(not)f
(al)o(w)o(ays)h(hold)g(in)f(practice,)i(the)o(y)-152
3361 y(are)19 b(a)f(reasonable)i(approximation)g(to)f(the)f(reality)-5
b(.)23 b(Under)c(these)g(assump-)-152 3449 y(tions,)i(we)f(do)h(not)f
(need)h(to)g(model)f(intricate)g(interactions)h(among)g(dif)n(fer)o(-)
-152 3536 y(ent)f(links,)g Fz(e)o(.g)o(.)p FB(,)f(links)h
Fz(A)f FB(and)i Fz(B)e FB(interfere)h(only)g(when)g(links)c
Fz(C)22 b FB(and)e Fz(D)g FB(are)-152 3623 y(acti)n(v)o(e.)33
b(As)21 b(a)h(result,)g(our)h(model)f(becomes)h(signi\002cantly)f
(simpli\002ed)g(\227)-152 3710 y(it)g(has)g Fz(O)p Ft(\()p
Fz(n)153 3683 y FE(2)187 3710 y Ft(\))f FB(comple)o(xity)i(and)g(only)f
Fz(O)p Ft(\()p Fz(n)p Ft(\))h FB(constraints,)f(where)h
Fz(n)f FB(is)g(the)-152 3797 y(number)16 b(of)f(acti)n(v)o(e)g(links.)
22 b(In)15 b(Section)860 3798 y
SDict begin H.S end
 860 3798 a -1 x FB(7)897
3749 y
SDict begin H.R end
 897 3749 a 897 3797 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.7) cvn H.B /ANN pdfmark end
 897 3797 a FB(,)g(we)g(use)g(simulations)h
(and)f(testbed)-152 3884 y(e)o(xperiments)22 b(to)e(sho)n(w)h(that)g
(our)f(model)h(is)g(quite)f(accurate)h(despite)g(these)-152
3972 y(simpli\002cations.)-152 4054 y
SDict begin H.S end
 -152 4054 a -152
4054 a
SDict begin 10.5 H.A end
 -152 4054 a -152 4054 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.4.1.2) cvn H.B
/DEST pdfmark end
 -152 4054 a -129 4125
a Fk(4.1.2)90 b(Constr)o(aints)-77 4233 y FB(F)o(ollo)n(wing)20
b(Bianchi')l(s)g(approach)h([)867 4233 y
SDict begin H.S end
 867 4233 a FB(1)904
4182 y
SDict begin H.R end
 904 4182 a 904 4233 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.bianchi) cvn H.B /ANN pdfmark end
 904 4233 a FB(],)f(we)f(di)n(vide)i(time)e
(into)h Fz(variable-)-152 4320 y(length)g(slots)f(\(VLS\))f
FB(for)g(each)i(link.)-40 4466 y Fr(\017)38 b FB(When)16
b(the)f(link)h(senses)g(a)g(clear)f(channel)i(and)f(either)f(has)h(no)g
(data)g(to)35 4553 y(send)k(or)f(its)g(back)o(of)n(f)h(counter)g(has)g
(not)f(yet)h(reached)g(0,)f(the)g(current)35 4640 y(VLS)f(lasts)g(for)h
(a)g(re)o(gular)g(slot)g(time)f Fz(T)1047 4654 y FE(slot)1136
4640 y FB(.)-40 4762 y Fr(\017)38 b FB(When)23 b(the)h(link)f(senses)h
(a)f(clear)g(channel,)i(has)e(data)g(to)g(send,)i(and)35
4849 y(its)16 b(back)o(of)n(f)h(counter)g(is)f(0,)h(it)e(sends)i(a)g
(pack)o(et)g(and)g(the)f(current)h(VLS)35 4936 y(lasts)i(for)f(the)h
(entire)g(pack)o(et)h(transmission.)-40 5057 y Fr(\017)38
b FB(When)23 b(the)g(link)g(senses)h(a)f(b)o(usy)g(channel,)i(the)e
(current)g(VLS)f(lasts)35 5145 y(until)d(the)g(channel)h(is)e(clear)h
(for)g(a)g(DIFS)f(duration.)-77 5290 y(Our)23 b(model)g(consists)g(of)g
(four)g(types)g(of)f(constraints)i(that)e(capture)i(the)-152
5378 y(inter)o(-dependenc)o(y)17 b(between)e(throughput,)h
(transmission)f(probability)-5 b(,)16 b(pack)o(et)2040
-69 y(loss)25 b(rate,)h(and)g(VLS)e(duration)h(of)g(dif)n(ferent)h
(links.)41 b(W)-6 b(e)24 b(describe)i(these)2040 19 y(constraints)g
(belo)n(w)-5 b(.)42 b(T)-6 b(able)2814 19 y
SDict begin H.S end
 2814 19 a
FB(1)2851 -32 y
SDict begin H.R end
 2851 -32 a 2851 19 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(table.1) cvn H.B /ANN pdfmark end
 2851 19 a 25 w FB(summarizes)25
b(the)h(notations,)h(where)e(con-)2040 106 y(stants)c(are)h(in)f(upper)
h(case)g(and)f(v)n(ariables)h(are)g(in)f(lo)n(wer)g(case.)31
b(T)-6 b(o)21 b(ensure)2040 193 y(consistenc)o(y)-5 b(,)24
b(we)d(use)h(slot)g(time)f Fz(T)2973 207 y FE(slot)3082
193 y FB(as)h(the)g(common)h(unit)e(for)h(the)g(cal-)2040
280 y(culation)e(of)e(time)h(in)g(our)g(model.)2040 401
y FA(Thr)o(oughput)12 b(constraint)85 b FB(The)15 b(throughput)h
(constraint)f(relates)f(through-)2040 488 y(put)k(to)h(transmission)f
(probability)-5 b(,)19 b(pack)o(et)g(loss)f(rate,)g(and)h(VLS)e
(duration.)2040 575 y(Let)25 b Fw(t)2198 587 y FH(i)2244
575 y FB(be)i(the)f(probability)g(for)g(Link)g Fz(i)g
FB(to)f(start)h(a)g(pack)o(et)h(transmission)2040 662
y(during)18 b(a)e(VLS.)g(Let)22 b Fz(p)2637 674 y FH(i)2673
662 y FB(be)17 b(the)g(loss)g(probability)g(for)g(such)g(a)g(pack)o(et)
g(trans-)2040 749 y(mission.)37 b(Let)25 b Fw(m)2496
761 y FH(i)2540 749 y FB(be)f(the)f(e)o(xpected)i(duration)f(of)g(a)f
(VLS)g(at)g(Link)h Fz(i)p FB(.)36 b(Let)2040 837 y Fz(E)5
b(P)2128 849 y FH(i)2167 837 y FB(be)19 b(the)g(e)o(xpected)i(payload)f
(transmission)g(time)f(at)g(Link)g Fz(i)p FB(.)k(Then,)c(the)2040
924 y(throughput)j(for)e(Link)f Fz(i)p FB(,)h(denoted)h(by)g
Fz(g)3103 936 y FH(i)3123 924 y FB(,)f(is)g(simply)g(the)g(fraction)g
(of)g(time)2040 1011 y(that)f(it)f(spends)i(on)g(successful)f(payload)i
(transmissions:)2674 1209 y
SDict begin H.S end
 2674 1209 a 2674 1209 a
SDict begin 10.5 H.A end
 2674
1209 a 2674 1209 a
SDict begin [ /View [/XYZ H.V] /Dest (equation.1) cvn H.B /DEST pdfmark
end
 2674 1209 a Fz(g)2711 1221 y FH(i)2748
1209 y Ft(=)2833 1159 y Fz(E)5 b(P)2921 1171 y FH(i)2951
1159 y Fr(\002)10 b Fw(t)3052 1171 y FH(i)3083 1159 y
Fr(\002)g Ft(\()p FB(1)g Fr(\000)16 b Fz(p)3338 1171
y FH(i)3360 1159 y Ft(\))p 2833 1192 556 3 v 3080 1261
a Fw(m)3123 1273 y FH(i)3946 1209 y FB(\(1\))2040 1438
y FA(VLS)k(duration)g(constraint)124 b FB(The)21 b(VLS)f(duration)i
(constraint)g(relates)2040 1525 y(the)d(e)o(xpected)h(VLS)e(duration)k
Fw(m)2906 1537 y FH(i)2945 1525 y FB(to)c(transmission)i(probability)g
Fw(t)3807 1537 y FH(j)3828 1525 y FB(:)2531 1690 y
SDict begin H.S end
 2531
1690 a 2531 1690 a
SDict begin 10.5 H.A end
 2531 1690 a 2531 1690 a
SDict begin [ /View [/XYZ H.V] /Dest (equation.2) cvn H.B /DEST pdfmark
end
 2531 1690
a 2 w Fw(m)2576 1702 y FH(i)2613 1690 y Ft(=)c Fz(T)2723
1704 y FE(slot)2822 1690 y Ft(+)2890 1706 y Fh(\345)2924
1767 y FH(j)2975 1629 y Fj(\002)3006 1690 y Ft(\()l Fz(W)3089
1702 y FH(i)9 b(j)3147 1690 y Fr(\000)h Fz(T)3251 1704
y FE(slot)3340 1690 y Ft(\))g Fr(\002)g Fw(t)3489 1702
y FH(j)3511 1629 y Fj(\003)3946 1690 y FB(\(2\))2040
1914 y(where)16 b Fz(W)2296 1926 y FH(i)9 b(j)2363 1914
y FB(\()i Fz(j)19 b Fr(6)p Ft(=)e Fz(i)p FB(\))i(is)g(the)h(e)o
(xpected)g(amount)h(of)f(time)f(for)g(Link)h Fz(i)f FB(to)h(w)o(ait)
2040 2002 y(due)15 b(to)g(carrier)o(-sense)f(for)h(Link)26
b Fz(j)16 b FB(to)e(complete)i(a)e(transmission,)i(and)11
b Fz(W)3931 2014 y FH(ii)3983 2002 y FB(is)2040 2089
y(the)19 b(e)o(xpected)h(amount)g(of)f(time)f(for)h(Link)g
Fz(i)g FB(to)f(complete)i(a)f(transmission.)2115 2176
y(W)-6 b(e)29 b(estimate)c Fz(W)2574 2188 y FH(i)9 b(j)2650
2176 y FB(and)26 b Fz(W)2841 2188 y FH(ii)2907 2176 y
FB(as)j(follo)n(ws.)54 b(Let)29 b Fz(L)3464 2149 y FE(dat)3473
2199 y FH(j)3568 2176 y FB(be)g(the)h(inherent)2040 2286
y(D)m(A)-8 b(T)h(A)16 b(loss)h(rate)g(on)h(Link)28 b
Fz(j)r FB(.)22 b(Let)16 b Fz(D)3003 2259 y FE(src)3003
2310 y FH(i)9 b(j)3092 2286 y FB(and)18 b Fz(D)3271 2259
y FE(dst)3271 2310 y FH(i)9 b(j)3360 2286 y FB(be)17
b(the)g(probabilities)h(for)2040 2374 y(Link)f Fz(i)g
FB(to)g(carrier)g(sense)g(Link)29 b Fz(j)r FB(')l(s)16
b(source)i(and)g(destination,)g(respecti)n(v)o(ely)-5
b(.)2040 2461 y(Let)24 b Fz(T)2215 2434 y FE(dat)2209
2484 y FH(j)2315 2461 y FB(be)h(the)g(e)o(xpected)h(duration)g(of)f(D)m
(A)-8 b(T)h(A)24 b(transmission)h(on)g(Link)2051 2548
y Fz(j)r FB(,)h(which)f(consists)g(of)g(a)g(DIFS)f(duration,)j(a)d(MA)m
(C)h(preamble)h(duration,)2040 2635 y(the)19 b(transmission)h(time)e
(for)h(the)g(payload)h(and)g(pack)o(et)f(headers.)25
b(Let)18 b Fz(T)3948 2608 y FE(ack)3942 2658 y FH(j)2040
2722 y FB(be)28 b(the)f(e)o(xpected)h(duration)g(of)f(A)m(CK)g
(transmission)h(on)f(Link)38 b Fz(j)r FB(,)29 b(which)2040
2809 y(consists)h(of)g(a)f(SIFS)f(duration,)k(a)e(MA)m(C)f(preamble)i
(duration,)h(and)e(the)2040 2897 y(transmission)20 b(time)e(for)h(an)g
(A)m(CK.)f(W)-6 b(e)19 b(then)g(estimate)c Fz(W)3561
2909 y FH(i)9 b(j)3627 2897 y FB(and)15 b Fz(W)3807 2909
y FH(ii)3863 2897 y FB(as:)2318 3067 y Fz(W)2376 3079
y FH(i)9 b(j)2498 3067 y Ft(=)75 b Fz(D)2685 3036 y FE(src)2685
3086 y FH(i)9 b(j)2767 3067 y Fr(\002)h Fz(T)2886 3036
y FE(dat)2880 3086 y FH(j)2972 3067 y Ft(+)g Fz(D)3094
3036 y FE(dst)3094 3086 y FH(i)f(j)3177 3067 y Fr(\002)h
Fz(T)3296 3036 y FE(ack)3290 3086 y FH(j)3391 3067 y
Fr(\002)g Ft(\()p FB(1)g Fr(\000)g Fz(L)3645 3036 y FE(dat)3654
3086 y FH(j)3722 3067 y Ft(\))2328 3202 y Fz(W)2386 3214
y FH(ii)2498 3202 y Ft(=)75 b Fz(T)2682 3171 y FE(dat)2667
3222 y FH(i)2767 3202 y Ft(+)10 b Fz(T)2887 3171 y FE(ack)2871
3222 y FH(i)2982 3202 y Fr(\002)g Ft(\()p FB(1)g Fr(\000)g
Fz(L)3236 3171 y FE(dat)3236 3222 y FH(i)3312 3202 y
Ft(\))2115 3357 y FB(W)-6 b(e)23 b(ha)o(v)o(e)h(made)g(tw)o(o)g
(simpli\002cations)g(abo)o(v)o(e.)38 b(W)-6 b(e)23 b(ignore)i(the)e(ef)
n(fect)2040 3444 y(of)e(collision)g(loss)g(on)g(VLS)f(duration)h(and)h
(use)f(only)g(the)g(inherent)g(D)m(A)-8 b(T)h(A)2040
3531 y(loss)16 b(rate)g Fz(L)2342 3504 y FE(dat)2351
3554 y FH(j)2433 3531 y FB(to)g(estimate)g(the)g(probability)h(for)f(a)
h(D)m(A)-8 b(T)h(A)15 b(transmission)h(to)2040 3618 y(succeed.)23
b(This)14 b(simpli\002cation)h(turns)c Fz(W)3108 3630
y FH(i)e(j)3170 3618 y FB(and)i Fz(W)3346 3630 y FH(ii)3398
3618 y FB(into)j(constants)i(instead)2040 3705 y(of)22
b(v)n(ariables)g(at)g(the)f(e)o(xpense)j(of)d(slightly)h(o)o(v)o
(erestimating)g(the)g(e)o(xpected)2040 3792 y(VLS)i(duration.)41
b(W)-6 b(e)24 b(also)h(ignore)h(the)e(ef)n(fect)h(of)g(N)m(A)-10
b(V)24 b(on)e Fz(W)3719 3804 y FH(i)9 b(j)3766 3792 y
FB(,)26 b Fz(i.e)o(.)p FB(,)f(we)2040 3880 y(assume)20
b(that)g(Link)f Fz(i)g FB(w)o(aits)g(for)h(Link)30 b
Fz(j)r FB(')l(s)19 b(A)m(CK)g(only)h(if)f(it)g(is)g(transmitted.)2040
3967 y(In)k(reality)-5 b(,)23 b(if)g(Link)g Fz(i)f FB(successfully)i
(recei)n(v)o(es)f(Link)34 b Fz(j)r FB(')l(s)23 b(D)m(A)-8
b(T)h(A,)21 b(it)i(w)o(ould)2040 4054 y(w)o(ait)e(e)n(v)o(en)h(if)e(no)
i(A)m(CK)e(is)h(transmitted)g(because)h(of)g(the)f(N)m(A)-10
b(V)21 b(v)n(alue)g(em-)2040 4141 y(bedded)27 b(in)e(Link)37
b Fz(j)r FB(')l(s)25 b(D)m(A)-8 b(T)h(A.)24 b(The)h(latter)g
(simpli\002cation)g(may)h(result)f(in)2040 4228 y(slight)18
b(underestimation)i(of)f(the)f(e)o(xpected)i(VLS)d(duration,)j(b)o(ut)e
(the)g(ef)n(fect)2040 4315 y(is)h(small)f(because)i(A)m(CK)f(is)f
(typically)i(much)f(shorter)g(than)h(D)m(A)-8 b(T)h(A.)2040
4436 y FA(Loss)29 b(rate)f(constraint)169 b FB(The)29
b(loss)f(rate)g(constraint)h(relates)f(pack)o(et)2040
4523 y(loss)c(rate)g(to)g(transmission)h(probability)-5
b(.)39 b(T)-6 b(o)24 b(compute)h(pack)o(et)g(loss)g(rate)2046
4611 y Fz(p)2083 4623 y FH(i)2103 4611 y FB(,)16 b(we)g(model)h(both)f
(inherent)h(medium)f(loss)g(and)h(collision)f(loss.)22
b(F)o(ollo)n(w-)2040 4698 y(ing)17 b([)2177 4699 y
SDict begin H.S end
 2177
4699 a -1 x FB(27)2251 4647 y
SDict begin H.R end
 2251 4647 a 2251 4698 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lili-mobicom07) cvn H.B /ANN pdfmark end

2251 4698 a FB(],)f(we)g(further)h(distinguish)g(between)g(tw)o(o)f
(types)h(of)f(collision)h(loss:)2040 4785 y(\(i\))23
b(synchronous)j(loss)e(that)f(occurs)i(when)f(the)f(tw)o(o)h(senders)h
(can)f(carrier)2040 4872 y(sense)k(each)f(other;)k(and)d(\(ii\))d
(asynchronous)30 b(loss)d(that)g(occurs)g(when)h(at)2040
4959 y(least)19 b(one)g(sender)h(cannot)g(carrier)f(sense)g(the)g
(other)l(.)2115 5046 y(Assuming)e(independence)i(among)f(dif)n(ferent)f
(types)g(of)g(loss)f(caused)i(by)2040 5134 y(dif)n(ferent)h(links,)g
(the)g(pack)o(et)h(success)g(probability)f(of)g(Link)g
Fz(i)f FB(is)2087 5311 y(1)10 b Fr(\000)16 b Fz(p)2245
5323 y FH(i)2283 5311 y Ft(=)h(\()p FB(1)10 b Fr(\000)g
Fz(L)2544 5280 y FE(dat)2544 5331 y FH(i)2620 5311 y
Ft(\))g Fr(\002)g Ft(\()p FB(1)g Fr(\000)g Fz(L)2913
5280 y FE(ack)2913 5331 y FH(i)3000 5311 y Ft(\))g Fr(\002)3107
5327 y Fh(\325)3117 5391 y FH(j)q FG(6)p Fs(=)p FH(i)3204
5228 y Fj(h)3240 5311 y Ft(\()p FB(1)g Fr(\000)g Fv(`)3415
5273 y FE(sync)3415 5335 y FH(i)f(j)3526 5311 y Ft(\))h
Fr(\002)g Ft(\()p FB(1)g Fr(\000)g Fv(`)3808 5273 y FE(asyn)3808
5335 y FH(i)f(j)3921 5311 y Ft(\))3950 5228 y Fj(i)p
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152 -359
a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.5) cvn H.B /DEST pdfmark
end
 -152 -359 a 290
x FB(where)17 b Fz(L)89 -96 y FE(dat)89 -45 y FH(i)181
-69 y FB(and)g Fz(L)347 -96 y FE(ack)347 -45 y FH(i)448
-69 y FB(are)g(the)g(inherent)g(loss)g(rate)f(of)h(D)m(A)-8
b(T)h(A)16 b(and)h(A)m(CK)f(on)-152 28 y(Link)k Fz(i)p
FB(;)f Fv(`)101 -10 y FE(sync)101 52 y FH(i)9 b(j)231
28 y FB(and)20 b Fv(`)389 -10 y FE(asyn)389 52 y FH(i)9
b(j)519 28 y FB(are)19 b(synchronous)j(and)e(asynchronous)i(collision)
-152 115 y(loss)d(on)h(Link)e Fz(i)h FB(caused)h(by)f(Link)30
b Fz(j)r FB(,)18 b(which)i(can)f(be)g(modeled)h(as)f(follo)n(ws.)-40
276 y Fr(\017)38 b FB(The)18 b(synchronous)i(collision)e(loss)g(rate)g
(is)g(gi)n(v)o(en)g(by)h Fv(`)1475 238 y FE(sync)1475
300 y FH(i)9 b(j)1601 276 y Ft(=)16 b Fz(S)1712 288 y
FH(i)9 b(j)1759 276 y Fw(t)1801 288 y FH(j)1822 276 y
FB(,)35 363 y(where)18 b Fw(t)277 375 y FH(j)316 363
y FB(captures)g(the)f(probability)i(for)e(Link)29 b Fz(j)19
b FB(to)e(start)g(transmit-)35 450 y(ting)k(at)f(the)h(same)g(time)g
(as)f(Link)h Fz(i)p FB(,)f(and)i Fz(S)1156 462 y FH(i)9
b(j)1223 450 y FB(is)20 b(the)h(probability)h(for)35
537 y(a)h(pack)o(et)i(on)f(Link)f Fz(i)g FB(to)g(get)g(lost)h(due)g(to)
f(collision)g(with)g(a)h(pack)o(et)35 625 y(on)f(Link)34
b Fz(j)24 b FB(conditioned)g(on)g(the)e(f)o(act)h(that)f(the)h(tw)o(o)g
(pack)o(et)h(trans-)35 712 y(missions)k(start)f(at)g(the)h(same)g
(time.)49 b(Note)27 b(that)h(a)f(pack)o(et)i(is)e(lost)35
799 y(when)e(either)f(its)g(D)m(A)-8 b(T)h(A)23 b(or)h(A)m(CK)g(is)g
(lost.)39 b(So)24 b Fz(S)1368 811 y FH(i)9 b(j)1439 799
y FB(combines)26 b(the)35 886 y(conditional)20 b(loss)f(rates)g(of)g(D)
m(A)-8 b(T)h(A)18 b(and)h(A)m(CK.)-40 1035 y Fr(\017)38
b FB(The)21 b(asynchronous)i(collision)e(loss)g(rate)f(is)h(gi)n(v)o
(en)g(by)g Fv(`)1530 997 y FE(asyn)1530 1059 y FH(i)9
b(j)1659 1035 y Ft(=)17 b FB(1)11 b Fr(\000)35 1160 y
Ft(\()p FB(1)j Fr(\000)f Fw(q)234 1172 y FH(j)256 1160
y Ft(\))285 1132 y FH(A)321 1141 y Fo(i)6 b(j)359 1160
y FB(,)28 b(where)g Fw(q)664 1172 y FH(j)717 1116 y Fg(4)706
1160 y Ft(=)800 1119 y FJ(t)832 1128 y Fo(j)p 796 1142
58 3 v 797 1185 a FJ(m)836 1194 y Fo(j)890 1160 y FB(is)f(the)g
(probability)h(for)f(Link)38 b Fz(j)29 b FB(to)35 1262
y(start)21 b(transmitting)g(at)h(a)f(random)i(time)e(instant.)31
b(It)20 b(is)i(obtained)g(by)35 1349 y(normalizing)h
Fw(t)460 1361 y FH(j)504 1349 y FB(by)g(the)f(e)o(xpected)i(VLS)d
(duration)k Fw(m)1489 1361 y FH(j)1511 1349 y FB(.)33
b Fz(A)1609 1361 y FH(i)9 b(j)1678 1349 y FB(is)22 b(the)35
1436 y(asynchronous)g(collision)d(loss)g(e)o(xponent)h(de\002ned)g(as)
630 1632 y Fz(A)676 1644 y FH(i)9 b(j)749 1589 y Fg(4)739
1632 y Ft(=)813 1539 y Fi(Z)880 1562 y FH(T)909 1571
y Fq(m)851 1691 y FG(\000)p FH(T)925 1700 y Fq(m)965
1632 y Fz(C)1013 1644 y FH(i)g(j)1060 1632 y Ft(\()p
Fz(x)p Ft(\))p Fz(d)t(x)p Fv(;)35 1832 y FB(where)19
b Fz(T)273 1843 y FJ(m)334 1832 y FB(is)f(the)h(maximum)g(duration)g
(of)g(a)f(pack)o(et)h(transmission,)31 1919 y Fz(C)79
1931 y FH(i)9 b(j)126 1919 y Ft(\()p Fz(x)p Ft(\))19
b FB(is)g(the)g(conditional)i(probability)f(for)f(a)g(pack)o(et)h(on)g
(Link)f Fz(i)g FB(to)35 2006 y(get)c(lost)g(due)g(to)g(collision)g
(with)g(a)g(pack)o(et)h(on)f(Link)26 b Fz(j)17 b FB(when)e(the)g(start)
35 2093 y(times)f(of)h(the)g(tw)o(o)f(pack)o(et)i(transmissions)f(dif)n
(fer)f(by)h(of)n(fset)g Fz(x)p FB(.)22 b(Thus,)31 2180
y Fz(C)79 2192 y FH(i)9 b(j)126 2180 y Ft(\()p FB(0)p
Ft(\))20 b(=)f Fz(S)355 2192 y FH(i)9 b(j)402 2180 y
FB(.)38 b(T)-6 b(o)24 b(understand)i(the)e(intuition)g(behind)h(the)f
(de\002ni-)35 2268 y(tion)k(of)g Fz(A)315 2280 y FH(i)9
b(j)361 2268 y FB(,)30 b(imagine)e(that)g(we)g(di)n(vide)h(time)e(into)
h(bins)h(of)f(\002x)o(ed)35 2355 y(width)19 b Fu(D)p
Fz(x)p FB(.)k(F)o(or)c(a)g(gi)n(v)o(en)g(time)g(bin)g(at)g(of)n(fset)g
Fz(x)p FB(,)g(the)g(probability)h(for)35 2442 y(Link)26
b Fz(j)16 b FB(to)f(start)f(a)h(transmission)h(in)e(it)h(is)f
Fw(q)1137 2454 y FH(j)1158 2442 y Fu(D)p Fz(x)p FB(.)22
b(Similar)14 b(to)h(the)f(anal-)35 2529 y(ysis)26 b(of)h(synchronous)h
(collision)f(loss,)g(the)g(probability)g(for)f(Link)46
2616 y Fz(j)r FB(')l(s)17 b(pack)o(et)i(to)f(cause)g(collision)g(loss)g
(in)g(Link)f Fz(i)p FB(')l(s)g(pack)o(et)i(at)f(of)n(fset)f
Fz(x)35 2703 y FB(is)g(gi)n(v)o(en)g(by)d Fz(C)417 2715
y FH(i)9 b(j)464 2703 y Ft(\()p Fz(x)p Ft(\))p Fw(q)603
2715 y FH(j)625 2703 y Fu(D)p Fz(x)p FB(.)22 b(The)17
b(probability)h(for)e(Link)h Fz(i)p FB(')l(s)g(pack)o(et)h(to)35
2791 y(succeed)23 b(despite)g(collision)f(with)g(Link)33
b Fz(j)r FB(')l(s)21 b(pack)o(et)j(can)e(therefore)35
2878 y(be)27 b(approximated)i(as)e(1)14 b Fr(\000)9 b
Fz(C)825 2890 y FH(i)g(j)872 2878 y Ft(\()p Fz(x)p Ft(\))p
Fw(q)1011 2890 y FH(j)1033 2878 y Fu(D)p Fz(x)21 b Fr(\031)g
Ft(\()p FB(1)14 b Fr(\000)f Fw(q)1411 2890 y FH(j)1432
2878 y Ft(\))1458 2851 y FH(C)1496 2860 y Fo(i)6 b(j)1530
2851 y Fs(\()p FH(x)p Fs(\))p FF(D)p FH(x)1667 2878 y
FB(.)47 b(As-)35 2965 y(suming)29 b(independent)h(collision)e(loss)g
(for)g(dif)n(ferent)g(of)n(fsets,)j(the)35 3052 y(total)26
b(asynchronous)j(collision)d(loss)g(probability)h(for)f(Link)g
Fz(i)g FB(can)35 3139 y(therefore)19 b(be)h(approximated)g(by)52
3307 y(1)10 b Fr(\000)264 3323 y Fh(\325)167 3390 y FH(x)p
FG(2)p Fs([)p FG(\000)p FH(T)322 3399 y Fq(m)355 3390
y FI(;)p FH(T)400 3399 y Fq(m)432 3390 y Fs(])448 3307
y Ft(\()p FB(1)g Fr(\000)g Fw(q)640 3319 y FH(j)662 3307
y Ft(\))688 3276 y FH(C)726 3285 y Fo(i)c(j)760 3276
y Fs(\()p FH(x)p Fs(\))p FF(D)p FH(x)914 3307 y Ft(=)16
b FB(1)10 b Fr(\000)g Ft(\()p FB(1)g Fr(\000)g Fw(q)1295
3319 y FH(j)1319 3307 y Ft(\))1348 3275 y FF(\345)1389
3283 y Fo(x)p Fg(2)p Fl([)p Fg(\000)p Fo(T)1500 3289
y Fq(m)1532 3283 y Fp(;)p Fo(T)1565 3289 y Fq(m)1596
3283 y Fl(])1615 3271 y FH(C)1653 3280 y Fo(i)c(j)1687
3271 y Fs(\()p FH(x)p Fs(\))p FF(D)p FH(x)35 3589 y FB(whose)16
b(limit)d(becomes)j(1)7 b Fr(\000)g Ft(\()p FB(1)g Fr(\000)g
Fw(q)967 3601 y FH(j)988 3589 y Ft(\))1017 3506 y Fe(R)1051
3514 y Fo(T)1072 3520 y Fq(m)1041 3566 y Fg(\000)p Fo(T)1094
3572 y Fq(m)1134 3550 y FH(C)1172 3559 y Fo(i)f(j)1206
3550 y Fs(\()p FH(x)p Fs(\))p FH(d)s(x)1352 3589 y Ft(=)12
b FB(1)7 b Fr(\000)g Ft(\()p FB(1)g Fr(\000)g Fw(q)1717
3601 y FH(j)1738 3589 y Ft(\))1767 3562 y FH(A)1803 3571
y Fo(i)f(j)35 3677 y FB(as)19 b Fu(D)p Fz(x)g FB(tends)g(to)g(0.)-77
3837 y(Putting)d(it)g(all)f(together)m(,)i(we)f(can)h(model)g(pack)o
(et)g(loss)f(rate)22 b Fz(p)1519 3849 y FH(i)1556 3837
y FB(as)16 b(a)g(func-)-152 3924 y(tion)j(of)g(transmission)h
(probability)f Fw(t)849 3936 y FH(j)889 3924 y FB(and)h
Fw(q)1064 3936 y FH(j)1102 3924 y Ft(=)1191 3884 y FJ(t)1223
3893 y Fo(j)p 1186 3907 V 1187 3950 a FJ(m)1226 3959
y Fo(j)1254 3924 y FB(:)194 4110 y Fz(p)231 4122 y FH(i)286
4110 y Ft(=)36 b FB(1)29 b Fr(\000)g Ft(\()p FB(1)10
b Fr(\000)g Fz(L)719 4079 y FE(dat)719 4129 y FH(i)795
4110 y Ft(\))g Fr(\002)g Ft(\()p FB(1)g Fr(\000)g Fz(L)1088
4079 y FE(ack)1088 4129 y FH(i)1175 4110 y Ft(\))p Fr(\002)616
4271 y Fh(\325)626 4335 y FH(j)q FG(6)p Fs(=)p FH(i)713
4172 y Fj(h)748 4255 y Ft(\()p FB(1)g Fr(\000)g Fz(S)929
4267 y FH(i)f(j)977 4255 y Fw(t)1019 4267 y FH(j)1041
4255 y Ft(\))h Fr(\002)g Ft(\()p FB(1)g Fr(\000)g Fw(q)1340
4267 y FH(j)1363 4255 y Ft(\))1392 4224 y FH(A)1428 4233
y Fo(i)c(j)1466 4172 y Fj(i)1754 4255 y
SDict begin H.S end
 1754 4255 a 1754
4255 a
SDict begin 13.5 H.A end
 1754 4255 a 1754 4255 a
SDict begin [ /View [/XYZ H.V] /Dest (equation.3) cvn H.B /DEST pdfmark
end
 1754 4255 a FB(\(3\))-152
4509 y FA(F)n(easibility)16 b(constraint)99 b FB(W)m(ith)16
b(802.11)h(DCF)-6 b(,)16 b(the)h(transmission)g(prob-)-152
4596 y(ability)i Fw(t)91 4608 y FH(i)129 4596 y FB(is)f(feasible)h(if)f
(and)h(only)g(if)f(it)g(is)g(bounded)j(by)e(a)g(function)g(of)g(the)
-152 4684 y(pack)o(et)h(loss)f(rate)25 b Fz(p)370 4696
y FH(i)390 4684 y FB(.)e(Speci\002cally)-5 b(,)18 b(we)h(ha)o(v)o(e)g
([)1105 4684 y
SDict begin H.S end
 1105 4684 a FB(1)1142 4633 y
SDict begin H.R end
 1142 4633
a 1142 4684 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.bianchi) cvn H.B /ANN pdfmark end
 1142 4684 a FB(,)1180 4685 y
SDict begin H.S end
 1180 4685
a -1 x FB(27)1254 4633 y
SDict begin H.R end
 1254 4633 a 1254 4684 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lili-mobicom07) cvn H.B /ANN pdfmark end
 1254
4684 a FB(])576 4872 y
SDict begin H.S end
 576 4872 a 576 4872 a
SDict begin 10.5 H.A end
 576 4872
a 576 4872 a
SDict begin [ /View [/XYZ H.V] /Dest (equation.4) cvn H.B /DEST pdfmark
end
 576 4872 a Fw(t)609 4884 y FH(i)645 4872
y Fr(\024)888 4821 y FB(2)p 730 4855 353 3 v 730 4923
a(2)10 b Ft(+)c Fz(C)n(W)11 b Ft(\()6 b Fz(p)1034 4935
y FH(i)1054 4923 y Ft(\))1093 4872 y Fv(;)640 b FB(\(4\))-152
5083 y(where)22 b Fz(C)n(W)9 b Ft(\()d Fz(p)243 5095
y FH(i)264 5083 y Ft(\))20 b(=)c Fz(C)n(W)493 5097 y
FE(min)601 5083 y Ft(+)i Fz(p)714 5095 y FH(i)747 5083
y Fr(\002)13 b Ft(\()p FB(1)g Ft(+)c Fz(C)n(W)1070 5097
y FE(min)1165 5083 y Ft(\))k Fr(\002)1278 5089 y Fu(\345)1331
5052 y FH(M)s FG(\000)p FE(1)1331 5109 y FH(k)q Fs(=)p
FE(0)1460 5083 y Ft(\()p FB(2)6 b Fz(p)1569 5095 y FH(i)1590
5083 y Ft(\))1619 5056 y FH(k)1675 5083 y FB(is)25 b(the)-152
5170 y(e)o(xpected)d(contention)g(windo)n(w)g(size)f(under)g(pack)o(et)
h(loss)f(rate)27 b Fz(p)1584 5182 y FH(i)1604 5170 y
FB(,)17 b Fz(C)n(W)1746 5184 y FE(min)-152 5257 y FB(is)32
b(the)g(minimum)g(contention)i(windo)n(w)e(size)g(in)g(slots.)62
b(F)o(or)32 b(802.11a,)-156 5362 y Fz(C)n(W)-50 5376
y FE(min)45 5362 y FB(=15,)20 b Fz(M)f Ft(=)e FB(log)452
5381 y FE(2)493 5279 y Fj(\020)545 5330 y FH(C)o(W)628
5339 y Fm(max)703 5330 y Fs(+)p FE(1)p 548 5345 230 3
v 548 5388 a FH(C)o(W)631 5397 y Fm(min)700 5388 y Fs(+)p
FE(1)787 5279 y Fj(\021)832 5362 y FB(,)h(and)e Fz(C)n(W)1098
5373 y FE(max)1203 5362 y FB(=1023.)2040 -152 y
SDict begin H.S end
 2040
-152 a 2040 -152 a
SDict begin 10.5 H.A end
 2040 -152 a 2040 -152 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.2) cvn H.B /DEST
pdfmark end
 2040 -152
a 83 x FC(4.2)99 b(Extensions)26 b(to)f(the)g(Basic)g(Model)2115
39 y FB(W)-6 b(e)14 b(no)n(w)h(e)o(xtend)g(the)g(basic)f(model)h(abo)o
(v)o(e)h(to)e(support)h(R)l(TS/CTS,)d(multi-)2040 126
y(hop)18 b(\003o)n(ws,)e(and)i(TCP)d(traf)n(\002c.)22
b(In)17 b(the)g(interest)f(of)h(space,)h(we)e(only)i(present)2040
214 y(the)h(k)o(e)o(y)h(ideas.)2040 327 y FA(R)m(TS/CTS)143
b FB(T)-6 b(o)24 b(support)h(R)l(TS/CTS,)c(we)k(mak)o(e)g(tw)o(o)f
(modi\002cations.)2040 414 y(First,)f(in)f(the)h(VLS)f(constraint)i
(\(Eq.)3045 414 y
SDict begin H.S end
 3045 414 a FB(2)3082 364 y
SDict begin H.R end
 3082 364
a 3082 414 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(equation.2) cvn H.B /ANN pdfmark end
 3082 414 a FB(\),)g(constants)19 b Fz(W)3504
426 y FH(i)9 b(j)3575 414 y FB(and)19 b Fz(W)3759 426
y FH(ii)3819 414 y FB(are)k(up-)2040 501 y(dated)28 b(to)e(account)i
(for)f(the)g(additional)h(delay)f(introduced)h(by)g(R)l(TS)d(and)2040
589 y(CTS.)c(Second,)i(the)f(loss)g(rate)g(constraint)h(\(Eq.)3329
590 y
SDict begin H.S end
 3329 590 a -1 x FB(3)3366 538 y
SDict begin H.R end
 3366 538 a 3366
589 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(equation.3) cvn H.B /ANN pdfmark end
 3366 589 a FB(\))f(is)g(e)o(xtended)i(to)e(incor)o(-)2040
676 y(porate)i(the)f(inherent)g(R)l(TS)f(and)i(CTS)d(loss)i(rates,)h
Fz(L)3442 649 y FE(rts)3442 699 y FH(i)3527 676 y FB(and)g
Fz(L)3700 649 y FE(cts)3700 699 y FH(i)3768 676 y FB(,)g(and)f(the)2040
763 y(additional)d(collision)f(losses)g(in)m(v)o(olving)h(R)l(TS)d(and)
i(CTS.)2040 876 y FA(Multi-hop)25 b(\003o)o(ws)164 b
FB(Gi)n(v)o(en)28 b(routing)g(information,)i(we)e(can)g(con)m(v)o(ert)
2040 964 y(multi-hop)17 b(UDP)e(\003o)n(ws)g(into)h(one-hop)i(UDP)d
(\003o)n(ws.)22 b(Speci\002cally)-5 b(,)16 b(let)f FA(x)g
Ft(=)2040 1051 y Fr(h)p Fz(x)2102 1065 y FH(d)2138 1051
y Fr(i)2167 1064 y FH(m)p FG(\002)p FE(1)2311 1051 y
FB(be)23 b(the)h(v)o(ector)f(of)g(end-to-end)i(\003o)n(w)e(rates.)36
b(Let)22 b Fz(R)d Ft(=)g([)p Fz(R)3840 1065 y FH(id)3892
1051 y Ft(])3913 1062 y FH(n)p FG(\002)p FH(m)2040 1138
y FB(be)e(the)g Fz(n)8 b Fr(\002)g Fz(m)17 b FB(routing)g(matrix,)g
(where)g Fz(R)3125 1152 y FH(id)3193 1138 y FB(is)g(the)f(fraction)h
(of)g(Flo)n(w)f Fz(d)21 b FB(that)2040 1225 y(tra)o(v)o(erses)e(Link)h
Fz(i)p FB(.)k(Let)19 b FA(g)e Ft(=)g Fr(h)p Fz(g)2861
1237 y FH(i)2882 1225 y Fr(i)2911 1238 y FH(n)p FG(\002)p
FE(1)3037 1225 y FB(be)j(the)f(v)o(ector)h(of)g(link)f(loads.)25
b(Then,)2040 1312 y(we)19 b(ha)o(v)o(e)2910 1449 y
SDict begin H.S end
 2910
1449 a 2910 1449 a
SDict begin 10.5 H.A end
 2910 1449 a 2910 1449 a
SDict begin [ /View [/XYZ H.V] /Dest (equation.5) cvn H.B /DEST pdfmark
end
 2910 1449
a FA(g)e Ft(=)f Fz(R)10 b Fr(\001)g FA(x)784 b FB(\(5\))2115
1586 y(Note)17 b(that)f(the)h(con)m(v)o(ersion)h(abo)o(v)o(e)g(applies)
f(only)g(when)g(the)g(end-to-end)2040 1673 y(\003o)n(w)i(rates)f(are)h
Fz(feasible)p FB(.)k(If)18 b(the)h(end-to-end)h(\003o)n(w)f(rates)f
(are)h(infeasible,)f(a)2040 1761 y(multi-hop)24 b(\003o)n(w)e(may)i
(result)f(in)g(more)g(traf)n(\002c)f(on)i(hops)g(near)f(the)g(origin,)
2040 1848 y(which)d(cannot)h(be)f(carried)g(forw)o(ard)g(by)g(the)g
(subsequent)i(hops.)k(Restrict-)2040 1935 y(ing)h(to)f(only)h(feasible)
f(\003o)n(w)h(rates)f(is)g(not)g(a)h(problem)g(for)f(model-dri)n(v)o
(en)2040 2022 y(optimization)g(because)i(we)d(only)i(need)g(to)e
(consider)i(feasible)f(\003o)n(w)g(rate)2040 2109 y(assignments.)2040
2223 y FA(TCP)e(traf\002c)147 b FB(Finally)-5 b(,)25
b(when)h(TCP)d(is)h(used)i(as)e(the)h(transport)g(layer)2040
2310 y(protocol,)g(we)f(also)f(need)h(to)g(tak)o(e)g(into)f(account)i
(the)e(TCP)g(ackno)n(wledg-)2040 2397 y(ment)d(traf)n(\002c.)j(T)-6
b(o)19 b(con)m(v)o(ert)h(multi-hop)g(TCP)e(demands)i(into)g(one-hop)g
(link)2040 2484 y(demands,)f(we)f(replace)g(the)f(routing)i(matrix)e
Fz(R)g FB(in)h(Eq.)3492 2485 y
SDict begin H.S end
 3492 2485 a -1 x FB(5)3529
2434 y
SDict begin H.R end
 3529 2434 a 3529 2484 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(equation.5) cvn H.B /ANN pdfmark end
 3529 2484 a 18 w FB(with)f(a)g(ne)n(w)h
(rout-)2040 2571 y(ing)27 b(matrix)f Fz(R)2429 2584 y
FE(TCP)2565 2571 y FB(that)g(combines)h(the)g(forw)o(ard)f(and)h(re)n
(v)o(erse)g(direction)2040 2659 y(of)22 b(TCP)f(connections.)33
b(Speci\002cally)-5 b(,)23 b(let)e Fz(R)3222 2673 y FE(fwd)3338
2659 y FB(and)h Fz(R)3513 2670 y FE(re)o(v)3612 2659
y FB(be)g(the)g(routing)2040 2746 y(matrix)j(for)g(the)g(forw)o(ard)g
(and)h(re)n(v)o(erse)f(direction)g(of)g(TCP)f(connections,)2040
2833 y(respecti)n(v)o(ely)-5 b(.)24 b(W)-6 b(e)19 b(de\002ne)2665
2990 y
SDict begin H.S end
 2665 2990 a 2665 2990 a
SDict begin 10.5 H.A end
 2665 2990 a 2665 2990
a
SDict begin [ /View [/XYZ H.V] /Dest (equation.6) cvn H.B /DEST pdfmark
end
 2665 2990 a Fz(R)2711 3003 y FE(TCP)2849 2946 y Fg(4)2838
2990 y Ft(=)e Fz(R)2959 3004 y FE(fwd)3064 2990 y Ft(+)10
b Fw(a)17 b Fr(\002)10 b Fz(R)3310 3001 y FE(re)o(v)3387
2990 y Fv(;)538 b FB(\(6\))2040 3130 y(where)22 b(the)f(coef)n
(\002cient)h Fw(a)27 b FB(re\003ects)21 b(the)h(size)f(and)h(frequenc)o
(y)h(of)e(TCP)f(ac-)2040 3217 y(kno)n(wledgments.)26
b(Assuming)20 b(that)f(TCP)f(ackno)n(wledgments)j(contain)f(no)2040
3304 y(payload,)33 b(without)d(TCP)e(delayed)i(ackno)n(wledgments,)35
b(we)29 b(simply)h(set)2040 3391 y Fw(a)25 b Ft(=)2260
3362 y FH(H)p 2199 3374 167 3 v 2199 3417 a(H)5 b Fs(+)p
FH(E)t(P)2376 3391 y FB(,)24 b(where)f Fz(H)28 b FB(is)23
b(the)g(total)g(size)g(of)h(IP)e(and)i(TCP)e(headers,)j(and)2040
3478 y Fz(E)5 b(P)23 b FB(is)f(the)i(e)o(xpected)g(payload)g(size.)36
b(W)m(ith)22 b(TCP)g(delayed)j(ackno)n(wledg-)2040 3566
y(ments)19 b(enabled,)h(we)f(set)g Fw(a)j Ft(=)17 b FB(0)p
Fv(:)p FB(5)10 b Fr(\002)3104 3536 y FH(H)p 3043 3548
V 3043 3591 a(H)5 b Fs(+)p FH(E)t(P)3220 3566 y FB(.)2040
3665 y
SDict begin H.S end
 2040 3665 a 2040 3665 a
SDict begin 10.5 H.A end
 2040 3665 a 2040 3665
a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.3) cvn H.B /DEST
pdfmark end
 2040 3665 a 77 x FC(4.3)99 b(Model)25 b(Initialization)2115
3850 y FB(T)-6 b(o)27 b(apply)g(our)h(model,)h(we)e(need)h(to)f
(initialize)f(the)h(constants)h(in)f(T)-6 b(a-)2040 3937
y(ble)2155 3937 y
SDict begin H.S end
 2155 3937 a FB(1)2192 3887 y
SDict begin H.R end
 2192 3887
a 2192 3937 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(table.1) cvn H.B /ANN pdfmark end
 2192 3937 a FB(.)37 b(The)23 b(k)o(e)o(y)h(constant)h
(are:)32 b(\(i\))23 b(inherent)h(loss)g(rates)f Fz(L)3641
3910 y FE(dat)3641 3961 y FH(i)3716 3937 y FB(,)h Fz(L)3801
3910 y FE(ack)3801 3961 y FH(i)3885 3937 y FB(,)h Fz(L)3971
3910 y FE(rts)3971 3961 y FH(i)2040 4036 y FB(and)20
b Fz(L)2209 4009 y FE(cts)2209 4060 y FH(i)2278 4036
y FB(;)g(\(ii\))e(carrier)i(sense)g(probabilities)g Fz(D)3272
4009 y FE(src)3272 4060 y FH(i)9 b(j)3364 4036 y FB(and)20
b Fz(D)3545 4009 y FE(dst)3545 4060 y FH(i)9 b(j)3617
4036 y FB(;)20 b(and)g(\(iii\))e(col-)2040 4123 y(lision)f(loss)g
(parameters)h Fz(S)2738 4135 y FH(i)9 b(j)2802 4123 y
FB(and)17 b Fz(A)2972 4135 y FH(i)9 b(j)3019 4123 y FB(.)22
b(F)o(or)16 b(simplicity)-5 b(,)17 b(we)g(estimate)g(these)2040
4211 y(parameters)26 b(by)f(conducting)i(pairwise)d(broadcast)i
(measurements)g([)3914 4212 y
SDict begin H.S end
 3914 4212 a -1 x FB(25)3988
4160 y
SDict begin H.R end
 3988 4160 a 3988 4211 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.imc05) cvn H.B /ANN pdfmark end
 3988 4211 a FB(],)2040
4298 y(b)o(ut)h(our)h(model)g(can)g(just)f(as)g(easily)h(use)f(the)h
(inputs)g(inferred)f(by)h(more)2040 4385 y(scalable)19
b(approaches)i([)2679 4386 y
SDict begin H.S end
 2679 4386 a -1 x FB(27)2753
4334 y
SDict begin H.R end
 2753 4334 a 2753 4385 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lili-mobicom07) cvn H.B /ANN pdfmark end
 2753 4385 a FB(].)2040
4449 y
SDict begin H.S end
 2040 4449 a 2040 4449 a
SDict begin 10.5 H.A end
 2040 4449 a 2040 4449
a
SDict begin [ /View [/XYZ H.V] /Dest (Item.4) cvn H.B /DEST pdfmark
end
 2040 4449 a 2133 4553 a FB(1.)38 b(W)-6 b(e)15 b(\002rst)f(let)h(one)
h(Node)f Fz(a)h FB(send)g(alone.)22 b(All)15 b(the)g(other)g(nodes)i
(record)2227 4640 y(the)26 b(recei)n(ving)h(rates)e(from)h
Fz(a)p FB(.)44 b(Di)n(viding)27 b(the)e(recei)n(ving)i(rates)f(by)2227
4727 y Fz(a)p FB(')l(s)k(sending)h(rate)e(yields)h(the)g(inherent)g
(loss)g(rates)f(for)h(all)f(links)2227 4814 y(from)24
b Fz(a)p FB(.)41 b(A)m(CK,)23 b(R)l(TS,)g(and)i(CTS)e(are)i(smaller)f
(than)h(the)g(smallest)2227 4901 y(UDP)j(pack)o(ets.)56
b(W)-6 b(e)29 b(approximate)h(their)f(inherent)h(loss)g(rate)f(by)2227
4989 y(broadcasting)20 b(UDP)f(pack)o(ets)h(with)e(1-byte)i(payload.)
2040 5012 y
SDict begin H.S end
 2040 5012 a 2040 5012 a
SDict begin 10.5 H.A end
 2040 5012 a 2040
5012 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.5) cvn H.B /DEST pdfmark
end
 2040 5012 a 2133 5116 a FB(2.)38 b(W)-6 b(e)26
b(ne)o(xt)h(ha)o(v)o(e)g(tw)o(o)f(nodes)i Fz(a)f FB(and)g
Fz(b)g FB(send)g(simultaneously)-5 b(.)47 b(By)2227 5203
y(comparing)31 b Fz(a)p FB(')l(s)f(sending)h(rates)e(when)i(both)f
Fz(a)g FB(and)g Fz(b)g FB(are)g(send-)2227 5290 y(ing,)22
b(we)g(can)g(estimate)g(the)f(probability)i(for)e Fz(a)h
FB(to)g(carrier)f(sense)i Fz(b)p FB(.)2227 5378 y(Speci\002cally)-5
b(,)23 b(we)f(can)h(sho)n(w)h(that)e Fz(a)p FB(')l(s)h(broadcast)h
(pack)o(et)f(sending)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152 -359
a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.6) cvn H.B /DEST pdfmark
end
 -152 -359 a 35
-69 a FB(rate)19 b(when)g Fz(b)g FB(is)g(transmitting)g(is)f(gi)n(v)o
(en)i(by)895 49 y Fw(t)928 60 y FH(a)p 214 82 1427 3
v 214 151 a Fz(T)250 165 y FE(slot)349 151 y Ft(+)10
b(\()p Fz(T)482 162 y FH(a)526 151 y Fr(\000)g Fz(T)630
165 y FE(slot)718 151 y Ft(\))g Fr(\002)g Fw(t)858 162
y FH(a)903 151 y Ft(+)g(\()p Fz(T)1036 165 y FH(b)1079
151 y Fr(\000)g Fz(T)1183 165 y FE(slot)1272 151 y Ft(\))g
Fr(\002)g Fw(t)1412 165 y FH(b)1456 151 y Fr(\002)g Fz(D)1578
165 y FH(ab)1651 99 y Fv(;)35 302 y FB(where)19 b Fw(t)269
313 y FH(a)319 302 y Ft(=)d Fw(t)426 316 y FH(b)476 302
y Ft(=)657 273 y FE(2)p 561 285 223 3 v 561 328 a(2)p
Fs(+)m FH(C)o(W)715 337 y Fm(min)812 302 y FB(for)i(saturated)i
(broadcast)g(traf)n(\002c,)e Fz(D)1779 316 y FH(ab)35
389 y FB(is)24 b(the)g(probability)h(for)f Fz(a)g FB(to)g(carrier)g
(sense)h Fz(b)p FB(,)g Fz(T)1352 400 y FH(a)1409 389
y FB(and)g Fz(T)1577 403 y FH(b)1634 389 y FB(are)g(the)35
476 y(pack)o(et)16 b(transmission)g(times)f(including)h(preamble)g(and)
f(header)l(.)23 b(So)35 564 y(we)c(can)g(easily)g(compute)h(the)e
(single)h(unkno)n(wn)i Fz(D)1387 578 y FH(ab)1468 564
y FB(based)e(on)h(the)35 651 y(measured)g(sending)g(rate)f(of)g
Fz(a)p FB(.)-152 678 y
SDict begin H.S end
 -152 678 a -152 678 a
SDict begin 10.5 H.A end
 -152 678
a -152 678 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.6) cvn H.B /DEST pdfmark
end
 -152 678 a -58 785 a FB(3.)37 b(T)-6 b(o)14
b(estimate)h Fz(S)427 797 y FH(i)9 b(j)488 785 y FB(and)15
b Fz(A)656 797 y FH(i)9 b(j)702 785 y FB(,)15 b(we)f(e)n(v)n(aluate)i
(the)e(conditional)i(loss)e(prob-)35 873 y(ability)f
Fz(C)287 885 y FH(i)c(j)334 873 y Ft(\()p Fz(x)p Ft(\))17
b FB(for)f(dif)n(ferent)h(of)n(fsets)g Fz(x)g FB(between)h(the)f(start)
f(times)h(of)35 960 y(the)30 b(tw)o(o)f(pack)o(et)i(transmissions)f(on)
g(Links)f Fz(i)h FB(and)41 b Fz(j)r FB(.)54 b(Based)30
b(on)35 1047 y(carrier)23 b(sense)g(probabilities,)h(we)e(estimate)h
(the)g(probability)g(for)g(a)35 1134 y(broadcast)e(transmission)f(on)f
(Link)h Fz(i)f FB(to)g(o)o(v)o(erlap)h(with)f(a)h(broadcast)35
1221 y(transmission)25 b(on)f(Link)35 b Fz(j)r FB(.)j(W)-6
b(e)24 b(denote)h(this)e(o)o(v)o(erlapping)j(proba-)35
1308 y(bility)f(by)i Fz(O)373 1281 y FE(bcast)373 1332
y FH(i)9 b(j)522 1308 y FB(and)26 b(compute)h(it)e(by)i(applying)g(the)
f(tw)o(o-sender)35 1396 y(broadcast)33 b(model)g(of)f([)691
1397 y
SDict begin H.S end
 691 1397 a -1 x FB(27)765 1345 y
SDict begin H.R end
 765 1345 a 765
1396 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lili-mobicom07) cvn H.B /ANN pdfmark end
 765 1396 a FB(].)63 b(W)-6 b(e)32 b(denote)h(the)f(conditional)i
(loss)35 1483 y(probability)27 b(for)g(Link)f Fz(i)h
FB(when)g(transmissions)g(on)g(the)g(tw)o(o)g(links)35
1570 y(o)o(v)o(erlap)20 b(by)15 b Fz(C)417 1543 y FE(bcast)413
1593 y FH(i)9 b(j)540 1570 y FB(.)23 b(It)c(is)f(computed)i(based)g(on)
298 1740 y Fz(R)344 1709 y FE(bcast)344 1760 y FH(i)9
b(j)484 1740 y Ft(=)16 b(\()p FB(1)10 b Fr(\000)g Fz(L)744
1709 y FE(bcast)744 1760 y FH(i)869 1740 y Ft(\))g Fr(\002)g
Ft(\()p FB(1)g Fr(\000)g Fz(O)1174 1709 y FE(bcast)1174
1760 y FH(i)f(j)1310 1740 y Fr(\002)d Fz(C)1426 1709
y FE(bcast)1422 1760 y FH(i)j(j)1549 1740 y Ft(\))35
1903 y FB(Abo)o(v)o(e,)20 b Fz(L)312 1876 y FE(bcast)312
1926 y FH(i)454 1903 y FB(is)f(the)g(inherent)h(loss)f(rate)g(on)h
(Link)f Fz(i)p FB(,)g(and)h Fz(R)1649 1876 y FE(bcast)1649
1926 y FH(i)9 b(j)1791 1903 y FB(is)35 1990 y(the)15
b(broadcast)h(recei)n(v)o(e)f(rate)g(for)g(Link)g Fz(i)f
FB(when)i(both)f(links)g(are)g(send-)35 2077 y(ing.)36
b(Finally)-5 b(,)23 b(we)g(compute)d Fz(C)868 2089 y
FH(i)9 b(j)915 2077 y Ft(\()p Fz(x)p Ft(\))23 b FB(by)h(combining)g
(the)f(collision)35 2165 y(loss)j(rate)g(for)g(all)g(steps)g(of)h(a)f
(pack)o(et)h(transmission,)h Fz(i.e)o(.)p FB(,)f(D)m(A)-8
b(T)h(A,)35 2252 y(A)m(CK,)18 b(and)i(if)e(applicable,)i(R)l(TS,)c
(CTS.)-152 2364 y
SDict begin H.S end
 -152 2364 a -152 2364 a
SDict begin 10.5 H.A end
 -152 2364 a
-152 2364 a
SDict begin [ /View [/XYZ H.V] /Dest (section.5) cvn H.B /DEST pdfmark
end
 -152 2364 a 100 x FC(5.)100 b(MODEL-DRIVEN)25
b(OPTIMIZA)-9 b(TION)-77 2572 y FB(In)29 b(this)h(section,)i(we)d
(apply)h(our)g(model)g(to)f(optimize)h(wireless)f(per)o(-)-152
2659 y(formance.)47 b(Our)27 b(o)o(v)o(erall)f(optimization)h(strate)o
(gy)g(is)f(to)g(compute)i(send-)-152 2746 y(ing)c(rates)f(for)g(all)g
(\003o)n(ws)g(based)h(on)g(their)f(demands,)i(the)e(netw)o(ork)h
(topol-)-152 2833 y(ogy)-5 b(,)20 b(and)g(the)f(optimization)h(objecti)
n(v)o(e.)25 b(W)-6 b(e)19 b(\002rst)f(describe)i(an)f(algorithm)-152
2920 y(to)24 b(test)f(whether)h(a)g(gi)n(v)o(en)g(\003o)n(w)g(rate)f
(assignment)i(is)e(achie)n(v)n(able)i(in)f(Sec-)-152
3007 y(tion)-15 3008 y
SDict begin H.S end
 -15 3008 a -1 x FB(5.1)78 2957
y
SDict begin H.R end
 78 2957 a 78 3007 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(subsection.5.1) cvn H.B /ANN pdfmark end
 78 3007 a FB(.)29 b(W)-6 b(e)20
b(then)h(consider)g(maximizing)h(f)o(airness)f(in)g(Section)1619
3008 y
SDict begin H.S end
 1619 3008 a -1 x FB(5.2)1712 2957 y
SDict begin H.R end
 1712 2957
a 1712 3007 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(subsection.5.2) cvn H.B /ANN pdfmark end
 1712 3007 a 21 w FB(and)-152 3095 y(maximizing)f(total)f
(throughput)h(in)f(Section)1042 3096 y
SDict begin H.S end
 1042 3096 a -1
x FB(5.3)1135 3044 y
SDict begin H.R end
 1135 3044 a 1135 3095 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(subsection.5.3) cvn H.B /ANN pdfmark end
 1135 3095
a FB(.)-152 3184 y
SDict begin H.S end
 -152 3184 a -152 3184 a
SDict begin 10.5 H.A end
 -152 3184
a -152 3184 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.5.1) cvn H.B /DEST
pdfmark end
 -152 3184 a 71 x FC(5.1)99 b(Flo)o(w)25
b(Thr)n(oughput)i(F)n(easibility)d(T)-9 b(esting)-77
3362 y FB(Our)28 b(goal)f(is)h(to)f(test)g(whether)h(a)f(gi)n(v)o(en)i
(set)e(of)h(link)f(throughput)i Fz(g)1770 3374 y FH(i)1791
3362 y FB(')l(s)-152 3450 y(is)j(achie)n(v)n(able.)64
b(The)32 b(main)g(challenge)h(is)e(that)h(there)g(is)g(strong)h(inter)o
(-)-152 3537 y(dependenc)o(y)23 b(between)f(the)f(transmission)g
(probability)g(and)g(the)g(loss)g(rate)-152 3624 y(of)h(dif)n(ferent)g
(links.)31 b(The)21 b(transmission)h(probability)h(of)e(a)h(Link)f
Fz(i)p FB(,)h Fw(t)1685 3636 y FH(i)1705 3624 y FB(,)f(de-)-152
3711 y(pends)k(on)f(the)g(transmission)g(probability)g(of)g(the)f
(other)h(links,)h(which)f(in)-152 3798 y(turn)k(depends)i(on)e
Fw(t)404 3810 y FH(i)424 3798 y FB(.)50 b(T)-6 b(o)28
b(address)h(the)e(inter)o(-dependenc)o(y)-5 b(,)32 b(we)c(use)g(an)-152
3885 y(iterati)n(v)o(e)f(procedure)h(to)f(jointly)f(estimate)h(the)g
(transmission)g(probabili-)-152 3973 y(ties)19 b(and)h(loss)f(rates.)24
b(W)-6 b(e)19 b(initialize)f(the)i(collision)f(loss)g(and)h
(transmission)-152 4060 y(probabilities)28 b(at)f(all)g(links)g(to)g
(be)h(0.)48 b(W)-6 b(e)27 b(then)g(iterati)n(v)o(ely)g(update)i(link)
-152 4147 y(transmission)c(probabilities)g(and)g(loss)f(rates)g(based)h
(on)g(the)f(other)h(links')-152 4234 y(transmission)c(probabilities)g
(and)h(loss)e(rates)h(deri)n(v)o(ed)g(in)g(the)g(pre)n(vious)g(it-)-152
4321 y(eration.)j(Figure)311 4321 y
SDict begin H.S end
 311 4321 a FB(4)348
4271 y
SDict begin H.R end
 348 4271 a 348 4321 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.4) cvn H.B /ANN pdfmark end
 348 4321 a 19 w FB(outlines)c(the)f
(algorithm.)-77 4409 y(T)-6 b(o)28 b(estimate)g Fr(h)p
Fw(t)367 4421 y FH(i)387 4409 y Fr(i)g FB(gi)n(v)o(en)i
Fr(h)p Fw(q)704 4421 y FH(i)724 4409 y Fr(i)e FB(\(Line)g(4)g(in)g
(Figure)1346 4409 y
SDict begin H.S end
 1346 4409 a FB(4)1383 4358 y
SDict begin H.R end
 1383
4358 a 1383 4409 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.4) cvn H.B /ANN pdfmark end
 1383 4409 a FB(\),)i(we)e(note)h(that)-152
4496 y Fw(q)-113 4508 y FH(i)-76 4496 y Ft(=)13 4463
y FJ(t)39 4472 y Fo(i)p 9 4479 51 3 v 10 4521 a FJ(m)43
4530 y Fo(i)86 4496 y Ft(=)443 4463 y FJ(t)469 4472 y
Fo(i)p 170 4479 587 3 v 170 4525 a FH(T)198 4534 y Fm(slot)262
4525 y Fs(+)307 4529 y FF(\345)355 4537 y Fo(j)372 4525
y Fs([\()m FH(W)453 4534 y Fo(i)6 b(j)488 4525 y FG(\000)p
FH(T)561 4534 y Fm(slot)625 4525 y Fs(\))p FG(\002)p
FJ(t)725 4534 y Fo(j)741 4525 y Fs(])767 4496 y FB(.)23
b(Therefore,)c(we)f(can)i(estimate)e Fr(h)p Fw(t)1698
4508 y FH(i)1719 4496 y Fr(i)g FB(by)-152 4605 y(solving)i(the)f(follo)
n(wing)g(system)h(of)f(linear)f(equations)-83 4816 y
SDict begin H.S end

-83 4816 a -83 4816 a
SDict begin 10.5 H.A end
 -83 4816 a -83 4816 a
SDict begin [ /View [/XYZ H.V] /Dest (equation.7) cvn H.B /DEST pdfmark
end
 -83 4816
a -74 4689 a Fj(\()-14 4816 y Fz(T)22 4830 y FE(slot)120
4816 y Ft(+)188 4832 y Fh(\345)223 4894 y FH(j)274 4756
y Fj(\002)305 4816 y Ft(\()l Fz(W)388 4828 y FH(i)9 b(j)446
4816 y Fr(\000)h Fz(T)550 4830 y FE(slot)638 4816 y Ft(\))g
Fr(\002)g Fw(t)787 4828 y FH(j)809 4756 y Fj(\003)840
4689 y(\))911 4816 y Fr(\002)g Fw(q)1018 4828 y FH(i)1055
4816 y Ft(=)17 b Fw(t)1163 4828 y FH(i)1183 4816 y Fv(;)83
b Fz(i)16 b Ft(=)h FB(1)p Fv(;)8 b FB(2)p Fv(;)g(:)g(:)g(:)g(;)g
Fz(n)70 b FB(\(7\))-77 5029 y(The)22 b(iterati)n(v)o(e)h(procedure)g
(continues)h(until)e(the)h(number)g(of)g(iterations)-152
5116 y(reaches)c(a)f(threshold,)h(or)f(the)g(throughput)i(v)n(alues)f
(no)g(longer)f(change)i(sig-)-152 5203 y(ni\002cantly)-5
b(,)23 b(or)e(a)h(feasibility)f(constraint)h(\(Eq.)1089
5203 y
SDict begin H.S end
 1089 5203 a FB(4)1126 5153 y
SDict begin H.R end
 1126 5153 a 1126
5203 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(equation.4) cvn H.B /ANN pdfmark end
 1126 5203 a FB(\))g(is)f(violated.)32 b(W)-6 b(e)21
b(bound)-152 5290 y(the)f(number)i(of)e(iterations)f(to)h(twenty)-5
b(,)21 b(which)f(w)o(orks)h(well)e(in)h(our)h(e)o(xper)o(-)-152
5378 y(iments.)p 2086 -148 1920 5 v 2086 1023 5 1172
v 2115 -79 a FI(.)14 b FE(Input:)19 b(a)c(v)o(ector)f(of)h(link)g
(throughput)h FG(h)p FH(g)3004 -70 y Fo(i)3019 -79 y
FG(i)p FE(;)73 b FI(.)14 b FE(Output:)19 b(whether)c
FG(h)p FH(g)3624 -70 y Fo(i)3639 -79 y FG(i)f FE(is)g(feasible)2035
-12 y(1.)36 b Fd(initialization)p FE(:)29 b FH(f)8 b(easibl)s(e)13
b Fs(=)g FE(0,)h FJ(t)2818 -3 y Fo(i)2846 -12 y Fs(=)f
FE(0,)19 b FH(p)2996 -3 y Fo(i)3025 -12 y Fs(=)13 b FE(0)h(\()p
FH(i)g Fs(=)f FE(1)p FI(;)6 b FE(2)p FI(;)g(:)g(:)g(:)j(;)d
FH(n)p FE(\))2115 54 y FH(//)15 b(iter)o(ative)f(model)h(e)o(valuation)
g(\(M)s(axI)r(t)t(er)e Fs(=)g FE(20)i FH(by)f(default\))2035
121 y FE(2.)36 b Fd(f)o(or)14 b FH(i)o(t)t(er)h FE(=)f(1)h
Fd(to)g FH(M)s(axI)r(t)t(er)2035 190 y FE(3.)123 b FJ(q)2232
199 y Fo(i)2261 190 y Fs(=)2421 159 y Fo(g)2442 172 y(i)p
2329 176 222 3 v 2329 210 a(E)s(P)2377 223 y(i)2393 210
y Fg(\002)p Fl(\()p Fm(1)p Fg(\000)s Fo(p)2518 223 y(i)2534
210 y Fl(\))2633 190 y FH(i)13 b Fs(=)g FE(1)p FI(;)6
b FE(2)p FI(;)g(:)g(:)g(:)j(;)d FH(n)2035 269 y FE(4.)123
b FG(h)p FJ(t)2251 278 y Fo(i)2266 269 y FG(i)12 b Fs(=)h
Fc(estimate)p FE(_)q Fc(tau)p FE(_)p Fc(from)p FE(_)p
Fc(theta)p Fs(\()p FG(h)p FJ(q)3076 278 y Fo(i)3091 269
y FG(i)p Fs(\))2035 336 y FE(5.)123 b FG(h)t FH(p)2258
345 y Fo(i)2274 336 y FG(i)12 b Fs(=)h Fc(compute)p FE(_)q
Fc(pack)n(et)p FE(_)q Fc(loss)p FE(_)o Fc(rates)p Fs(\()p
FG(h)p FJ(t)3131 345 y Fo(i)3146 336 y FG(i)o FI(;)6
b FG(h)p FJ(q)3243 345 y Fo(i)3259 336 y FG(i)p Fs(\))188
b FH(//)15 b(accor)n(ding)f(to)h(Eq.)3942 337 y
SDict begin H.S end
 3942
337 a -1 x FH(3)3971 296 y
SDict begin H.R end
 3971 296 a 3971 336 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(equation.3) cvn H.B /ANN pdfmark end
 3971
336 a 2035 406 a FE(6.)123 b Fd(if)15 b(any)g FH(i)g
FE(whose)f(\()h FJ(t)2611 415 y Fo(i)2639 406 y FI(>)2791
384 y Fm(2)p 2707 394 189 3 v 2707 427 a(2)p Fl(+)n Fo(C)o(W)t
Fl(\()s Fo(p)2864 440 y(i)2879 427 y Fl(\))2920 406 y
FE(\))2035 486 y(7.)219 b FH(f)8 b(easibl)s(e)13 b Fs(=)g
FE(0;)i Fd(br)o(eak)174 b FH(//)15 b(early)f(stop:)k(infeasible)2035
553 y FE(8.)123 b Fd(end)15 b(if)2035 635 y FE(9.)123
b FH(g)2231 614 y Fg(0)2231 650 y Fo(i)2260 635 y Fs(=)2423
604 y Fq(t)2441 617 y Fo(i)2457 604 y Fg(\002)p Fl(\()p
Fm(1)p Fg(\000)s Fo(p)2582 617 y(i)2598 604 y Fl(\))p
Fg(\002)p Fo(E)s(P)2694 617 y(i)p 2328 621 479 3 v 2328
655 a(T)2348 669 y Fm(slot)2412 655 y Fl(+)2444 658 y
Fn(\345)2480 668 y Fo(j)2497 655 y Fl([\()n Fo(W)2556
668 y(i)6 b(j)2589 655 y Fg(\000)p Fo(T)2641 669 y Fm(slot)2705
655 y Fl(\))p Fg(\002)p Fq(t)2777 668 y Fo(j)2795 655
y Fl(])2005 723 y FE(10.)124 b Fd(if)15 b FE(\()g(max)2386
732 y Fo(i)2402 723 y FG(fj)p FH(g)2476 732 y Fo(i)2500
723 y FG(\000)8 b FH(g)2582 702 y Fg(0)2582 738 y Fo(i)2598
723 y FG(jg)13 b FI(<)g FH(T)6 b(OL)15 b FE(\))73 b FH(//)15
b(con)n(ver)n(g)o(ence)e(test)i(\(T)7 b(OL)13 b Fs(=)g
FE(0)p FI(:)p FE(01)i FH(by)f(default\))2005 789 y FE(11.)220
b FH(f)8 b(easibl)s(e)13 b Fs(=)g FE(1;)i Fd(br)o(eak)174
b FH(//)15 b(early)f(stop:)k(feasible)2005 855 y FE(12.)124
b Fd(end)15 b(if)2005 922 y FE(13.)37 b Fd(end)15 b(f)o(or)2005
988 y FE(14.)37 b Fd(r)o(etur)o(n)24 b FH(f)8 b(easibl)s(e)p
4002 1023 5 1172 v 2086 1027 1920 5 v 2040 968 a
SDict begin H.S end
 2040
968 a 2040 968 a
SDict begin 10.5 H.A end
 2040 968 a 2040 968 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.4) cvn H.B /DEST pdfmark
end
 2040 968 a 2322
1110 a FA(Figur)o(e)18 b(4:)2636 1110 y
SDict begin H.S end
 2636 1110 a 2636
1110 a
SDict begin H.R end
 2636 1110 a 2636 1110 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.4) cvn H.B /DEST pdfmark
end
 2636 1110 a FA(Link)g(thr)o(oughput)e
(feasibility)j(testing)o(.)p 2086 1227 1920 5 v 2086
2801 5 1575 v 2115 1296 a FI(.)14 b FE(Input:)19 b(routing)d(matrix)f
FH(R)d Fs(=)h([)p FH(R)2822 1305 y Fo(id)2861 1296 y
Fs(])2877 1305 y Fo(n)p Fg(\002)p Fo(m)2964 1296 y FE(,)h(end-to-end)h
(demand)g Fd(x)3487 1275 y Fg(\003)3525 1296 y Fs(=)e
FG(h)p FH(x)3632 1275 y Fg(\003)3632 1313 y Fo(d)3658
1296 y FG(i)h FE(\()p FH(d)j FG(2)12 b Fs([)p FE(1)p
FI(;)6 b FH(m)p Fs(])p FE(\))2115 1362 y FI(.)14 b FE(Output:)19
b(weighted)c(max-min)g(f)o(air)h(rate)e(allocation:)19
b Fd(x)13 b Fs(=)g FG(h)p FH(x)3415 1371 y Fo(d)3441
1362 y FG(i)2035 1429 y FE(1.)36 b Fd(initialization)p
FE(:)20 b FH(unsa)o(t)t(Se)o(t)d Fs(=)c FG(f)p FE(1)p
FI(;)6 b(:)g(:)g(:)i(;)e FH(m)p FG(g)p FE(,)15 b FH(x)3033
1438 y Fo(d)3072 1429 y Fs(=)e FE(0)2035 1495 y(2.)36
b Fd(while)15 b FE(\()p FH(unsa)o(t)t(Se)o(t)h FG(6)p
Fs(=)j FE(/)-22 b(0\))2202 1562 y FH(//)15 b(try)f(to)h(scale)f(up)g
(the)h(unsatur)o(ated)f(demands)g Fd(x)3221 1540 y Fm(unsat)3328
1562 y FH(as)g(muc)o(h)g(as)h(possible)2035 1666 y FE(3.)123
b FH(x)2228 1645 y Fm(unsat)2228 1683 y Fo(d)2333 1666
y Fs(=)2391 1584 y Ff(\032)2472 1631 y FH(x)2498 1610
y Fg(\003)2498 1648 y Fo(d)2599 1631 y FE(if)15 b FH(d)h
FG(2)d FH(unsa)o(t)t(Se)o(t)2484 1698 y FE(0)86 b(otherwise)3118
1666 y Fs(\()p FH(d)16 b Fs(=)d FE(1)p FI(;)6 b(:)g(:)g(:)i(;)e
FH(m)p Fs(\))2202 1767 y FH(//)15 b(\002nd)g(lar)n(g)o(est)f(scal)s(e)e
FG(2)h Fs([)p FE(0)p FI(;)6 b FE(1)p Fs(])15 b FH(for)f(R)6
b Fs(\()p Fd(x)i Fs(+)g FH(scal)s(e)g FG(\002)g Fd(x)3288
1746 y Fm(unsat)3380 1767 y Fs(\))14 b FH(to)h(r)n(emain)f(feasible)
2035 1834 y FE(4.)123 b FH(scal)s(e)12 b Fs(=)h Fc(get)p
FE(_)q Fc(max)p FE(_)p Fc(scaling)q FE(_)o Fc(facto)n(r)r
Fs(\()p FH(R)6 b Fd(x)3088 1813 y Fm(unsat)3179 1834
y FI(;)g FH(R)g Fd(x)p Fs(\))2035 1900 y FE(5.)123 b
Fd(z)13 b Fs(=)g Fd(x)8 b Fs(+)g FH(scal)s(e)g FG(\002)g
Fd(x)2602 1879 y Fm(unsat)2202 1967 y FH(//)15 b(\002nd)g(the)f(set)g
(of)h(demands)f(that)h(become)f(satur)o(ated)2035 2035
y FE(6.)123 b Fd(if)15 b FE(\()p FH(scal)s(e)e FI(>)g
FE(1)8 b FG(\000)g FJ(e)d FE(\))131 b FH(//)14 b FJ(e)k
Fs(=)13 b FE(10)2942 2014 y Fg(\000)p Fm(4)3013 2035
y FH(by)i(default)2035 2102 y FE(7.)210 b Fd(x)13 b Fs(=)g
Fd(z)p FE(;)i Fd(br)o(eak)131 b FH(//)15 b(all)f(unsatur)o(ated)h
(demands)f(can)g(be)h(satis\002ed)2035 2168 y FE(8.)123
b Fd(end)15 b(if)2035 2235 y FE(9.)123 b Fd(f)o(or)14
b(each)h FH(d)h FG(2)c FH(unsa)o(t)t(Se)o(t)2005 2301
y FE(10.)211 b Fd(y)13 b Fs(=)g Fd(z)p FE(;)i FH(y)2472
2310 y Fo(d)2511 2301 y Fs(=)f(\()p FE(1)8 b Fs(+)g FJ(e)d
Fs(\))j FG(\002)g FH(y)2824 2310 y Fo(d)2005 2367 y FE(11.)220
b FH(f)8 b(easibl)s(e)13 b Fs(=)g Fc(test)p FE(_)q Fc(link)p
FE(_)o Fc(throughput)p FE(_)p Fc(feasibilit)n(y)q Fs(\()p
FH(R)6 b Fd(y)p Fs(\))2005 2434 y FE(12.)211 b Fd(if)15
b FE(\()p Fd(not)25 b FH(f)8 b(easibl)s(e)p FE(\))2005
2500 y(13.)298 b FH(x)2402 2509 y Fo(d)2442 2500 y Fs(=)13
b FH(z)2523 2509 y Fo(d)2550 2500 y FE(;)i FH(unsa)o(t)t(Se)o(t)h
Fs(=)d FH(unsa)o(t)t(Se)o(t)e FG(\000)d(f)p FH(d)s FG(g)73
b FH(//)15 b(d)g(has)f(become)g(satur)o(ated)2005 2567
y FE(14.)211 b Fd(end)15 b(if)2005 2633 y FE(15.)124
b Fd(end)15 b(f)o(or)2005 2700 y FE(16.)37 b Fd(end)15
b(while)2005 2766 y FE(17.)37 b Fd(r)o(etur)o(n)15 b(x)e
Fs(=)g FG(h)p FH(x)2438 2775 y Fo(d)2464 2766 y FG(i)p
4002 2801 V 2086 2805 1920 5 v 2040 2745 a
SDict begin H.S end
 2040 2745
a 2040 2745 a
SDict begin 10.5 H.A end
 2040 2745 a 2040 2745 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.5) cvn H.B /DEST pdfmark
end
 2040 2745 a 2351
2888 a FA(Figur)o(e)18 b(5:)2665 2888 y
SDict begin H.S end
 2665 2888 a 2665
2888 a
SDict begin H.R end
 2665 2888 a 2665 2888 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.5) cvn H.B /DEST pdfmark
end
 2665 2888 a FA(Algorithm)h(f)n(or)g
(fair)g(rate)g(allocation)2040 3059 y
SDict begin H.S end
 2040 3059 a 2040
3059 a
SDict begin 10.5 H.A end
 2040 3059 a 2040 3059 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.5.2) cvn H.B /DEST
pdfmark end
 2040 3059 a 83 x FC(5.2)99
b(F)n(air)24 b(Rate)h(Allocation)2115 3250 y FB(Gi)n(v)o(en)16
b(the)g(feasibility)f(test)h(for)g(link)f(throughputs,)j(we)e(use)g(it)
f(as)h(a)g(basic)2040 3337 y(block)29 b(for)f(achie)n(ving)h(weighted)g
(max-min)g(f)o(air)f(rate)g(allocation.)51 b(This)2040
3424 y(allocation)19 b(tak)o(es)h(routing)f(and)h(traf)n(\002c)e
(demand)j(matrices)d(as)h(input.)2115 3511 y(Figure)2338
3512 y
SDict begin H.S end
 2338 3512 a -1 x FB(5)2375 3460 y
SDict begin H.R end
 2375 3460 a
2375 3511 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.5) cvn H.B /ANN pdfmark end
 2375 3511 a 29 w FB(outlines)29 b(the)f(algorithm,)j(which)
e(is)f(ef)n(fecti)n(v)o(ely)h(based)g(on)2040 3598 y(iterati)n(v)o(e)g
(w)o(ater)o(-\002lling.)51 b(Let)28 b FA(x)2914 3571
y FG(\003)2970 3598 y Ft(=)22 b Fr(h)p Fz(x)3112 3571
y FG(\003)3112 3623 y FH(d)3149 3598 y Fr(i)28 b FB(be)h(the)g
(end-to-end)h(demand.)2040 3685 y(Let)i Fz(R)24 b Ft(=)g([)p
Fz(R)2391 3699 y FH(id)2443 3685 y Ft(])2464 3696 y FH(n)p
FG(\002)p FH(m)2616 3685 y FB(be)33 b(the)g(routing)g(matrix,)j(where)c
Fz(R)3601 3699 y FH(id)3686 3685 y FB(is)g(the)h(frac-)2040
3773 y(tion)28 b(of)f(Flo)n(w)g Fz(d)32 b FB(that)27
b(tra)o(v)o(erses)h(Link)f Fz(i)p FB(.)49 b(The)28 b(v)o(ector)f(of)h
(link)g(loads)g(is)2040 3860 y(gi)n(v)o(en)g(by)f Fz(R)13
b Fr(\001)g FA(x)p FB(.)47 b(Initially)-5 b(,)28 b(the)f(algorithm)g
(marks)h(all)e(demands)i(as)f(un-)2040 3947 y(saturated.)39
b(In)24 b(each)h(iteration,)g(the)f(algorithm)g(tries)g(to)g(scale)g
(up)h(all)e(the)2040 4034 y(unsaturated)h(demands)h(as)e(much)h(as)f
(possible)h(until)f(at)f(least)h(one)h(unsat-)2040 4121
y(urated)j(\003o)n(w)g(is)f(saturated,)i Fz(i.e)o(.)p
FB(,)g(it)e(cannot)h(be)g(scaled)g(up)g(further)g(with-)2040
4208 y(out)h(violating)g(a)f(feasibility)g(constraint.)50
b(The)27 b(maximum)h(scaling)g(f)o(ac-)2040 4296 y(tor)i
Fz(scal)t(e)23 b Fr(2)f Ft([)p FB(0)p Fv(;)8 b FB(1)p
Ft(])29 b FB(is)h(found)g(ef)n(\002ciently)g(through)h(bisection)f
(search)g(in)2040 4383 y(the)17 b(subroutine)h Fa(get)p
FB(_)p Fa(max)p FB(_)q Fa(scaling)q FB(_)r Fa(facto)n(r)r
Ft(\()p FA(g)3294 4356 y FE(unsat)3421 4383 y Fv(;)8
b FA(g)3487 4356 y FE(sat)3556 4383 y Ft(\))16 b FB(\(Line)h(4)f(in)h
(Fig-)2040 4470 y(ure)2161 4471 y
SDict begin H.S end
 2161 4471 a -1 x FB(5)2198
4419 y
SDict begin H.R end
 2198 4419 a 2198 4470 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.5) cvn H.B /ANN pdfmark end
 2198 4470 a FB(\).)42
b(The)25 b(iteration)g(continues)i(to)e(scale)g(up)h(the)g(remaining)g
(unsatu-)2040 4557 y(rated)19 b(demands)h(until)f(all)g(demands)h(are)f
(saturated.)2040 4660 y
SDict begin H.S end
 2040 4660 a 2040 4660 a
SDict begin 10.5 H.A end
 2040
4660 a 2040 4660 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.5.3) cvn H.B /DEST
pdfmark end
 2040 4660 a 87 x FC(5.3)99 b(T)-9
b(otal)25 b(Thr)n(oughput)j(Maximization)2115 4855 y
FB(W)-6 b(e)20 b(optimize)i(the)f(netw)o(ork)h(for)e(maximum)i(total)f
(throughput)i(by)e(for)o(-)2040 4942 y(mulating)15 b(a)f(non-linear)i
(optimization)f(problem.)22 b(This)14 b(problem)h(is)f(solv)o(ed)2040
5029 y(by)19 b(linearizing)f(the)g(non-linear)h(constraints)g(and)g
(solving)g(a)f(series)g(of)g(lin-)2040 5116 y(ear)h(programs.)2115
5203 y(As)32 b(before,)j(let)d FA(x)2618 5176 y FG(\003)2675
5203 y Ft(=)24 b Fr(h)p Fz(x)2819 5176 y FG(\003)2819
5228 y FH(d)2855 5203 y Fr(i)32 b FB(be)h(the)f(end-to-end)h(demand)g
(and)g Fz(R)24 b Ft(=)2040 5290 y([)p Fz(R)2107 5304
y FH(id)2159 5290 y Ft(])2180 5301 y FH(n)p FG(\002)p
FH(m)2327 5290 y FB(be)k(the)f(routing)h(matrix.)49 b(Let)27
b Fz(R)3222 5302 y FH(i)3269 5290 y FB(be)h(the)f Fz(i)p
FB(-th)g(ro)n(w)h(v)o(ector)f(of)2040 5378 y Fz(R)p FB(.)f(The)20
b(problem)h(of)f(maximizing)h(total)e(end-to-end)j(throughput)g(can)e
(be)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152 -359
a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.7) cvn H.B /DEST pdfmark
end
 -152 -359 a -106
-148 1920 5 v -106 664 5 812 v -157 -64 a FE(1.)36 b
Fd(initialization:)21 b FH(x)300 -94 y Fl(\()p Fm(0)p
Fl(\))300 -46 y Fo(d)370 -64 y Fs(=)13 b FE(0,)h FJ(t)517
-94 y Fl(\()p Fm(0)p Fl(\))512 -47 y Fo(i)586 -64 y Fs(=)f
FE(0,)h(for)i FG(8)p FH(d)s FG(8)p FH(i)-157 3 y FE(2.)36
b Fd(f)o(or)14 b FH(k)g Fs(=)f FE(1)i Fd(to)g FH(K)t(M)s(AX)-157
69 y FE(3.)123 b(let)15 b Fd(x)112 48 y Fm(opt)184 69
y FE(and)f FJ(t)313 48 y Fm(opt)384 69 y FE(be)h(the)f(optimal)h
(solution)g(to)g(the)f(linear)h(program)h(\(LP)1524 78
y Fo(k)1547 69 y FE(\))-157 141 y(4.)123 b Fd(x)39 120
y Fl(\()p Fo(k)q Fl(\))108 141 y Fs(=)13 b Fd(x)195 120
y Fm(opt)-158 208 y FE(5.)124 b Fd(r)o(epeat)73 b FH(//)15
b(ensur)n(e)e(solution)i(feasibility)-157 280 y FE(6.)210
b Fd(x)126 259 y Fl(\()p Fo(k)q Fl(\))195 280 y Fs(=)13
b Fd(x)282 259 y Fl(\()p Fo(k)q Fg(\000)p Fm(1)p Fl(\))399
280 y Fs(+)8 b FJ(a)k FG(\002)c Fs(\()p Fd(x)606 259
y Fl(\()p Fo(k)q Fl(\))670 280 y FG(\000)g Fd(x)752 259
y Fl(\()p Fo(k)q Fg(\000)p Fm(1)p Fl(\))861 280 y Fs(\))-157
352 y FE(7.)219 b FH(f)8 b(easibl)s(e)13 b Fs(=)g Fc(test)p
FE(_)q Fc(link)p FE(_)p Fc(throughput)p FE(_)p Fc(feasibilit)n(y)p
Fs(\()p FH(R)6 b Fd(x)1265 331 y Fl(\()p Fo(k)q Fl(\))1320
352 y Fs(\))-157 419 y FE(8.)123 b Fd(until)16 b FE(\()9
b FH(f)f(easibl)s(e)13 b Fs(=)i Fd(true)p FE(\))-157
491 y(9.)123 b Fd(x)39 470 y Fl(\()p Fo(k)q Fl(\))108
491 y Fs(=)13 b FE(0)p FI(:)p FE(99)8 b FG(\002)g Fd(x)359
470 y Fl(\()p Fo(k)q Fl(\))-187 557 y FE(10.)37 b Fd(end)15
b(f)o(or)-187 629 y FE(11.)37 b Fd(r)o(etur)o(n)15 b(x)126
608 y Fl(\()p Fo(k)q Fl(\))p 1810 664 V -106 668 1920
5 v -152 609 a
SDict begin H.S end
 -152 609 a -152 609 a
SDict begin 10.5 H.A end
 -152 609 a -152
609 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.6) cvn H.B /DEST pdfmark
end
 -152 609 a -14 751 a FA(Figur)o(e)j(6:)301 751
y
SDict begin H.S end
 301 751 a 301 751 a
SDict begin H.R end
 301 751 a 301 751 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.6) cvn H.B /DEST pdfmark
end
 301 751 a FA(Algorithm)h(f)n
(or)g(maximizing)g(total)g(thr)o(oughput.)-152 901 y
FB(cast)g(into)g(the)g(follo)n(wing)h(non-linear)f(optimization)h
(problem)f(\(NLP\).)318 1036 y(maximize)696 1052 y Fh(\345)718
1116 y FH(d)781 1036 y Fz(x)814 1050 y FH(d)324 1355
y FB(subject)h(to)696 1157 y Fj(8)696 1224 y(>)696 1247
y(>)696 1269 y(<)696 1404 y(>)696 1426 y(>)696 1448 y(:)799
1223 y Fz(R)845 1235 y FH(i)874 1223 y FA(x)d Fr(\024)f
Fz(F)1041 1235 y FH(i)1061 1223 y Ft(\()p Fw(t)6 b Ft(\))75
b Fr(8)p Fz(i)799 1310 y(G)853 1322 y FH(i)874 1310 y
Ft(\()p Fw(t)6 b Ft(\))16 b Fr(\024)h FB(0)134 b Fr(8)p
Fz(i)799 1397 y FB(0)17 b Fr(\024)g Fz(x)961 1411 y FH(d)1014
1397 y Fr(\024)g Fz(x)1122 1370 y FG(\003)1122 1422 y
FH(d)1233 1397 y Fr(8)p Fz(d)799 1485 y FB(0)g Fr(\024)g
Fw(t)961 1497 y FH(i)998 1485 y Fr(\024)f FB(1)124 b
Fr(8)p Fz(i)1371 1355 y
SDict begin H.S end
 1371 1355 a 1371 1355 a
SDict begin 13.5 H.A end
 1371
1355 a 1371 1355 a
SDict begin [ /View [/XYZ H.V] /Dest (AMS.6) cvn H.B /DEST pdfmark
end
 1371 1355 a 279 w FB(\(NLP\))-152
1653 y(where)15 b Fz(F)84 1665 y FH(i)104 1653 y Ft(\()p
Fw(t)6 b Ft(\))12 b(=)379 1615 y FH(E)t(P)448 1624 y
Fo(i)463 1615 y FG(\002)p FJ(t)534 1624 y Fo(i)549 1615
y FG(\002)p Fs(\()p FE(1)p FG(\000)t FH(p)724 1624 y
Fo(i)740 1615 y Fs(\))p 293 1636 555 3 v 293 1682 a FH(T)321
1691 y Fm(slot)386 1682 y Fs(+)431 1686 y FF(\345)478
1694 y Fo(j)495 1682 y Fs(\()m FH(W)560 1691 y Fo(i)6
b(j)595 1682 y FG(\000)p FH(T)668 1691 y Fm(slot)732
1682 y Fs(\))p FG(\002)p FJ(t)832 1691 y Fo(j)872 1653
y FB(and)15 b Fz(G)1048 1665 y FH(i)1069 1653 y Ft(\()p
Fw(t)6 b Ft(\))12 b(=)h Fw(t)1282 1665 y FH(i)1308 1653
y Fr(\000)1497 1624 y FE(2)p 1382 1636 259 3 v 1382 1682
a(2)p Fs(+)m FH(C)o(W)7 b Fs(\()t FH(p)1602 1691 y Fo(i)1618
1682 y Fs(\))1650 1653 y FB(.)22 b(There-)-152 1768 y(fore,)16
b(constraints)f Fz(R)387 1780 y FH(i)416 1768 y FA(x)e
Fr(\024)g Fz(F)576 1780 y FH(i)595 1768 y Ft(\()p Fw(t)6
b Ft(\))15 b FB(encode)h(the)f(linear)g(relationship)h(between)-152
1855 y(end-to-end)i(throughput)g FA(x)e FB(and)h(link)f(throughput;)i
(constraints)f Fz(G)1600 1867 y FH(i)1620 1855 y Ft(\()p
Fw(t)6 b Ft(\))14 b Fr(\024)g FB(0)-152 1942 y(encode)21
b(the)e(feasibility)f(constraint)i(\(Eq.)965 1942 y
SDict begin H.S end
 965
1942 a FB(4)1002 1892 y
SDict begin H.R end
 1002 1892 a 1002 1942 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(equation.4) cvn H.B /ANN pdfmark end
 1002
1942 a FB(\).)-77 2029 y(W)-6 b(e)23 b(solv)o(e)h(the)f(NLP)f(abo)o(v)o
(e)j(through)f(iterati)n(v)o(e)f(linear)g(programming,)-152
2117 y(as)33 b(sho)n(wn)g(in)f(Figure)486 2118 y
SDict begin H.S end
 486
2118 a -1 x FB(6)523 2066 y
SDict begin H.R end
 523 2066 a 523 2117 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.6) cvn H.B /ANN pdfmark end
 523
2117 a FB(.)63 b(In)33 b(each)g(iteration,)i(we)d(linearize)g(the)h
(non-)-152 2204 y(linear)20 b(constraints)g(in)g(the)g(NLP)e(using)j
(their)e(\002rst-order)g(approximation.)-152 2291 y(Speci\002cally)-5
b(,)16 b(let)e FA(x)357 2264 y Fs(\()p FH(k)q FG(\000)p
FE(1)p Fs(\))522 2291 y FB(and)i Fw(t)684 2264 y Fs(\()p
FH(k)q FG(\000)p FE(1)p Fs(\))849 2291 y FB(be)g(the)f(estimate)g(of)g
FA(x)g FB(and)g Fw(t)21 b FB(in)15 b(itera-)-152 2378
y(tion)i Ft(\()p Fz(k)10 b Fr(\000)e FB(1)p Ft(\))p FB(.)23
b(Let)16 b Fz(F)394 2351 y FG(\003)382 2401 y FH(i)428
2378 y Ft(\()p Fw(t)6 b Ft(\))16 b FB(and)h Fz(G)719
2351 y FG(\003)719 2401 y FH(i)753 2378 y Ft(\()p Fw(t)6
b Ft(\))16 b FB(be)h(the)g(\002rst-order)f(approximations)-152
2465 y(of)j Fz(F)-32 2477 y FH(i)-12 2465 y Ft(\()p Fw(t)6
b Ft(\))18 b FB(and)i Fz(G)284 2477 y FH(i)304 2465 y
Ft(\()p Fw(t)6 b Ft(\))p FB(,)19 b(respecti)n(v)o(ely)-5
b(.)24 b Fz(F)886 2438 y FG(\003)873 2488 y FH(i)919
2465 y Ft(\()p Fw(t)6 b Ft(\))18 b FB(and)i Fz(G)1215
2438 y FG(\003)1215 2488 y FH(i)1248 2465 y Ft(\()p Fw(t)6
b Ft(\))19 b FB(are)g(then:)26 2651 y
SDict begin H.S end
 26 2651 a 26 2651
a
SDict begin 10.5 H.A end
 26 2651 a 26 2651 a
SDict begin [ /View [/XYZ H.V] /Dest (equation.8) cvn H.B /DEST pdfmark
end
 26 2651 a Fz(F)78 2620 y FG(\003)65
2670 y FH(i)111 2651 y Ft(\()p Fw(t)6 b Ft(\))16 b(=)h
Fz(F)338 2663 y FH(i)358 2651 y Ft(\()p Fw(t)426 2620
y Fs(\()p FH(k)q FG(\000)p FE(1)p Fs(\))576 2651 y Ft(\))10
b(+)683 2667 y Fh(\345)718 2728 y FH(j)760 2651 y Ft(\()p
Fw(t)831 2663 y FH(j)863 2651 y Fr(\000)g Fw(t)970 2610
y Fs(\()p FH(k)q FG(\000)p FE(1)p Fs(\))973 2675 y FH(j)1121
2651 y Ft(\))g Fr(\002)1270 2600 y Fw(\266)p 1238 2634
110 3 v 1238 2702 a(\266)f(t)1326 2714 y FH(j)1358 2651
y Fz(F)1397 2663 y FH(i)1416 2651 y Ft(\()p Fw(t)1484
2620 y Fs(\()p FH(k)q FG(\000)p FE(1)p Fs(\))1635 2651
y Ft(\))90 b FB(\(8\))-35 2954 y
SDict begin H.S end
 -35 2954 a -35 2954
a
SDict begin 10.5 H.A end
 -35 2954 a -35 2954 a
SDict begin [ /View [/XYZ H.V] /Dest (equation.9) cvn H.B /DEST pdfmark
end
 -35 2954 a Fz(G)19 2923 y FG(\003)19
2973 y FH(i)52 2954 y Ft(\()p Fw(t)6 b Ft(\))17 b(=)g
Fz(G)295 2966 y FH(i)315 2954 y Ft(\()p Fw(t)383 2923
y Fs(\()p FH(k)q FG(\000)p FE(1)p Fs(\))533 2954 y Ft(\))10
b(+)640 2970 y Fh(\345)675 3032 y FH(j)718 2954 y Ft(\()p
Fw(t)789 2966 y FH(j)820 2954 y Fr(\000)g Fw(t)927 2914
y Fs(\()p FH(k)q FG(\000)p FE(1)p Fs(\))930 2978 y FH(j)1078
2954 y Ft(\))g Fr(\002)1227 2903 y Fw(\266)p 1196 2937
110 3 v 1196 3005 a(\266)f(t)1284 3017 y FH(j)1315 2954
y Fz(G)1369 2966 y FH(i)1389 2954 y Ft(\()p Fw(t)1457
2923 y Fs(\()p FH(k)q FG(\000)p FE(1)p Fs(\))1608 2954
y Ft(\))117 b FB(\(9\))-152 3154 y(In)18 b(the)g(interest)g(of)g(bre)n
(vity)-5 b(,)19 b(we)e(omit)h(the)g(details)g(on)h(ho)n(w)f(to)g
(compute)h(all)-152 3241 y(the)g(partial)g(deri)n(v)n(ati)n(v)o(es)h
(abo)o(v)o(e.)-77 3328 y(Substituting)f Fz(F)6 b Ft(\()p
Fw(t)g Ft(\))19 b FB(and)g Fz(G)p Ft(\()p Fw(t)6 b Ft(\))19
b FB(with)f Fz(F)970 3301 y FG(\003)1004 3328 y Ft(\()p
Fw(t)6 b Ft(\))18 b FB(and)i Fz(G)1300 3301 y FG(\003)1333
3328 y Ft(\()p Fw(t)6 b Ft(\))19 b FB(in)f(\(NLP\),)g(we)-152
3415 y(obtain)i(the)f(follo)n(wing)g(linear)g(program:)305
3550 y(maximize)683 3566 y Fh(\345)705 3630 y FH(d)768
3550 y Fz(x)801 3564 y FH(d)311 3870 y FB(subject)g(to)683
3672 y Fj(8)683 3739 y(>)683 3761 y(>)683 3784 y(<)683
3918 y(>)683 3941 y(>)683 3963 y(:)786 3738 y Fz(R)832
3750 y FH(i)861 3738 y FA(x)d Fr(\024)h Fz(F)1041 3711
y FG(\003)1028 3760 y FH(i)1074 3738 y Ft(\()p Fw(t)6
b Ft(\))75 b Fr(8)p Fz(i)786 3825 y(G)840 3798 y FG(\003)840
3847 y FH(i)873 3825 y Ft(\()p Fw(t)6 b Ft(\))17 b Fr(\024)g
FB(0)147 b Fr(8)p Fz(i)786 3912 y FB(0)17 b Fr(\024)g
Fz(x)948 3926 y FH(d)1001 3912 y Fr(\024)g Fz(x)1109
3885 y FG(\003)1109 3937 y FH(d)1246 3912 y Fr(8)p Fz(d)786
3999 y FB(0)g Fr(\024)g Fw(t)948 4011 y FH(i)985 3999
y Fr(\024)f FB(1)150 b Fr(8)p Fz(i)1384 3870 y
SDict begin H.S end
 1384 3870
a 1384 3870 a
SDict begin 13.5 H.A end
 1384 3870 a 1384 3870 a
SDict begin [ /View [/XYZ H.V] /Dest (AMS.8) cvn H.B /DEST pdfmark
end
 1384 3870 a 289
w FB(\(LP)1786 3884 y FH(k)1816 3870 y FB(\))-77 4157
y(W)-6 b(e)16 b(then)g(deri)n(v)o(e)h FA(x)418 4130 y
Fs(\()p FH(k)q Fs(\))510 4157 y FB(and)g Fw(t)673 4130
y Fs(\()p FH(k)q Fs(\))765 4157 y FB(by)g(solving)g(the)f(linear)g
(program)h(\(LP)1767 4171 y FH(k)1797 4157 y FB(\).)-152
4244 y(The)g(optimal)f(solution)i(to)e(\(LP)670 4258
y FH(k)700 4244 y FB(\),)g(ho)n(we)n(v)o(er)m(,)i(cannot)g(be)f
(directly)f(used)h(be-)-152 4332 y(cause)j(the)f(LP)f(is)h(only)h(an)f
(approximation)i(to)e(the)g(original)g(NLP)-8 b(.)18
b(The)h(re-)-152 4419 y(sulting)g(solution)g(may)f(not)h(satisfy)f(the)
g(constraints)h(in)f(the)h(original)f(NLP)-8 b(.)-152
4506 y(T)i(o)22 b(ensure)g FA(x)200 4479 y Fs(\()p FH(k)q
Fs(\))298 4506 y FB(satis\002es)f(NLP)-8 b(,)20 b(we)h(apply)h(a)g
(simple)g(line)f(search)h(to)g(\002nd)-152 4593 y(a)j(point)h(on)f(the)
h(line)e(between)i FA(x)748 4566 y Fs(\()p FH(k)q FG(\000)p
FE(1)p Fs(\))924 4593 y FB(and)f FA(x)1093 4566 y Fs(\()p
FE(k)p Fs(\))1197 4593 y FB(that)g(is)g(feasible.)41
b(Dur)o(-)-152 4680 y(ing)28 b(the)g(line)f(search,)j(the)d(distance)h
(between)g FA(x)1171 4653 y Fs(\()p FH(k)q Fs(\))1275
4680 y FB(and)g FA(x)1447 4653 y Fs(\()p FH(k)q FG(\000)p
FE(1)p Fs(\))1625 4680 y FB(shrinks)-152 4767 y(e)o(xponentially)21
b(f)o(ast.)h(Since)d(we)g(guarantee)h(the)f(feasibility)f(of)h
FA(x)1566 4740 y Fs(\()p FH(k)q FG(\000)p FE(1)p Fs(\))1716
4767 y FB(,)g(we)-152 4855 y(can)25 b(quickly)f(\002nd)g(a)g(feasible)g
(solution.)38 b(In)23 b(our)h(e)n(v)n(aluation,)i(we)e(set)g(the)-152
4942 y(shrinkage)i(ratio)e(to)g Fw(a)i Ft(=)19 b FB(0)p
Fv(:)p FB(5.)40 b(Finally)-5 b(,)24 b(to)h(better)f(deal)g(with)g
(numerical)-152 5029 y(imprecision)c(in)f(our)h(feasibility)e(test,)h
(we)g(scale)g(do)n(wn)h FA(x)1369 5002 y Fs(\()p FH(k)q
Fs(\))1465 5029 y FB(by)f(1\045)h(at)f(the)-152 5116
y(end)h(of)f(each)g(iteration)g(\(Line)g(9)g(in)f(Figure)1006
5117 y
SDict begin H.S end
 1006 5117 a -1 x FB(6)1043 5065 y
SDict begin H.R end
 1043 5065 a
1043 5116 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.6) cvn H.B /ANN pdfmark end
 1043 5116 a FB(\).)-77 5203 y(Since)26 b(our)h(problem)h
(is)e(NLP)-8 b(,)25 b(we)i(cannot)g(guarantee)h(a)f(global)g(opti-)-152
5290 y(mal)c(solution.)37 b(T)-6 b(o)22 b(impro)o(v)o(e)i(the)f
(quality)h(of)f(the)g(\002nal)g(solution,)h(we)f(use)-152
5378 y(multiple)31 b(starting)f(points.)59 b(W)-6 b(e)30
b(al)o(w)o(ays)i(include)f(an)g(all-zero)g(starting)2196
359 y @beginspecial -27 @llx -28 @lly 434 @urx 112 @ury
2016 @rwi @setspecial
%%BeginDocument: NewFigs/zoka.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: jgraph
%%BoundingBox: -27 -28 434 112
%%EndComments

1 setlinecap 1 setlinejoin
0.700 setlinewidth
0.00 setgray

/Jrnd { exch cvi exch cvi dup 3 1 roll idiv mul } def
/JDEdict 8 dict def
JDEdict /mtrx matrix put
/JDE {
  JDEdict begin
  /yrad exch def
  /xrad exch def
  /savematrix mtrx currentmatrix def
  xrad yrad scale
  0 0 1 0 360 arc
  savematrix setmatrix
  end
} def
/JSTR {
  gsave 1 eq { gsave 1 setgray fill grestore } if
    exch neg exch neg translate 
    clip                        
    rotate                      
    4 dict begin
      pathbbox  /&top exch def
                /&right exch def
                /&bottom exch def
                &right sub /&width exch def
      newpath
      currentlinewidth mul round dup               
      &bottom exch Jrnd exch &top             
      4 -1 roll currentlinewidth mul setlinewidth  
      { &right exch moveto &width 0 rlineto stroke } for    
    end
  grestore
  newpath
} bind def
 gsave /Times-Roman findfont 9.000000 scalefont setfont
0.000000 0.000000 translate
0.700000 setlinewidth  gsave newpath 0.000000 0.000000 moveto 432.000000 0.000000 lineto stroke
newpath 6.942857 0.000000 moveto 6.942857 -2.000000 lineto stroke
newpath 14.657143 0.000000 moveto 14.657143 -2.000000 lineto stroke
newpath 22.371429 0.000000 moveto 22.371429 -2.000000 lineto stroke
newpath 30.085714 0.000000 moveto 30.085714 -2.000000 lineto stroke
newpath 37.799999 0.000000 moveto 37.799999 -2.000000 lineto stroke
newpath 45.514286 0.000000 moveto 45.514286 -2.000000 lineto stroke
newpath 53.228573 0.000000 moveto 53.228573 -2.000000 lineto stroke
newpath 60.942860 0.000000 moveto 60.942860 -2.000000 lineto stroke
newpath 68.657143 0.000000 moveto 68.657143 -2.000000 lineto stroke
newpath 76.371429 0.000000 moveto 76.371429 -5.000000 lineto stroke
newpath 84.085716 0.000000 moveto 84.085716 -2.000000 lineto stroke
newpath 91.800003 0.000000 moveto 91.800003 -2.000000 lineto stroke
newpath 99.514290 0.000000 moveto 99.514290 -2.000000 lineto stroke
newpath 107.228577 0.000000 moveto 107.228577 -2.000000 lineto stroke
newpath 114.942856 0.000000 moveto 114.942856 -2.000000 lineto stroke
newpath 122.657143 0.000000 moveto 122.657143 -2.000000 lineto stroke
newpath 130.371429 0.000000 moveto 130.371429 -2.000000 lineto stroke
newpath 138.085724 0.000000 moveto 138.085724 -2.000000 lineto stroke
newpath 145.800003 0.000000 moveto 145.800003 -2.000000 lineto stroke
newpath 153.514282 0.000000 moveto 153.514282 -5.000000 lineto stroke
newpath 161.228577 0.000000 moveto 161.228577 -2.000000 lineto stroke
newpath 168.942856 0.000000 moveto 168.942856 -2.000000 lineto stroke
newpath 176.657150 0.000000 moveto 176.657150 -2.000000 lineto stroke
newpath 184.371429 0.000000 moveto 184.371429 -2.000000 lineto stroke
newpath 192.085724 0.000000 moveto 192.085724 -2.000000 lineto stroke
newpath 199.800003 0.000000 moveto 199.800003 -2.000000 lineto stroke
newpath 207.514282 0.000000 moveto 207.514282 -2.000000 lineto stroke
newpath 215.228577 0.000000 moveto 215.228577 -2.000000 lineto stroke
newpath 222.942856 0.000000 moveto 222.942856 -2.000000 lineto stroke
newpath 230.657150 0.000000 moveto 230.657150 -5.000000 lineto stroke
newpath 238.371429 0.000000 moveto 238.371429 -2.000000 lineto stroke
newpath 246.085724 0.000000 moveto 246.085724 -2.000000 lineto stroke
newpath 253.800003 0.000000 moveto 253.800003 -2.000000 lineto stroke
newpath 261.514282 0.000000 moveto 261.514282 -2.000000 lineto stroke
newpath 269.228577 0.000000 moveto 269.228577 -2.000000 lineto stroke
newpath 276.942871 0.000000 moveto 276.942871 -2.000000 lineto stroke
newpath 284.657135 0.000000 moveto 284.657135 -2.000000 lineto stroke
newpath 292.371429 0.000000 moveto 292.371429 -2.000000 lineto stroke
newpath 300.085724 0.000000 moveto 300.085724 -2.000000 lineto stroke
newpath 307.800018 0.000000 moveto 307.800018 -5.000000 lineto stroke
newpath 315.514282 0.000000 moveto 315.514282 -2.000000 lineto stroke
newpath 323.228577 0.000000 moveto 323.228577 -2.000000 lineto stroke
newpath 330.942871 0.000000 moveto 330.942871 -2.000000 lineto stroke
newpath 338.657135 0.000000 moveto 338.657135 -2.000000 lineto stroke
newpath 346.371429 0.000000 moveto 346.371429 -2.000000 lineto stroke
newpath 354.085724 0.000000 moveto 354.085724 -2.000000 lineto stroke
newpath 361.800018 0.000000 moveto 361.800018 -2.000000 lineto stroke
newpath 369.514282 0.000000 moveto 369.514282 -2.000000 lineto stroke
newpath 377.228577 0.000000 moveto 377.228577 -2.000000 lineto stroke
newpath 384.942871 0.000000 moveto 384.942871 -5.000000 lineto stroke
newpath 392.657135 0.000000 moveto 392.657135 -2.000000 lineto stroke
newpath 400.371429 0.000000 moveto 400.371429 -2.000000 lineto stroke
newpath 408.085724 0.000000 moveto 408.085724 -2.000000 lineto stroke
newpath 415.800018 0.000000 moveto 415.800018 -2.000000 lineto stroke
newpath 423.514282 0.000000 moveto 423.514282 -2.000000 lineto stroke
newpath 431.228577 0.000000 moveto 431.228577 -2.000000 lineto stroke
/Tahoma findfont 9.000000 scalefont setfont
gsave 76.371429 -8.000000 translate 0.000000 rotate
0 -5.400000 translate (100) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 153.514282 -8.000000 translate 0.000000 rotate
0 -5.400000 translate (200) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 230.657150 -8.000000 translate 0.000000 rotate
0 -5.400000 translate (300) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 307.800018 -8.000000 translate 0.000000 rotate
0 -5.400000 translate (400) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 384.942871 -8.000000 translate 0.000000 rotate
0 -5.400000 translate (500) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 216.000000 -21.400000 translate 0.000000 rotate
0 -5.400000 translate (bin index \(bin size = 10s\)) dup stringwidth pop 2 div neg 0 moveto
show
grestore
 grestore 
0.700000 setlinewidth  gsave newpath 0.000000 0.000000 moveto 0.000000 108.000000 lineto stroke
newpath 0.000000 0.000000 moveto -5.000000 0.000000 lineto stroke
newpath 0.000000 2.160000 moveto -2.000000 2.160000 lineto stroke
newpath 0.000000 4.320000 moveto -2.000000 4.320000 lineto stroke
newpath 0.000000 6.480000 moveto -2.000000 6.480000 lineto stroke
newpath 0.000000 8.640000 moveto -2.000000 8.640000 lineto stroke
newpath 0.000000 10.800000 moveto -2.000000 10.800000 lineto stroke
newpath 0.000000 12.960001 moveto -2.000000 12.960001 lineto stroke
newpath 0.000000 15.120001 moveto -2.000000 15.120001 lineto stroke
newpath 0.000000 17.280003 moveto -2.000000 17.280003 lineto stroke
newpath 0.000000 19.440002 moveto -2.000000 19.440002 lineto stroke
newpath 0.000000 21.600000 moveto -5.000000 21.600000 lineto stroke
newpath 0.000000 23.760000 moveto -2.000000 23.760000 lineto stroke
newpath 0.000000 25.920002 moveto -2.000000 25.920002 lineto stroke
newpath 0.000000 28.080002 moveto -2.000000 28.080002 lineto stroke
newpath 0.000000 30.240002 moveto -2.000000 30.240002 lineto stroke
newpath 0.000000 32.400002 moveto -2.000000 32.400002 lineto stroke
newpath 0.000000 34.560005 moveto -2.000000 34.560005 lineto stroke
newpath 0.000000 36.720005 moveto -2.000000 36.720005 lineto stroke
newpath 0.000000 38.880005 moveto -2.000000 38.880005 lineto stroke
newpath 0.000000 41.040005 moveto -2.000000 41.040005 lineto stroke
newpath 0.000000 43.200001 moveto -5.000000 43.200001 lineto stroke
newpath 0.000000 45.360001 moveto -2.000000 45.360001 lineto stroke
newpath 0.000000 47.519997 moveto -2.000000 47.519997 lineto stroke
newpath 0.000000 49.679996 moveto -2.000000 49.679996 lineto stroke
newpath 0.000000 51.839993 moveto -2.000000 51.839993 lineto stroke
newpath 0.000000 53.999992 moveto -2.000000 53.999992 lineto stroke
newpath 0.000000 56.159988 moveto -2.000000 56.159988 lineto stroke
newpath 0.000000 58.319988 moveto -2.000000 58.319988 lineto stroke
newpath 0.000000 60.479984 moveto -2.000000 60.479984 lineto stroke
newpath 0.000000 62.639984 moveto -2.000000 62.639984 lineto stroke
newpath 0.000000 64.800003 moveto -5.000000 64.800003 lineto stroke
newpath 0.000000 66.959999 moveto -2.000000 66.959999 lineto stroke
newpath 0.000000 69.119995 moveto -2.000000 69.119995 lineto stroke
newpath 0.000000 71.279999 moveto -2.000000 71.279999 lineto stroke
newpath 0.000000 73.439995 moveto -2.000000 73.439995 lineto stroke
newpath 0.000000 75.599991 moveto -2.000000 75.599991 lineto stroke
newpath 0.000000 77.759987 moveto -2.000000 77.759987 lineto stroke
newpath 0.000000 79.919991 moveto -2.000000 79.919991 lineto stroke
newpath 0.000000 82.079987 moveto -2.000000 82.079987 lineto stroke
newpath 0.000000 84.239983 moveto -2.000000 84.239983 lineto stroke
newpath 0.000000 86.400002 moveto -5.000000 86.400002 lineto stroke
newpath 0.000000 88.559998 moveto -2.000000 88.559998 lineto stroke
newpath 0.000000 90.720001 moveto -2.000000 90.720001 lineto stroke
newpath 0.000000 92.879997 moveto -2.000000 92.879997 lineto stroke
newpath 0.000000 95.039993 moveto -2.000000 95.039993 lineto stroke
newpath 0.000000 97.199989 moveto -2.000000 97.199989 lineto stroke
newpath 0.000000 99.359993 moveto -2.000000 99.359993 lineto stroke
newpath 0.000000 101.519989 moveto -2.000000 101.519989 lineto stroke
newpath 0.000000 103.679985 moveto -2.000000 103.679985 lineto stroke
newpath 0.000000 105.839981 moveto -2.000000 105.839981 lineto stroke
newpath 0.000000 108.000000 moveto -5.000000 108.000000 lineto stroke
/Tahoma findfont 9.000000 scalefont setfont
gsave -8.000000 0.000000 translate 0.000000 rotate
0 -2.700000 translate (0) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 21.600000 translate 0.000000 rotate
0 -2.700000 translate (1) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 43.200001 translate 0.000000 rotate
0 -2.700000 translate (2) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 64.800003 translate 0.000000 rotate
0 -2.700000 translate (3) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 86.400002 translate 0.000000 rotate
0 -2.700000 translate (4) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 108.000000 translate 0.000000 rotate
0 -2.700000 translate (5) dup stringwidth pop neg 0 moveto
show
grestore
gsave -20.320000 54.000000 translate 90.000000 rotate
0 0.000000 translate (Mbps) dup stringwidth pop 2 div neg 0 moveto
show
grestore
 grestore 
 gsave 
newpath
 0 0 moveto 0 108.000000 lineto 432.000000 108.000000 lineto 432.000000 0 lineto
  closepath clip newpath
 gsave 0.000000 0.000000 0.000000 setrgbcolor
0.700000 setlinewidth  [] 0 setdash
0.000000 0.112320 moveto   0.771429 0.116122 lineto
  1.542857 0.200275 lineto
  2.314286 0.144979 lineto
  3.085714 0.180749 lineto
  3.857143 0.085363 lineto
  4.628572 0.106272 lineto
  5.400000 0.383616 lineto
  6.171429 0.620698 lineto
  6.942857 0.128045 lineto
  7.714286 0.906163 lineto
  8.485714 0.198029 lineto
  9.257143 0.293069 lineto
  10.028572 0.595469 lineto
  10.800000 0.877478 lineto
  11.571428 1.185235 lineto
  12.342857 3.078432 lineto
  13.114286 2.934144 lineto
  13.885715 1.769991 lineto
  14.657143 0.641434 lineto
  15.428572 0.625536 lineto
  16.200001 0.351302 lineto
  16.971428 1.261267 lineto
  17.742857 1.506989 lineto
  18.514286 0.697421 lineto
  19.285715 0.688781 lineto
  20.057144 0.753235 lineto
  20.828571 1.045440 lineto
  21.600000 2.906842 lineto
  22.371429 1.130630 lineto
  23.142857 1.916006 lineto
  23.914286 2.380493 lineto
  24.685715 3.432499 lineto
  25.457144 4.643827 lineto
  26.228573 3.828211 lineto
  27.000000 1.972685 lineto
  27.771429 1.332288 lineto
  28.542858 0.620352 lineto
  29.314285 0.791078 lineto
  30.085714 1.369613 lineto
  30.857143 0.725069 lineto
  31.628572 1.137715 lineto
  32.400002 1.894579 lineto
  33.171429 2.279059 lineto
  33.942856 1.527898 lineto
  34.714287 1.329696 lineto
  35.485714 0.864173 lineto
  36.257145 1.546906 lineto
  37.028572 0.533434 lineto
  37.799999 6.558451 lineto
  38.571430 11.205907 lineto
  39.342857 3.557088 lineto
  40.114288 0.426125 lineto
  40.885715 0.487296 lineto
  41.657143 0.763430 lineto
  42.428574 1.422490 lineto
  43.200001 0.917914 lineto
  43.971428 1.691712 lineto
  44.742859 1.590278 lineto
  45.514286 25.362722 lineto
  46.285713 2.424211 lineto
  47.057144 3.001536 lineto
  47.828571 1.919981 lineto
  48.600002 1.497485 lineto
  49.371429 1.151539 lineto
  50.142857 0.919987 lineto
  50.914288 3.044390 lineto
  51.685715 4.791053 lineto
  52.457146 4.384800 lineto
  53.228573 1.804723 lineto
  54.000000 0.936230 lineto
  54.771431 1.549498 lineto
  55.542858 1.990656 lineto
  56.314285 1.653005 lineto
  57.085716 1.278029 lineto
  57.857143 1.642291 lineto
  58.628571 2.136672 lineto
  59.400002 1.844467 lineto
  60.171429 1.320710 lineto
  60.942860 1.056154 lineto
  61.714287 1.438906 lineto
  62.485714 2.159654 lineto
  63.257145 1.084320 lineto
  64.028572 2.213395 lineto
  64.800003 1.478995 lineto
  65.571426 2.681856 lineto
  66.342857 4.198867 lineto
  67.114288 2.522189 lineto
  67.885712 3.001536 lineto
  68.657143 1.831162 lineto
  69.428574 3.497818 lineto
  70.200005 2.500071 lineto
  70.971428 2.321568 lineto
  71.742859 2.599085 lineto
  72.514290 2.868134 lineto
  73.285713 0.833242 lineto
  74.057144 1.422144 lineto
  74.828575 1.697760 lineto
  75.599998 2.190931 lineto
  76.371429 1.723507 lineto
  77.142860 23.324329 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
77.142860 23.324329 moveto   77.914284 2.359584 lineto
  78.685715 1.475712 lineto
  79.457146 1.814400 lineto
  80.228577 3.656966 lineto
  81.000000 2.495923 lineto
  81.771431 3.779654 lineto
  82.542862 2.779315 lineto
  83.314285 3.752698 lineto
  84.085716 1.562976 lineto
  84.857147 1.526343 lineto
  85.628571 2.397600 lineto
  86.400002 2.958682 lineto
  87.171432 3.100205 lineto
  87.942856 4.517683 lineto
  88.714287 3.969216 lineto
  89.485718 1.466727 lineto
  90.257141 1.722298 lineto
  91.028572 1.755130 lineto
  91.800003 2.676672 lineto
  92.571426 1.611360 lineto
  93.342857 1.153094 lineto
  94.114288 2.480198 lineto
  94.885719 1.522022 lineto
  95.657143 1.813536 lineto
  96.428574 1.567296 lineto
  97.200005 3.743885 lineto
  97.971428 2.399674 lineto
  98.742859 2.448922 lineto
  99.514290 2.023834 lineto
  100.285713 4.992711 lineto
  101.057144 5.014138 lineto
  101.828575 4.019501 lineto
  102.599998 1.737504 lineto
  103.371429 2.028327 lineto
  104.142860 3.990989 lineto
  104.914291 1.184544 lineto
  105.685715 1.371168 lineto
  106.457146 2.684966 lineto
  107.228577 2.511648 lineto
  108.000000 2.167603 lineto
  108.771431 1.487808 lineto
  109.542862 3.290112 lineto
  110.314285 1.826323 lineto
  111.085716 2.238797 lineto
  111.857147 2.072045 lineto
  112.628571 2.238797 lineto
  113.400002 4.049049 lineto
  114.171432 2.354746 lineto
  114.942856 3.434055 lineto
  115.714287 3.870375 lineto
  116.485718 3.310848 lineto
  117.257141 3.977683 lineto
  118.028572 4.074624 lineto
  118.800003 3.985805 lineto
  119.571434 2.098829 lineto
  120.342857 2.281478 lineto
  121.114288 3.084307 lineto
  121.885719 4.497120 lineto
  122.657143 4.595789 lineto
  123.428574 4.702234 lineto
  124.200005 5.798304 lineto
  124.971428 8.726228 lineto
  125.742859 4.110394 lineto
  126.514290 4.125082 lineto
  127.285713 4.746989 lineto
  128.057144 4.119552 lineto
  128.828568 2.974406 lineto
  129.600006 4.000838 lineto
  130.371429 2.414535 lineto
  131.142853 4.104173 lineto
  131.914291 3.808512 lineto
  132.685715 2.306880 lineto
  133.457138 2.825107 lineto
  134.228577 5.396199 lineto
  135.000000 4.032288 lineto
  135.771423 2.871936 lineto
  136.542862 4.394650 lineto
  137.314285 2.018304 lineto
  138.085724 4.464115 lineto
  138.857147 3.272486 lineto
  139.628571 3.427834 lineto
  140.400009 4.506106 lineto
  141.171432 3.964377 lineto
  141.942856 4.916852 lineto
  142.714294 4.126983 lineto
  143.485718 5.418835 lineto
  144.257141 11.507790 lineto
  145.028580 12.548218 lineto
  145.800003 4.332096 lineto
  146.571426 3.121805 lineto
  147.342865 3.542400 lineto
  148.114288 6.369581 lineto
  148.885712 2.707949 lineto
  149.657150 3.556397 lineto
  150.428574 3.058387 lineto
  151.199997 2.760307 lineto
  151.971436 2.081030 lineto
  152.742859 2.045606 lineto
  153.514282 2.329862 lineto
  154.285721 2.107296 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
154.285721 2.107296 moveto   155.057144 3.659731 lineto
  155.828568 1.463098 lineto
  156.600006 1.389485 lineto
  157.371429 2.207865 lineto
  158.142853 4.758739 lineto
  158.914291 2.470867 lineto
  159.685715 2.436480 lineto
  160.457153 2.636064 lineto
  161.228577 3.553459 lineto
  162.000000 3.531514 lineto
  162.771439 4.883847 lineto
  163.542862 3.451853 lineto
  164.314285 3.209414 lineto
  165.085724 3.601843 lineto
  165.857147 2.776378 lineto
  166.628571 4.792608 lineto
  167.400009 2.894746 lineto
  168.171432 2.843597 lineto
  168.942856 2.735597 lineto
  169.714294 1.437178 lineto
  170.485718 2.343341 lineto
  171.257141 3.472589 lineto
  172.028580 2.311027 lineto
  172.800003 2.001024 lineto
  173.571426 4.311015 lineto
  174.342865 4.855507 lineto
  175.114288 4.050951 lineto
  175.885712 1.769299 lineto
  176.657150 2.775514 lineto
  177.428574 3.990298 lineto
  178.199997 3.746131 lineto
  178.971436 2.962829 lineto
  179.742859 3.120250 lineto
  180.514282 3.258662 lineto
  181.285721 2.367014 lineto
  182.057144 1.559347 lineto
  182.828568 3.457728 lineto
  183.600006 2.818886 lineto
  184.371429 3.884198 lineto
  185.142853 1.897517 lineto
  185.914291 5.008608 lineto
  186.685715 7.889357 lineto
  187.457153 5.399654 lineto
  188.228577 6.130772 lineto
  189.000000 5.489511 lineto
  189.771439 5.416934 lineto
  190.542862 3.827866 lineto
  191.314285 7.309613 lineto
  192.085724 6.679929 lineto
  192.857147 3.004992 lineto
  193.628571 2.322950 lineto
  194.400009 2.760134 lineto
  195.171432 8.273318 lineto
  195.942856 8.195905 lineto
  196.714294 8.524052 lineto
  197.485718 8.507290 lineto
  198.257141 9.500371 lineto
  199.028580 6.833894 lineto
  199.800003 3.957120 lineto
  200.571426 3.027456 lineto
  201.342865 2.329690 lineto
  202.114288 2.632781 lineto
  202.885712 1.477440 lineto
  203.657150 1.550534 lineto
  204.428574 1.764288 lineto
  205.199997 2.092954 lineto
  205.971436 13.034304 lineto
  206.742859 5.700845 lineto
  207.514282 11.257401 lineto
  208.285721 8.219923 lineto
  209.057144 6.912346 lineto
  209.828583 9.553248 lineto
  210.600006 8.781005 lineto
  211.371429 36.524303 lineto
  212.142868 46.017288 lineto
  212.914291 19.806509 lineto
  213.685715 27.466993 lineto
  214.457153 50.654160 lineto
  215.228577 28.669249 lineto
  216.000000 33.603119 lineto
  216.771439 30.459024 lineto
  217.542862 46.018154 lineto
  218.314285 46.720371 lineto
  219.085724 38.381042 lineto
  219.857147 35.514503 lineto
  220.628571 53.391315 lineto
  221.400009 55.404217 lineto
  222.171432 26.893944 lineto
  222.942856 36.189075 lineto
  223.714294 32.917320 lineto
  224.485718 19.674318 lineto
  225.257141 25.271784 lineto
  226.028580 24.906744 lineto
  226.800003 45.166897 lineto
  227.571426 36.079559 lineto
  228.342865 54.025921 lineto
  229.114288 39.026016 lineto
  229.885712 49.303726 lineto
  230.657150 25.901423 lineto
  231.428574 52.017555 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
231.428574 52.017555 moveto   232.199997 23.370552 lineto
  232.971436 41.875488 lineto
  233.742859 38.859047 lineto
  234.514282 44.796673 lineto
  235.285721 63.973370 lineto
  236.057144 67.658974 lineto
  236.828583 60.267887 lineto
  237.600006 62.354233 lineto
  238.371429 64.669106 lineto
  239.142868 55.010235 lineto
  239.914291 53.575344 lineto
  240.685715 77.154770 lineto
  241.457153 73.220757 lineto
  242.228577 50.404465 lineto
  243.000000 60.215183 lineto
  243.771439 84.057915 lineto
  244.542862 56.475143 lineto
  245.314285 64.098000 lineto
  246.085724 69.903214 lineto
  246.857147 45.997200 lineto
  247.628571 59.913864 lineto
  248.400009 49.156200 lineto
  249.171432 53.046146 lineto
  249.942856 61.033390 lineto
  250.714294 60.765121 lineto
  251.485718 26.447472 lineto
  252.257141 47.362968 lineto
  253.028580 50.686996 lineto
  253.800003 36.796036 lineto
  254.571426 50.298191 lineto
  255.342865 34.504272 lineto
  256.114288 18.586885 lineto
  256.885712 27.443880 lineto
  257.657135 48.094559 lineto
  258.428589 51.128929 lineto
  259.200012 59.476898 lineto
  259.971436 43.061546 lineto
  260.742859 41.697289 lineto
  261.514282 51.900917 lineto
  262.285706 47.779633 lineto
  263.057159 55.683506 lineto
  263.828583 62.225716 lineto
  264.600006 49.778065 lineto
  265.371429 44.252567 lineto
  266.142853 50.508362 lineto
  266.914276 44.453236 lineto
  267.685730 48.692883 lineto
  268.457153 49.150154 lineto
  269.228577 34.414631 lineto
  270.000000 54.404785 lineto
  270.771423 21.192364 lineto
  271.542847 44.405712 lineto
  272.314301 55.043064 lineto
  273.085724 48.567604 lineto
  273.857147 47.746799 lineto
  274.628571 44.951759 lineto
  275.399994 59.360687 lineto
  276.171448 43.199135 lineto
  276.942871 63.485859 lineto
  277.714294 52.022736 lineto
  278.485718 38.550816 lineto
  279.257141 61.785938 lineto
  280.028564 50.202934 lineto
  280.800018 34.098190 lineto
  281.571442 40.151592 lineto
  282.342865 24.879097 lineto
  283.114288 26.805601 lineto
  283.885712 39.805775 lineto
  284.657135 53.167751 lineto
  285.428589 61.007904 lineto
  286.200012 51.093075 lineto
  286.971436 52.480659 lineto
  287.742859 42.692833 lineto
  288.514282 38.075401 lineto
  289.285706 59.040577 lineto
  290.057159 59.473011 lineto
  290.828583 69.709892 lineto
  291.600006 48.293064 lineto
  292.371429 42.317211 lineto
  293.142853 54.702217 lineto
  293.914276 58.287815 lineto
  294.685730 73.606323 lineto
  295.457153 62.821011 lineto
  296.228577 62.705448 lineto
  297.000000 39.196655 lineto
  297.771423 80.643814 lineto
  298.542877 36.937729 lineto
  299.314301 14.060218 lineto
  300.085724 13.558061 lineto
  300.857147 12.504845 lineto
  301.628571 12.211085 lineto
  302.399994 15.420672 lineto
  303.171448 20.055859 lineto
  303.942871 15.469920 lineto
  304.714294 11.244615 lineto
  305.485718 9.724148 lineto
  306.257141 11.489818 lineto
  307.028564 13.223520 lineto
  307.800018 9.256378 lineto
  308.571442 13.646189 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
308.571442 13.646189 moveto   309.342865 10.010822 lineto
  310.114288 14.230772 lineto
  310.885712 14.780103 lineto
  311.657135 11.966918 lineto
  312.428589 14.867021 lineto
  313.200012 14.865293 lineto
  313.971436 21.214483 lineto
  314.742859 21.002285 lineto
  315.514282 17.033241 lineto
  316.285706 15.826234 lineto
  317.057159 22.692745 lineto
  317.828583 22.225536 lineto
  318.600006 15.199142 lineto
  319.371429 20.518272 lineto
  320.142853 30.606985 lineto
  320.914307 13.374028 lineto
  321.685730 23.630833 lineto
  322.457153 17.203623 lineto
  323.228577 12.371616 lineto
  324.000000 11.369550 lineto
  324.771423 10.601799 lineto
  325.542877 9.888480 lineto
  326.314301 10.100851 lineto
  327.085724 48.627434 lineto
  327.857147 92.699852 lineto
  328.628571 61.375103 lineto
  329.399994 81.090286 lineto
  330.171448 68.866417 lineto
  330.942871 17.312487 lineto
  331.714294 21.329395 lineto
  332.485718 20.241619 lineto
  333.257141 20.055687 lineto
  334.028564 14.892077 lineto
  334.800018 10.613203 lineto
  335.571442 9.874483 lineto
  336.342865 18.691603 lineto
  337.114288 14.868750 lineto
  337.885712 14.546131 lineto
  338.657135 27.737207 lineto
  339.428589 12.672461 lineto
  340.200012 14.929230 lineto
  340.971436 17.410982 lineto
  341.742859 13.364180 lineto
  342.514282 18.231609 lineto
  343.285706 23.326704 lineto
  344.057159 17.469215 lineto
  344.828583 12.018759 lineto
  345.600006 57.114292 lineto
  346.371429 70.323120 lineto
  347.142853 38.296368 lineto
  347.914307 12.088224 lineto
  348.685730 0.763430 lineto
  349.457153 0.815098 lineto
  350.228577 2.788646 lineto
  351.000000 11.106547 lineto
  351.771423 16.056576 lineto
  352.542877 14.349831 lineto
  353.314301 13.884998 lineto
  354.085724 15.215559 lineto
  354.857147 16.027027 lineto
  355.628571 15.585177 lineto
  356.399994 13.998010 lineto
  357.171448 13.543891 lineto
  357.942871 14.212973 lineto
  358.714294 18.311443 lineto
  359.485718 14.354670 lineto
  360.257141 13.753325 lineto
  361.028564 14.275354 lineto
  361.800018 15.741561 lineto
  362.571442 14.940634 lineto
  363.342865 15.286407 lineto
  364.114288 15.400281 lineto
  364.885712 16.150753 lineto
  365.657135 14.013217 lineto
  366.428589 14.027040 lineto
  367.200012 14.503104 lineto
  367.971436 13.890009 lineto
  368.742859 13.620615 lineto
  369.514282 14.155258 lineto
  370.285706 14.453684 lineto
  371.057159 14.111885 lineto
  371.828583 11.754721 lineto
  372.600006 18.491501 lineto
  373.371429 17.227295 lineto
  374.142853 12.774240 lineto
  374.914307 12.475123 lineto
  375.685730 13.312685 lineto
  376.457153 12.856320 lineto
  377.228577 15.181344 lineto
  378.000000 14.560473 lineto
  378.771423 14.794272 lineto
  379.542877 13.855277 lineto
  380.314301 14.231117 lineto
  381.085724 13.444359 lineto
  381.857147 12.629952 lineto
  382.628571 12.669869 lineto
  383.399994 13.431572 lineto
  384.171448 13.519873 lineto
  384.942871 9.393927 lineto
  385.714294 8.843731 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
385.714294 8.843731 moveto   386.485718 8.661427 lineto
  387.257141 8.398253 lineto
  388.028564 8.845804 lineto
  388.800018 8.479988 lineto
  389.571442 8.648467 lineto
  390.342865 9.243590 lineto
  391.114288 8.141473 lineto
  391.885712 9.065434 lineto
  392.657135 9.324461 lineto
  393.428589 9.383040 lineto
  394.200012 9.386497 lineto
  394.971436 9.277633 lineto
  395.742859 10.074068 lineto
  396.514282 10.498464 lineto
  397.285736 10.025856 lineto
  398.057159 9.328436 lineto
  398.828583 10.274861 lineto
  399.600006 9.716199 lineto
  400.371429 9.689760 lineto
  401.142853 9.862733 lineto
  401.914307 9.337075 lineto
  402.685730 10.287994 lineto
  403.457153 9.577958 lineto
  404.228577 10.109491 lineto
  405.000000 9.430042 lineto
  405.771423 8.397562 lineto
  406.542877 11.613197 lineto
  407.314301 3.101414 lineto
  408.085724 0.816134 lineto
  408.857147 1.836518 lineto
  409.628571 1.485562 lineto
  410.399994 1.665447 lineto
  411.171448 2.218579 lineto
  411.942871 1.226362 lineto
  412.714294 1.133914 lineto
  413.485718 2.848954 lineto
  414.257141 3.154464 lineto
  415.028564 3.073939 lineto
  415.800018 3.886790 lineto
  416.571442 3.288730 lineto
  417.342865 2.221517 lineto
  418.114288 3.815769 lineto
  418.885712 2.426630 lineto
  419.657166 3.091910 lineto
  420.428589 5.055610 lineto
  421.200012 3.234125 lineto
  421.971436 1.635552 lineto
  422.742859 0.977011 lineto
  423.514282 3.363207 lineto
  424.285736 3.007757 lineto
  425.057159 1.965946 lineto
  425.828583 2.248819 lineto
  426.600006 3.149280 lineto
  427.371429 1.996704 lineto
  428.142853 2.268173 lineto
  428.914307 3.111264 lineto
  429.685730 1.954368 lineto
  430.457153 1.248134 lineto
  431.228577 3.713126 lineto
  432.000000 63.590401 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
 grestore 
 gsave 1.000000 0.000000 0.000000 setrgbcolor
0.700000 setlinewidth  [1 3.200000] 0 setdash
0.771429 0.056160 moveto   1.542857 0.086141 lineto
  2.314286 0.143208 lineto
  3.085714 0.144094 lineto
  3.857143 0.162421 lineto
  4.628572 0.123892 lineto
  5.400000 0.115082 lineto
  6.171429 0.249348 lineto
  6.942857 0.435024 lineto
  7.714286 0.281534 lineto
  8.485714 0.593849 lineto
  9.257143 0.395939 lineto
  10.028572 0.344503 lineto
  10.800000 0.469986 lineto
  11.571428 0.673732 lineto
  12.342857 0.929485 lineto
  13.114286 2.003957 lineto
  13.885715 2.469053 lineto
  14.657143 2.119522 lineto
  15.428572 1.380478 lineto
  16.200001 1.003007 lineto
  16.971428 0.677154 lineto
  17.742857 0.969212 lineto
  18.514286 1.238099 lineto
  19.285715 0.967760 lineto
  20.057144 0.828271 lineto
  20.828571 0.790752 lineto
  21.600000 0.918097 lineto
  22.371429 1.912468 lineto
  23.142857 1.521549 lineto
  23.914286 1.718779 lineto
  24.685715 2.049635 lineto
  25.457144 2.741062 lineto
  26.228573 3.692455 lineto
  27.000000 3.760323 lineto
  27.771429 2.866514 lineto
  28.542858 2.099397 lineto
  29.314285 1.359875 lineto
  30.085714 1.075477 lineto
  30.857143 1.222545 lineto
  31.628572 0.973806 lineto
  32.400002 1.055761 lineto
  33.171429 1.475170 lineto
  33.942856 1.877116 lineto
  34.714287 1.702506 lineto
  35.485714 1.516102 lineto
  36.257145 1.190136 lineto
  37.028572 1.368522 lineto
  37.799999 0.950977 lineto
  38.571430 3.754707 lineto
  39.342857 7.480318 lineto
  40.114288 5.518692 lineto
  40.885715 2.972419 lineto
  41.657143 1.729853 lineto
  42.428574 1.246642 lineto
  43.200001 1.334567 lineto
  43.971428 1.126239 lineto
  44.742859 1.408977 lineto
  45.514286 1.499628 lineto
  46.285713 13.431183 lineto
  47.057144 7.927697 lineto
  47.828571 5.464605 lineto
  48.600002 3.692304 lineto
  49.371429 2.594894 lineto
  50.142857 1.873215 lineto
  50.914288 1.396602 lineto
  51.685715 2.220502 lineto
  52.457146 3.505766 lineto
  53.228573 3.945283 lineto
  54.000000 2.875003 lineto
  54.771431 1.905617 lineto
  55.542858 1.727557 lineto
  56.314285 1.859108 lineto
  57.085716 1.756056 lineto
  57.857143 1.517041 lineto
  58.628571 1.579666 lineto
  59.400002 1.858170 lineto
  60.171429 1.851319 lineto
  60.942860 1.586015 lineto
  61.714287 1.321084 lineto
  62.485714 1.379994 lineto
  63.257145 1.769824 lineto
  64.028572 1.427073 lineto
  64.800003 1.820234 lineto
  65.571426 1.649614 lineto
  66.342857 2.165746 lineto
  67.114288 3.182307 lineto
  67.885712 2.852237 lineto
  68.657143 2.926887 lineto
  69.428574 2.379024 lineto
  70.200005 2.938421 lineto
  70.971428 2.719246 lineto
  71.742859 2.520418 lineto
  72.514290 2.559751 lineto
  73.285713 2.713932 lineto
  74.057144 1.773591 lineto
  74.828575 1.597867 lineto
  75.599998 1.647814 lineto
  76.371429 1.919372 lineto
  77.142860 1.821440 lineto
  77.914284 12.572885 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [1 3.200000] 0 setdash
77.914284 12.572885 moveto   78.685715 7.466234 lineto
  79.457146 4.470963 lineto
  80.228577 3.142692 lineto
  81.000000 3.399818 lineto
  81.771431 2.947881 lineto
  82.542862 3.363768 lineto
  83.314285 3.071542 lineto
  84.085716 3.412109 lineto
  84.857147 2.487542 lineto
  85.628571 2.006944 lineto
  86.400002 2.202271 lineto
  87.171432 2.580487 lineto
  87.942856 2.840335 lineto
  88.714287 3.679020 lineto
  89.485718 3.824107 lineto
  90.257141 2.645417 lineto
  91.028572 2.183868 lineto
  91.800003 1.969495 lineto
  92.571426 2.323080 lineto
  93.342857 1.967222 lineto
  94.114288 1.560157 lineto
  94.885719 2.020179 lineto
  95.657143 1.771101 lineto
  96.428574 1.792318 lineto
  97.200005 1.679806 lineto
  97.971428 2.711837 lineto
  98.742859 2.555755 lineto
  99.514290 2.502338 lineto
  100.285713 2.263097 lineto
  101.057144 3.627893 lineto
  101.828575 4.321015 lineto
  102.599998 4.170269 lineto
  103.371429 2.953887 lineto
  104.142860 2.491106 lineto
  104.914291 3.241037 lineto
  105.685715 2.212790 lineto
  106.457146 1.791981 lineto
  107.228577 2.238473 lineto
  108.000000 2.375071 lineto
  108.771431 2.271327 lineto
  109.542862 1.879569 lineto
  110.314285 2.584850 lineto
  111.085716 2.205576 lineto
  111.857147 2.222187 lineto
  112.628571 2.147118 lineto
  113.400002 2.192962 lineto
  114.171432 3.121006 lineto
  114.942856 2.737865 lineto
  115.714287 3.085970 lineto
  116.485718 3.478162 lineto
  117.257141 3.394505 lineto
  118.028572 3.686105 lineto
  118.800003 3.880354 lineto
  119.571434 3.933079 lineto
  120.342857 3.015965 lineto
  121.114288 2.648722 lineto
  121.885719 2.866514 lineto
  122.657143 3.681806 lineto
  123.428574 4.138798 lineto
  124.200005 4.420527 lineto
  124.971428 5.109415 lineto
  125.742859 6.917810 lineto
  126.514290 5.514113 lineto
  127.285713 4.819587 lineto
  128.057144 4.783298 lineto
  128.828568 4.451415 lineto
  129.600006 3.712910 lineto
  130.371429 3.856874 lineto
  131.142853 3.135715 lineto
  131.914291 3.619944 lineto
  132.685715 3.714228 lineto
  133.457138 3.010543 lineto
  134.228577 2.917836 lineto
  135.000000 4.157006 lineto
  135.771423 4.094647 lineto
  136.542862 3.483303 lineto
  137.314285 3.938976 lineto
  138.085724 2.978640 lineto
  138.857147 3.721378 lineto
  139.628571 3.496932 lineto
  140.400009 3.462372 lineto
  141.171432 3.984250 lineto
  141.942856 3.974314 lineto
  142.714294 4.445582 lineto
  143.485718 4.286283 lineto
  144.257141 4.852548 lineto
  145.028580 8.180180 lineto
  145.800003 10.364199 lineto
  146.571426 7.348147 lineto
  147.342865 5.234976 lineto
  148.114288 4.388688 lineto
  148.885712 5.379135 lineto
  149.657150 4.043541 lineto
  150.428574 3.799958 lineto
  151.199997 3.429173 lineto
  151.971436 3.094740 lineto
  152.742859 2.587896 lineto
  153.514282 2.316751 lineto
  154.285721 2.323296 lineto
  155.057144 2.215296 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [1 3.200000] 0 setdash
155.057144 2.215296 moveto   155.828568 2.937514 lineto
  156.600006 2.200306 lineto
  157.371429 1.794895 lineto
  158.142853 2.001380 lineto
  158.914291 3.380054 lineto
  159.685715 2.925461 lineto
  160.457153 2.680970 lineto
  161.228577 2.658528 lineto
  162.000000 3.105994 lineto
  162.771439 3.318754 lineto
  163.542862 4.101300 lineto
  164.314285 3.776566 lineto
  165.085724 3.493001 lineto
  165.857147 3.547411 lineto
  166.628571 3.161895 lineto
  167.400009 3.977251 lineto
  168.171432 3.435998 lineto
  168.942856 3.139798 lineto
  169.714294 2.937708 lineto
  170.485718 2.187432 lineto
  171.257141 2.265386 lineto
  172.028580 2.868999 lineto
  172.800003 2.590013 lineto
  173.571426 2.295518 lineto
  174.342865 3.303266 lineto
  175.114288 4.079376 lineto
  175.885712 4.065163 lineto
  176.657150 2.917231 lineto
  177.428574 2.846383 lineto
  178.199997 3.418329 lineto
  178.971436 3.582230 lineto
  179.742859 3.272530 lineto
  180.514282 3.196390 lineto
  181.285721 3.227537 lineto
  182.057144 2.797265 lineto
  182.828568 2.178317 lineto
  183.600006 2.818022 lineto
  184.371429 2.818455 lineto
  185.142853 3.351326 lineto
  185.914291 2.624422 lineto
  186.685715 3.816504 lineto
  187.457153 5.852931 lineto
  188.228577 5.626304 lineto
  189.000000 5.878527 lineto
  189.771439 5.684018 lineto
  190.542862 5.550488 lineto
  191.314285 4.689166 lineto
  192.085724 5.999400 lineto
  192.857147 6.339664 lineto
  193.628571 4.672318 lineto
  194.400009 3.497645 lineto
  195.171432 3.128890 lineto
  195.942856 5.701104 lineto
  196.714294 6.948504 lineto
  197.485718 7.736278 lineto
  198.257141 8.121773 lineto
  199.028580 8.811072 lineto
  199.800003 7.822484 lineto
  200.571426 5.889802 lineto
  201.342865 4.458629 lineto
  202.114288 3.394159 lineto
  202.885712 3.013481 lineto
  203.657150 2.245450 lineto
  204.428574 1.897994 lineto
  205.199997 1.831142 lineto
  205.971436 1.962047 lineto
  206.742859 7.498181 lineto
  207.514282 6.599513 lineto
  208.285721 8.928447 lineto
  209.057144 8.574184 lineto
  209.828583 7.743277 lineto
  210.600006 8.648252 lineto
  211.371429 8.714628 lineto
  212.142868 22.619520 lineto
  212.914291 34.318295 lineto
  213.685715 27.062424 lineto
  214.457153 27.264816 lineto
  215.228577 38.959488 lineto
  216.000000 33.814369 lineto
  216.771439 33.708744 lineto
  217.542862 32.083778 lineto
  218.314285 39.051071 lineto
  219.085724 42.885723 lineto
  219.857147 40.633274 lineto
  220.628571 38.073891 lineto
  221.400009 45.732601 lineto
  222.171432 50.568409 lineto
  222.942856 38.731178 lineto
  223.714294 37.460232 lineto
  224.485718 35.188778 lineto
  225.257141 27.431568 lineto
  226.028580 26.351568 lineto
  226.800003 25.629265 lineto
  227.571426 35.398083 lineto
  228.342865 35.738712 lineto
  229.114288 44.882423 lineto
  229.885712 41.954113 lineto
  230.657150 45.628918 lineto
  231.428574 35.765282 lineto
  232.199997 43.891418 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [1 3.200000] 0 setdash
232.199997 43.891418 moveto   232.971436 33.630985 lineto
  233.742859 37.753128 lineto
  234.514282 38.306087 lineto
  235.285721 41.551487 lineto
  236.057144 52.762318 lineto
  236.828583 60.210648 lineto
  237.600006 60.239380 lineto
  238.371429 61.296700 lineto
  239.142868 62.983009 lineto
  239.914291 58.996510 lineto
  240.685715 56.285927 lineto
  241.457153 66.720459 lineto
  242.228577 69.970604 lineto
  243.000000 60.187534 lineto
  243.771439 60.201363 lineto
  244.542862 72.129532 lineto
  245.314285 64.302338 lineto
  246.085724 64.200165 lineto
  246.857147 67.051804 lineto
  247.628571 56.524391 lineto
  248.400009 58.219128 lineto
  249.171432 53.687664 lineto
  249.942856 53.366905 lineto
  250.714294 57.200256 lineto
  251.485718 58.982689 lineto
  252.257141 42.715080 lineto
  253.028580 45.039024 lineto
  253.800003 47.863007 lineto
  254.571426 42.329521 lineto
  255.342865 46.313858 lineto
  256.114288 40.409065 lineto
  256.885712 29.498041 lineto
  257.657135 28.470961 lineto
  258.428589 38.282761 lineto
  259.200012 44.705738 lineto
  259.971436 52.091423 lineto
  260.742859 47.576378 lineto
  261.514282 44.636833 lineto
  262.285706 48.268871 lineto
  263.057159 48.024361 lineto
  263.828583 51.853825 lineto
  264.600006 57.039768 lineto
  265.371429 53.409027 lineto
  266.142853 48.830688 lineto
  266.914276 49.669632 lineto
  267.685730 47.061436 lineto
  268.457153 47.877052 lineto
  269.228577 48.513603 lineto
  270.000000 41.464222 lineto
  270.771423 47.934502 lineto
  271.542847 34.563457 lineto
  272.314301 39.484585 lineto
  273.085724 47.263824 lineto
  273.857147 47.915710 lineto
  274.628571 47.831257 lineto
  275.399994 46.391399 lineto
  276.171448 52.876152 lineto
  276.942871 48.037537 lineto
  277.714294 55.761696 lineto
  278.485718 53.892216 lineto
  279.257141 46.221622 lineto
  280.028564 54.003674 lineto
  280.800018 52.103306 lineto
  281.571442 43.100857 lineto
  282.342865 41.626225 lineto
  283.114288 33.252552 lineto
  283.885712 30.029184 lineto
  284.657135 34.917480 lineto
  285.428589 44.042618 lineto
  286.200012 52.525154 lineto
  286.971436 51.809113 lineto
  287.742859 52.144993 lineto
  288.514282 47.418911 lineto
  289.285706 42.747047 lineto
  290.057159 50.893921 lineto
  290.828583 55.183464 lineto
  291.600006 62.446682 lineto
  292.371429 55.369873 lineto
  293.142853 48.843433 lineto
  293.914276 51.772823 lineto
  294.685730 55.030319 lineto
  295.457153 64.318321 lineto
  296.228577 63.569664 lineto
  297.000000 63.137665 lineto
  297.771423 51.167160 lineto
  298.542877 65.905487 lineto
  299.314301 51.421608 lineto
  300.085724 32.740849 lineto
  300.857147 23.149586 lineto
  301.628571 17.827171 lineto
  302.399994 15.019129 lineto
  303.171448 15.219900 lineto
  303.942871 17.637869 lineto
  304.714294 16.553894 lineto
  305.485718 13.899255 lineto
  306.257141 11.811701 lineto
  307.028564 11.650759 lineto
  307.800018 12.437150 lineto
  308.571442 10.846765 lineto
  309.342865 12.246466 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [1 3.200000] 0 setdash
309.342865 12.246466 moveto   310.114288 11.128644 lineto
  310.885712 12.679718 lineto
  311.657135 13.729911 lineto
  312.428589 12.848415 lineto
  313.200012 13.857718 lineto
  313.971436 14.361494 lineto
  314.742859 17.787989 lineto
  315.514282 19.395138 lineto
  316.285706 18.214199 lineto
  317.057159 17.020216 lineto
  317.828583 19.856470 lineto
  318.600006 21.041014 lineto
  319.371429 18.120068 lineto
  320.142853 19.319170 lineto
  320.914307 24.963120 lineto
  321.685730 19.168552 lineto
  322.457153 21.399704 lineto
  323.228577 19.301651 lineto
  324.000000 15.836645 lineto
  324.771423 13.603098 lineto
  325.542877 12.102438 lineto
  326.314301 10.995459 lineto
  327.085724 10.548166 lineto
  327.857147 29.587896 lineto
  328.628571 61.143768 lineto
  329.399994 61.259548 lineto
  330.171448 71.174812 lineto
  330.942871 70.020721 lineto
  331.714294 43.666561 lineto
  332.485718 32.498062 lineto
  333.257141 26.369711 lineto
  334.028564 23.212656 lineto
  334.800018 19.052410 lineto
  335.571442 14.832807 lineto
  336.342865 12.353645 lineto
  337.114288 15.522625 lineto
  337.885712 15.195687 lineto
  338.657135 14.870909 lineto
  339.428589 21.304058 lineto
  340.200012 16.988272 lineto
  340.971436 15.958750 lineto
  341.742859 16.684855 lineto
  342.514282 15.024529 lineto
  343.285706 16.628069 lineto
  344.057159 19.977386 lineto
  344.828583 18.723291 lineto
  345.600006 15.371036 lineto
  346.371429 36.242641 lineto
  347.142853 53.282879 lineto
  347.914307 45.789623 lineto
  348.685730 28.939032 lineto
  349.457153 14.851189 lineto
  350.228577 7.833132 lineto
  351.000000 5.310900 lineto
  351.771423 8.208713 lineto
  352.542877 12.132655 lineto
  353.314301 13.241232 lineto
  354.085724 13.563115 lineto
  354.857147 14.389337 lineto
  355.628571 15.208194 lineto
  356.399994 15.396675 lineto
  357.171448 14.697352 lineto
  357.942871 14.120611 lineto
  358.714294 14.166793 lineto
  359.485718 16.239119 lineto
  360.257141 15.296905 lineto
  361.028564 14.525115 lineto
  361.800018 14.400224 lineto
  362.571442 15.070904 lineto
  363.342865 15.005758 lineto
  364.114288 15.146093 lineto
  364.885712 15.273188 lineto
  365.657135 15.711970 lineto
  366.428589 14.862593 lineto
  367.200012 14.444805 lineto
  367.971436 14.473966 lineto
  368.742859 14.181977 lineto
  369.514282 13.901307 lineto
  370.285706 14.028271 lineto
  371.057159 14.240988 lineto
  371.828583 14.176426 lineto
  372.600006 12.965573 lineto
  373.371429 15.728538 lineto
  374.142853 16.477926 lineto
  374.914307 14.626074 lineto
  375.685730 13.550609 lineto
  376.457153 13.431636 lineto
  377.228577 13.143990 lineto
  378.000000 14.162666 lineto
  378.771423 14.361560 lineto
  379.542877 14.577927 lineto
  380.314301 14.216602 lineto
  381.085724 14.223860 lineto
  381.857147 13.834109 lineto
  382.628571 13.232031 lineto
  383.399994 12.950950 lineto
  384.171448 13.191249 lineto
  384.942871 13.355561 lineto
  385.714294 11.374755 lineto
  386.485718 10.109232 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [1 3.200000] 0 setdash
386.485718 10.109232 moveto   387.257141 9.385330 lineto
  388.028564 8.891791 lineto
  388.800018 8.868809 lineto
  389.571442 8.674387 lineto
  390.342865 8.661427 lineto
  391.114288 8.952509 lineto
  391.885712 8.546990 lineto
  392.657135 8.806212 lineto
  393.428589 9.065348 lineto
  394.200012 9.224194 lineto
  394.971436 9.305345 lineto
  395.742859 9.291478 lineto
  396.514282 9.682783 lineto
  397.285736 10.090612 lineto
  398.057159 10.058234 lineto
  398.828583 9.693346 lineto
  399.600006 9.984103 lineto
  400.371429 9.850141 lineto
  401.142853 9.769961 lineto
  401.914307 9.816336 lineto
  402.685730 9.576706 lineto
  403.457153 9.932350 lineto
  404.228577 9.755165 lineto
  405.000000 9.932328 lineto
  405.771423 9.681185 lineto
  406.542877 9.039363 lineto
  407.314301 10.326291 lineto
  408.085724 6.713842 lineto
  408.857147 3.764988 lineto
  409.628571 2.800764 lineto
  410.399994 2.143158 lineto
  411.171448 1.904301 lineto
  411.942871 2.061441 lineto
  412.714294 1.643901 lineto
  413.485718 1.388908 lineto
  414.257141 2.118930 lineto
  415.028564 2.636690 lineto
  415.800018 2.855326 lineto
  416.571442 3.371047 lineto
  417.342865 3.329899 lineto
  418.114288 2.775708 lineto
  418.885712 3.295728 lineto
  419.657166 2.861179 lineto
  420.428589 2.976545 lineto
  421.200012 4.016088 lineto
  421.971436 3.625107 lineto
  422.742859 2.630318 lineto
  423.514282 1.803669 lineto
  424.285736 2.583447 lineto
  425.057159 2.795602 lineto
  425.828583 2.380774 lineto
  426.600006 2.314786 lineto
  427.371429 2.732033 lineto
  428.142853 2.364379 lineto
  428.914307 2.316276 lineto
  429.685730 2.713759 lineto
  430.457153 2.334074 lineto
  431.228577 1.791102 lineto
  432.000000 2.752121 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
 grestore 
 grestore 
 gsave 14.657143 86.400002 translate 0.000000 rotate
 gsave 0.000000 0.000000 0.000000 setrgbcolor
0.700000 setlinewidth  [] 0 setdash
0.000000 -2.700000 moveto   24.000000 -2.700000 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
 grestore 
/Tahoma findfont 9.000000 scalefont setfont
gsave 28.000000 0.000000 translate 0.000000 rotate
0 -5.400000 translate (Actual Traffic) dup stringwidth pop pop 0 0 moveto
show
grestore
 gsave 1.000000 0.000000 0.000000 setrgbcolor
0.700000 setlinewidth  [1 3.200000] 0 setdash
0.000000 -13.500000 moveto   24.000000 -13.500000 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
 grestore 
gsave 28.000000 -10.800000 translate 0.000000 rotate
0 -5.400000 translate (EWMA Estimate) dup stringwidth pop pop 0 0 moveto
show
grestore
 grestore 
-0.000000 -0.000000 translate
 grestore 

%%EndDocument
 @endspecial 502 x @beginspecial -36 @llx -28 @lly 440
@urx 112 @ury 2016 @rwi @setspecial
%%BeginDocument: NewFigs/sigcomm.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: jgraph
%%BoundingBox: -36 -28 440 112
%%EndComments

1 setlinecap 1 setlinejoin
0.700 setlinewidth
0.00 setgray

/Jrnd { exch cvi exch cvi dup 3 1 roll idiv mul } def
/JDEdict 8 dict def
JDEdict /mtrx matrix put
/JDE {
  JDEdict begin
  /yrad exch def
  /xrad exch def
  /savematrix mtrx currentmatrix def
  xrad yrad scale
  0 0 1 0 360 arc
  savematrix setmatrix
  end
} def
/JSTR {
  gsave 1 eq { gsave 1 setgray fill grestore } if
    exch neg exch neg translate 
    clip                        
    rotate                      
    4 dict begin
      pathbbox  /&top exch def
                /&right exch def
                /&bottom exch def
                &right sub /&width exch def
      newpath
      currentlinewidth mul round dup               
      &bottom exch Jrnd exch &top             
      4 -1 roll currentlinewidth mul setlinewidth  
      { &right exch moveto &width 0 rlineto stroke } for    
    end
  grestore
  newpath
} bind def
 gsave /Times-Roman findfont 9.000000 scalefont setfont
0.000000 0.000000 translate
0.700000 setlinewidth  gsave newpath 0.000000 0.000000 moveto 432.000000 0.000000 lineto stroke
newpath 0.000000 0.000000 moveto 0.000000 -5.000000 lineto stroke
newpath 72.000000 0.000000 moveto 72.000000 -2.000000 lineto stroke
newpath 144.000000 0.000000 moveto 144.000000 -5.000000 lineto stroke
newpath 216.000015 0.000000 moveto 216.000015 -2.000000 lineto stroke
newpath 288.000000 0.000000 moveto 288.000000 -5.000000 lineto stroke
newpath 360.000000 0.000000 moveto 360.000000 -2.000000 lineto stroke
newpath 432.000031 0.000000 moveto 432.000031 -5.000000 lineto stroke
/Tahoma findfont 9.000000 scalefont setfont
gsave 0.000000 -8.000000 translate 0.000000 rotate
0 -5.400000 translate (0) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 144.000000 -8.000000 translate 0.000000 rotate
0 -5.400000 translate (200) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 288.000000 -8.000000 translate 0.000000 rotate
0 -5.400000 translate (400) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 432.000031 -8.000000 translate 0.000000 rotate
0 -5.400000 translate (600) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 216.000000 -21.400000 translate 0.000000 rotate
0 -5.400000 translate (bin index \(bin size = 10s\)) dup stringwidth pop 2 div neg 0 moveto
show
grestore
 grestore 
0.700000 setlinewidth  gsave newpath 0.000000 0.000000 moveto 0.000000 108.000000 lineto stroke
newpath 0.000000 0.000000 moveto -5.000000 0.000000 lineto stroke
newpath 0.000000 4.320000 moveto -2.000000 4.320000 lineto stroke
newpath 0.000000 8.640000 moveto -2.000000 8.640000 lineto stroke
newpath 0.000000 12.960000 moveto -2.000000 12.960000 lineto stroke
newpath 0.000000 17.280001 moveto -2.000000 17.280001 lineto stroke
newpath 0.000000 21.600000 moveto -5.000000 21.600000 lineto stroke
newpath 0.000000 25.920000 moveto -2.000000 25.920000 lineto stroke
newpath 0.000000 30.240002 moveto -2.000000 30.240002 lineto stroke
newpath 0.000000 34.560001 moveto -2.000000 34.560001 lineto stroke
newpath 0.000000 38.880001 moveto -2.000000 38.880001 lineto stroke
newpath 0.000000 43.200001 moveto -5.000000 43.200001 lineto stroke
newpath 0.000000 47.520000 moveto -2.000000 47.520000 lineto stroke
newpath 0.000000 51.840000 moveto -2.000000 51.840000 lineto stroke
newpath 0.000000 56.160000 moveto -2.000000 56.160000 lineto stroke
newpath 0.000000 60.480003 moveto -2.000000 60.480003 lineto stroke
newpath 0.000000 64.800003 moveto -5.000000 64.800003 lineto stroke
newpath 0.000000 69.120003 moveto -2.000000 69.120003 lineto stroke
newpath 0.000000 73.440002 moveto -2.000000 73.440002 lineto stroke
newpath 0.000000 77.760002 moveto -2.000000 77.760002 lineto stroke
newpath 0.000000 82.080002 moveto -2.000000 82.080002 lineto stroke
newpath 0.000000 86.400002 moveto -5.000000 86.400002 lineto stroke
newpath 0.000000 90.720001 moveto -2.000000 90.720001 lineto stroke
newpath 0.000000 95.040001 moveto -2.000000 95.040001 lineto stroke
newpath 0.000000 99.360001 moveto -2.000000 99.360001 lineto stroke
newpath 0.000000 103.680000 moveto -2.000000 103.680000 lineto stroke
newpath 0.000000 108.000000 moveto -5.000000 108.000000 lineto stroke
/Tahoma findfont 9.000000 scalefont setfont
gsave -8.000000 0.000000 translate 0.000000 rotate
0 -2.700000 translate (0) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 21.600000 translate 0.000000 rotate
0 -2.700000 translate (50) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 43.200001 translate 0.000000 rotate
0 -2.700000 translate (100) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 64.800003 translate 0.000000 rotate
0 -2.700000 translate (150) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 86.400002 translate 0.000000 rotate
0 -2.700000 translate (200) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 108.000000 translate 0.000000 rotate
0 -2.700000 translate (250) dup stringwidth pop neg 0 moveto
show
grestore
gsave -28.960001 54.000000 translate 90.000000 rotate
0 0.000000 translate (Kbps) dup stringwidth pop 2 div neg 0 moveto
show
grestore
 grestore 
 gsave 
newpath
 0 0 moveto 0 108.000000 lineto 432.000000 108.000000 lineto 432.000000 0 lineto
  closepath clip newpath
 gsave 0.000000 0.000000 0.000000 setrgbcolor
0.700000 setlinewidth  [] 0 setdash
0.000000 0.217728 moveto   0.720000 1.842048 lineto
  1.440000 2.408832 lineto
  2.160000 0.093312 lineto
  2.880000 0.158976 lineto
  3.600000 0.000000 lineto
  4.320000 0.027648 lineto
  5.040000 0.342144 lineto
  5.760000 3.490560 lineto
  6.480000 7.157377 lineto
  7.200000 1.994112 lineto
  7.920000 2.968704 lineto
  8.640000 5.581440 lineto
  9.360001 6.538752 lineto
  10.080000 2.671488 lineto
  10.800000 10.198656 lineto
  11.520000 8.550144 lineto
  12.240001 22.253185 lineto
  12.960001 38.306305 lineto
  13.680000 9.134208 lineto
  14.400001 2.578176 lineto
  15.120001 8.968320 lineto
  15.840000 4.136832 lineto
  16.560001 1.361664 lineto
  17.280001 12.728449 lineto
  18.000000 1.479168 lineto
  18.720001 1.638144 lineto
  19.440001 0.508032 lineto
  20.160000 3.742848 lineto
  20.880001 10.184833 lineto
  21.600000 12.711168 lineto
  22.320002 4.461696 lineto
  23.040001 2.142720 lineto
  23.760000 2.263680 lineto
  24.480001 1.171584 lineto
  25.200001 10.219393 lineto
  25.920002 6.459264 lineto
  26.640001 5.992704 lineto
  27.360001 10.592641 lineto
  28.080002 6.448896 lineto
  28.800001 5.526144 lineto
  29.520000 7.050240 lineto
  30.240002 3.663360 lineto
  30.960001 2.695680 lineto
  31.680000 3.469824 lineto
  32.400002 3.182976 lineto
  33.120003 5.263488 lineto
  33.840000 8.650369 lineto
  34.560001 10.692864 lineto
  35.280003 9.859968 lineto
  36.000000 19.816706 lineto
  36.720001 12.158208 lineto
  37.440002 12.728449 lineto
  38.160000 18.807552 lineto
  38.880001 53.187843 lineto
  39.600002 28.114561 lineto
  40.320000 15.973633 lineto
  41.040001 23.984640 lineto
  41.760002 22.502018 lineto
  42.480003 27.236736 lineto
  43.200001 26.562817 lineto
  43.920002 43.960323 lineto
  44.640003 39.194496 lineto
  45.360001 33.958656 lineto
  46.080002 28.273537 lineto
  46.800003 19.961857 lineto
  47.520000 15.054337 lineto
  48.240002 16.284672 lineto
  48.960003 15.952897 lineto
  49.680000 7.713793 lineto
  50.400002 6.317568 lineto
  51.120003 17.024258 lineto
  51.840004 10.326528 lineto
  52.560001 14.059008 lineto
  53.280003 6.016896 lineto
  54.000004 11.760769 lineto
  54.720001 10.454401 lineto
  55.440002 6.089472 lineto
  56.160004 10.761985 lineto
  56.880001 5.380992 lineto
  57.600002 9.649153 lineto
  58.320004 3.338496 lineto
  59.040001 12.002688 lineto
  59.760002 19.471104 lineto
  60.480003 6.562944 lineto
  61.200001 4.046976 lineto
  61.920002 6.763392 lineto
  62.640003 7.489152 lineto
  63.360001 2.712960 lineto
  64.080002 1.800576 lineto
  64.800003 3.749760 lineto
  65.520004 4.506624 lineto
  66.240005 4.955904 lineto
  66.959999 7.482240 lineto
  67.680000 2.118528 lineto
  68.400002 3.580416 lineto
  69.120003 5.107968 lineto
  69.840004 4.413312 lineto
  70.560005 4.489344 lineto
  71.280006 4.475520 lineto
  72.000000 5.681664 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
72.000000 5.681664 moveto   72.720001 7.475328 lineto
  73.440002 6.220800 lineto
  74.160004 6.386688 lineto
  74.880005 4.247424 lineto
  75.600006 5.325696 lineto
  76.320000 6.597504 lineto
  77.040001 6.725376 lineto
  77.760002 3.525120 lineto
  78.480003 6.251904 lineto
  79.200005 4.745088 lineto
  79.920006 4.147200 lineto
  80.639999 4.150656 lineto
  81.360001 5.868288 lineto
  82.080002 4.990464 lineto
  82.800003 3.849984 lineto
  83.520004 5.228928 lineto
  84.240005 3.303936 lineto
  84.960007 4.679424 lineto
  85.680000 9.123840 lineto
  86.400002 10.164096 lineto
  87.120003 9.504001 lineto
  87.840004 8.830080 lineto
  88.560005 9.891072 lineto
  89.280006 23.735809 lineto
  90.000000 18.054144 lineto
  90.720001 4.952448 lineto
  91.440002 26.217216 lineto
  92.160004 6.704640 lineto
  92.880005 10.056960 lineto
  93.600006 3.991680 lineto
  94.320007 7.499520 lineto
  95.040001 7.178112 lineto
  95.760002 5.840641 lineto
  96.480003 4.786560 lineto
  97.200005 5.177088 lineto
  97.920006 10.768896 lineto
  98.640007 13.727232 lineto
  99.360001 11.238913 lineto
  100.080002 10.447488 lineto
  100.800003 30.139776 lineto
  101.520004 6.594048 lineto
  102.240005 9.922176 lineto
  102.960007 6.241536 lineto
  103.680008 6.518016 lineto
  104.400002 48.767616 lineto
  105.120003 31.905794 lineto
  105.840004 64.143356 lineto
  106.560005 11.660544 lineto
  107.280006 5.799168 lineto
  108.000008 14.846976 lineto
  108.720001 90.574852 lineto
  109.440002 29.911680 lineto
  110.160004 27.326593 lineto
  110.880005 5.446656 lineto
  111.600006 6.960384 lineto
  112.320007 2.740608 lineto
  113.040001 3.193344 lineto
  113.760002 2.363904 lineto
  114.480003 2.602368 lineto
  115.200005 4.779648 lineto
  115.920006 3.155328 lineto
  116.640007 8.273664 lineto
  117.360008 28.080000 lineto
  118.080002 29.728514 lineto
  118.800003 27.986687 lineto
  119.520004 11.522305 lineto
  120.240005 17.373312 lineto
  120.960007 8.111232 lineto
  121.680008 8.304769 lineto
  122.400002 5.633280 lineto
  123.120003 11.771136 lineto
  123.840004 36.104832 lineto
  124.560005 11.684736 lineto
  125.280006 14.891905 lineto
  126.000008 13.170816 lineto
  126.720001 17.318016 lineto
  127.440002 16.578432 lineto
  128.160004 7.188480 lineto
  128.880005 10.907136 lineto
  129.600006 10.613377 lineto
  130.320007 10.357633 lineto
  131.040009 8.218369 lineto
  131.760010 11.111040 lineto
  132.480011 15.863041 lineto
  133.200012 9.483264 lineto
  133.919998 10.350719 lineto
  134.639999 13.229568 lineto
  135.360001 14.639617 lineto
  136.080002 11.854080 lineto
  136.800003 20.891521 lineto
  137.520004 16.212097 lineto
  138.240005 22.201344 lineto
  138.960007 13.803265 lineto
  139.680008 14.152320 lineto
  140.400009 11.753857 lineto
  141.120010 10.018944 lineto
  141.840012 8.812800 lineto
  142.560013 10.492416 lineto
  143.279999 14.300928 lineto
  144.000000 25.304832 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
144.000000 25.304832 moveto   144.720001 36.384769 lineto
  145.440002 21.879936 lineto
  146.160004 9.849600 lineto
  146.880005 8.318592 lineto
  147.600006 33.201794 lineto
  148.320007 9.341569 lineto
  149.040009 44.064003 lineto
  149.760010 21.852289 lineto
  150.480011 6.151680 lineto
  151.200012 15.600384 lineto
  151.920013 8.532865 lineto
  152.639999 14.121216 lineto
  153.360001 27.976322 lineto
  154.080002 22.647169 lineto
  154.800003 18.043777 lineto
  155.520004 37.193474 lineto
  156.240005 21.582720 lineto
  156.960007 14.045185 lineto
  157.680008 22.750849 lineto
  158.400009 28.301186 lineto
  159.120010 45.346180 lineto
  159.840012 28.456705 lineto
  160.560013 23.386753 lineto
  161.279999 23.725439 lineto
  162.000000 15.586561 lineto
  162.720001 4.416768 lineto
  163.440002 6.708096 lineto
  164.160004 4.475520 lineto
  164.880005 6.977664 lineto
  165.600006 8.733312 lineto
  166.320007 21.174911 lineto
  167.040009 26.925695 lineto
  167.760010 19.084032 lineto
  168.480011 16.191360 lineto
  169.200012 26.718336 lineto
  169.920013 19.294849 lineto
  170.639999 22.450176 lineto
  171.360001 16.381439 lineto
  172.080002 34.363007 lineto
  172.800003 35.679745 lineto
  173.520004 27.751680 lineto
  174.240005 21.434113 lineto
  174.960007 18.593281 lineto
  175.680008 27.775871 lineto
  176.400009 20.691072 lineto
  177.120010 12.517632 lineto
  177.840012 28.263170 lineto
  178.560013 24.001921 lineto
  179.280014 19.536768 lineto
  180.000000 33.989761 lineto
  180.720001 20.729090 lineto
  181.440002 18.347904 lineto
  182.160004 12.116736 lineto
  182.880005 20.255617 lineto
  183.600006 14.124672 lineto
  184.320007 7.012224 lineto
  185.040009 13.195008 lineto
  185.760010 31.815937 lineto
  186.480011 21.389185 lineto
  187.200012 28.885248 lineto
  187.920013 14.767488 lineto
  188.640015 19.592066 lineto
  189.360001 38.081665 lineto
  190.080002 38.344322 lineto
  190.800003 19.253376 lineto
  191.520004 39.702530 lineto
  192.240005 39.294720 lineto
  192.960007 45.055874 lineto
  193.680008 23.887873 lineto
  194.400009 25.729921 lineto
  195.120010 20.466433 lineto
  195.840012 48.553345 lineto
  196.560013 44.661892 lineto
  197.280014 56.536701 lineto
  198.000015 35.790337 lineto
  198.720001 43.155075 lineto
  199.440002 35.804161 lineto
  200.160004 32.870014 lineto
  200.880005 28.097281 lineto
  201.600006 41.430531 lineto
  202.320007 32.676479 lineto
  203.040009 30.354050 lineto
  203.760010 24.074497 lineto
  204.480011 32.946049 lineto
  205.200012 23.569921 lineto
  205.920013 37.490688 lineto
  206.640015 30.868994 lineto
  207.360016 61.323265 lineto
  208.080002 41.330303 lineto
  208.800003 8.069760 lineto
  209.520004 8.888832 lineto
  210.240005 6.811776 lineto
  210.960007 15.911425 lineto
  211.680008 10.457856 lineto
  212.400009 9.410688 lineto
  213.120010 7.057152 lineto
  213.840012 11.809153 lineto
  214.560013 8.090496 lineto
  215.280014 10.927872 lineto
  216.000015 14.370049 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
216.000015 14.370049 moveto   216.720001 16.025473 lineto
  217.440002 8.968320 lineto
  218.160004 17.224705 lineto
  218.880005 5.889024 lineto
  219.600006 14.052096 lineto
  220.320007 14.822784 lineto
  221.040009 11.425536 lineto
  221.760010 9.293184 lineto
  222.480011 3.846528 lineto
  223.200012 5.533056 lineto
  223.920013 18.862848 lineto
  224.640015 5.629824 lineto
  225.360016 1.378944 lineto
  226.080002 0.698112 lineto
  226.800003 1.921536 lineto
  227.520004 4.755456 lineto
  228.240005 6.130944 lineto
  228.960007 10.689408 lineto
  229.680008 9.545472 lineto
  230.400009 5.768064 lineto
  231.120010 6.130944 lineto
  231.840012 7.043329 lineto
  232.560013 6.269184 lineto
  233.280014 8.201088 lineto
  234.000015 11.021184 lineto
  234.720016 6.500736 lineto
  235.440002 8.785152 lineto
  236.160004 11.660544 lineto
  236.880005 9.189504 lineto
  237.600006 4.029696 lineto
  238.320007 4.230144 lineto
  239.040009 2.792448 lineto
  239.760010 2.412288 lineto
  240.480011 2.477952 lineto
  241.200012 3.176064 lineto
  241.920013 5.114880 lineto
  242.640015 4.354560 lineto
  243.360016 3.037824 lineto
  244.080017 2.270592 lineto
  244.800003 3.276288 lineto
  245.520004 3.151872 lineto
  246.240005 2.536704 lineto
  246.960007 13.146624 lineto
  247.680008 9.873793 lineto
  248.400009 2.560896 lineto
  249.120010 2.623104 lineto
  249.840012 2.744064 lineto
  250.560013 1.921536 lineto
  251.280014 2.636928 lineto
  252.000015 2.557440 lineto
  252.720016 2.083968 lineto
  253.440002 2.827008 lineto
  254.160004 3.411072 lineto
  254.880005 9.410688 lineto
  255.600006 6.725376 lineto
  256.320007 3.248640 lineto
  257.040009 3.452544 lineto
  257.760010 3.283200 lineto
  258.480011 3.649536 lineto
  259.200012 3.659904 lineto
  259.920013 5.187456 lineto
  260.640015 4.154112 lineto
  261.360016 3.466368 lineto
  262.080017 2.239488 lineto
  262.800018 1.759104 lineto
  263.520020 3.373056 lineto
  264.240021 6.756480 lineto
  264.960022 17.784576 lineto
  265.680023 25.481089 lineto
  266.400024 29.054592 lineto
  267.120026 26.414209 lineto
  267.839996 41.762302 lineto
  268.559998 22.678272 lineto
  269.279999 8.764417 lineto
  270.000000 8.169985 lineto
  270.720001 9.939456 lineto
  271.440002 25.432705 lineto
  272.160004 47.696255 lineto
  272.880005 44.782848 lineto
  273.600006 32.524418 lineto
  274.320007 17.041536 lineto
  275.040009 27.834625 lineto
  275.760010 20.269440 lineto
  276.480011 32.717953 lineto
  277.200012 32.707584 lineto
  277.920013 42.284161 lineto
  278.640015 28.221699 lineto
  279.360016 23.366016 lineto
  280.080017 26.203392 lineto
  280.800018 30.188160 lineto
  281.520020 24.240385 lineto
  282.240021 29.040768 lineto
  282.960022 20.183041 lineto
  283.680023 28.028160 lineto
  284.400024 21.361538 lineto
  285.120026 15.268609 lineto
  285.839996 13.523329 lineto
  286.559998 13.353985 lineto
  287.279999 15.752449 lineto
  288.000000 15.517440 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
288.000000 15.517440 moveto   288.720001 27.952129 lineto
  289.440002 50.343555 lineto
  290.160004 32.406914 lineto
  290.880005 27.965952 lineto
  291.600006 24.817537 lineto
  292.320007 17.670528 lineto
  293.040009 22.318850 lineto
  293.760010 16.965504 lineto
  294.480011 21.109247 lineto
  295.200012 27.361153 lineto
  295.920013 31.183489 lineto
  296.640015 24.115969 lineto
  297.360016 31.290625 lineto
  298.080017 34.684418 lineto
  298.800018 19.609344 lineto
  299.520020 16.073856 lineto
  300.240021 28.525824 lineto
  300.960022 22.146049 lineto
  301.680023 26.787457 lineto
  302.400024 17.159040 lineto
  303.120026 20.995199 lineto
  303.840027 22.730114 lineto
  304.559998 22.916737 lineto
  305.279999 28.515459 lineto
  306.000000 21.040129 lineto
  306.720001 16.333055 lineto
  307.440002 20.556288 lineto
  308.160004 31.283712 lineto
  308.880005 20.072449 lineto
  309.600006 37.331715 lineto
  310.320007 30.779137 lineto
  311.040009 47.520000 lineto
  311.760010 40.808449 lineto
  312.480011 30.136322 lineto
  313.200012 46.946304 lineto
  313.920013 34.048515 lineto
  314.640015 35.866371 lineto
  315.360016 37.376640 lineto
  316.080017 43.403904 lineto
  316.800018 51.480576 lineto
  317.520020 46.462467 lineto
  318.240021 33.910275 lineto
  318.960022 36.564480 lineto
  319.680023 37.183105 lineto
  320.400024 36.529919 lineto
  321.120026 21.714048 lineto
  321.840027 27.803520 lineto
  322.559998 55.233795 lineto
  323.279999 50.343555 lineto
  324.000000 56.806274 lineto
  324.720001 53.084160 lineto
  325.440002 58.800385 lineto
  326.160004 43.607811 lineto
  326.880005 35.527679 lineto
  327.600006 43.117058 lineto
  328.320007 34.884865 lineto
  329.040009 42.356735 lineto
  329.760010 56.889217 lineto
  330.480011 33.201794 lineto
  331.200012 32.565891 lineto
  331.920013 22.453634 lineto
  332.640015 32.590080 lineto
  333.360016 36.740734 lineto
  334.080017 28.836864 lineto
  334.800018 22.308481 lineto
  335.520020 35.150974 lineto
  336.240021 32.690304 lineto
  336.960022 35.862911 lineto
  337.680023 28.418688 lineto
  338.400024 38.990593 lineto
  339.120026 35.292671 lineto
  339.840027 35.140610 lineto
  340.560028 34.753536 lineto
  341.279999 27.254017 lineto
  342.000000 32.206467 lineto
  342.720001 23.815296 lineto
  343.440002 22.197887 lineto
  344.160004 39.208321 lineto
  344.880005 38.859268 lineto
  345.600006 38.240639 lineto
  346.320007 75.993988 lineto
  347.040009 56.529793 lineto
  347.760010 40.905220 lineto
  348.480011 45.311619 lineto
  349.200012 46.030464 lineto
  349.920013 29.123713 lineto
  350.640015 39.626495 lineto
  351.360016 20.127745 lineto
  352.080017 20.874241 lineto
  352.800018 37.387009 lineto
  353.520020 43.414272 lineto
  354.240021 23.348736 lineto
  354.960022 37.069057 lineto
  355.680023 54.335236 lineto
  356.400024 29.759617 lineto
  357.120026 27.150337 lineto
  357.840027 33.302017 lineto
  358.560028 35.959679 lineto
  359.280029 33.499008 lineto
  360.000000 39.115009 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
360.000000 39.115009 moveto   360.720001 42.211586 lineto
  361.440002 32.247936 lineto
  362.160004 29.313793 lineto
  362.880005 11.238913 lineto
  363.600006 20.131201 lineto
  364.320007 26.262144 lineto
  365.040009 26.580097 lineto
  365.760010 25.484545 lineto
  366.480011 20.024065 lineto
  367.200012 20.172672 lineto
  367.920013 16.747778 lineto
  368.640015 12.559105 lineto
  369.360016 14.857344 lineto
  370.080017 21.928320 lineto
  370.800018 47.810303 lineto
  371.520020 30.008448 lineto
  372.240021 21.057407 lineto
  372.960022 30.706562 lineto
  373.680023 23.041151 lineto
  374.400024 30.672001 lineto
  375.120026 33.540482 lineto
  375.840027 44.575489 lineto
  376.560028 48.121346 lineto
  377.280029 63.514370 lineto
  378.000000 29.296515 lineto
  378.720001 51.836544 lineto
  379.440002 23.718529 lineto
  380.160004 17.947008 lineto
  380.880005 17.238527 lineto
  381.600006 16.941313 lineto
  382.320007 25.377409 lineto
  383.040009 19.702658 lineto
  383.760010 26.307074 lineto
  384.480011 23.065344 lineto
  385.200012 12.921985 lineto
  385.920013 12.545280 lineto
  386.640015 14.639617 lineto
  387.360016 14.895360 lineto
  388.080017 27.613440 lineto
  388.800018 23.742720 lineto
  389.520020 12.704257 lineto
  390.240021 17.998850 lineto
  390.960022 20.684160 lineto
  391.680023 26.213760 lineto
  392.400024 13.174273 lineto
  393.120026 12.047617 lineto
  393.840027 20.269440 lineto
  394.560028 23.559553 lineto
  395.280029 27.150337 lineto
  396.000031 15.614209 lineto
  396.720001 17.373312 lineto
  397.440002 13.032576 lineto
  398.160004 15.016319 lineto
  398.880005 17.103745 lineto
  399.600006 22.844162 lineto
  400.320007 14.439168 lineto
  401.040009 15.337729 lineto
  401.760010 23.787649 lineto
  402.480011 15.603840 lineto
  403.200012 14.069377 lineto
  403.920013 12.648961 lineto
  404.640015 19.467648 lineto
  405.360016 20.027521 lineto
  406.080017 15.894144 lineto
  406.800018 13.219200 lineto
  407.520020 10.526977 lineto
  408.240021 5.536512 lineto
  408.960022 5.007744 lineto
  409.680023 1.963008 lineto
  410.400024 4.129920 lineto
  411.120026 6.835968 lineto
  411.840027 8.301312 lineto
  412.560028 16.042753 lineto
  413.280029 21.648384 lineto
  414.000031 30.360960 lineto
  414.720032 20.366209 lineto
  415.440002 12.559105 lineto
  416.160004 7.582464 lineto
  416.880005 17.093376 lineto
  417.600006 17.100288 lineto
  418.320007 27.952129 lineto
  419.040009 17.400959 lineto
  419.760010 11.052288 lineto
  420.480011 4.247424 lineto
  421.200012 6.853248 lineto
  421.920013 9.006336 lineto
  422.640015 20.169216 lineto
  423.360016 6.058368 lineto
  424.080017 7.727616 lineto
  424.800018 13.468033 lineto
  425.520020 9.389953 lineto
  426.240021 18.600193 lineto
  426.960022 29.099522 lineto
  427.680023 29.020033 lineto
  428.400024 51.048576 lineto
  429.120026 33.219074 lineto
  429.840027 25.183874 lineto
  430.560028 21.261312 lineto
  431.280029 22.135681 lineto
  432.000031 26.393473 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [] 0 setdash
432.000031 26.393473 moveto stroke
0.700000 setlinewidth  [] 0 setdash
 grestore 
 gsave 1.000000 0.000000 0.000000 setrgbcolor
0.700000 setlinewidth  [1 3.200000] 0 setdash
0.720000 0.108864 moveto   1.440000 0.975456 lineto
  2.160000 1.692144 lineto
  2.880000 0.892728 lineto
  3.600000 0.525852 lineto
  4.320000 0.262926 lineto
  5.040000 0.145287 lineto
  5.760000 0.243715 lineto
  6.480000 1.867139 lineto
  7.200000 4.512240 lineto
  7.920000 3.253185 lineto
  8.640000 3.110945 lineto
  9.360001 4.346179 lineto
  10.080000 5.442466 lineto
  10.800000 4.056981 lineto
  11.520000 7.127827 lineto
  12.240001 7.838985 lineto
  12.960001 15.046085 lineto
  13.680000 26.676174 lineto
  14.400001 17.905191 lineto
  15.120001 10.241683 lineto
  15.840000 9.605002 lineto
  16.560001 6.870917 lineto
  17.280001 4.116291 lineto
  18.000000 8.422359 lineto
  18.720001 4.950763 lineto
  19.440001 3.294458 lineto
  20.160000 1.901245 lineto
  20.880001 2.822044 lineto
  21.600000 6.503458 lineto
  22.320002 9.607291 lineto
  23.040001 7.034515 lineto
  23.760000 4.588618 lineto
  24.480001 3.426145 lineto
  25.200001 2.298867 lineto
  25.920002 6.259119 lineto
  26.640001 6.359213 lineto
  27.360001 6.175959 lineto
  28.080002 8.384299 lineto
  28.800001 7.416576 lineto
  29.520000 6.471360 lineto
  30.240002 6.760800 lineto
  30.960001 5.212080 lineto
  31.680000 3.953880 lineto
  32.400002 3.711852 lineto
  33.120003 3.447416 lineto
  33.840000 4.355467 lineto
  34.560001 6.502896 lineto
  35.280003 8.597880 lineto
  36.000000 9.228946 lineto
  36.720001 14.522803 lineto
  37.440002 13.340506 lineto
  38.160000 13.034477 lineto
  38.880001 15.921014 lineto
  39.600002 34.554428 lineto
  40.320000 31.334517 lineto
  41.040001 23.654074 lineto
  41.760002 23.819359 lineto
  42.480003 23.160688 lineto
  43.200001 25.198690 lineto
  43.920002 25.880775 lineto
  44.640003 34.920547 lineto
  45.360001 37.057526 lineto
  46.080002 35.508068 lineto
  46.800003 31.890800 lineto
  47.520000 25.926352 lineto
  48.240002 20.490322 lineto
  48.960003 18.387520 lineto
  49.680000 17.170187 lineto
  50.400002 12.441989 lineto
  51.120003 9.379800 lineto
  51.840004 13.202006 lineto
  52.560001 11.764267 lineto
  53.280003 12.911659 lineto
  54.000004 9.464256 lineto
  54.720001 10.612513 lineto
  55.440002 10.533456 lineto
  56.160004 8.311464 lineto
  56.880001 9.536746 lineto
  57.600002 7.458869 lineto
  58.320004 8.553988 lineto
  59.040001 5.946264 lineto
  59.760002 8.974455 lineto
  60.480003 14.222779 lineto
  61.200001 10.392883 lineto
  61.920002 7.219929 lineto
  62.640003 6.991661 lineto
  63.360001 7.240407 lineto
  64.080002 4.976683 lineto
  64.800003 3.388630 lineto
  65.520004 3.569193 lineto
  66.240005 4.037908 lineto
  66.959999 4.496904 lineto
  67.680000 5.989594 lineto
  68.400002 4.054052 lineto
  69.120003 3.817234 lineto
  69.840004 4.462604 lineto
  70.560005 4.437936 lineto
  71.280006 4.463640 lineto
  72.000000 4.469602 lineto
  72.720001 5.075611 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [1 3.200000] 0 setdash
72.720001 5.075611 moveto   73.440002 6.275491 lineto
  74.160004 6.248146 lineto
  74.880005 6.317395 lineto
  75.600006 5.282410 lineto
  76.320000 5.304053 lineto
  77.040001 5.950800 lineto
  77.760002 6.338088 lineto
  78.480003 4.931582 lineto
  79.200005 5.591765 lineto
  79.920006 5.168405 lineto
  80.639999 4.657824 lineto
  81.360001 4.404240 lineto
  82.080002 5.136264 lineto
  82.800003 5.063343 lineto
  83.520004 4.456685 lineto
  84.240005 4.842807 lineto
  84.960007 4.073367 lineto
  85.680000 4.376376 lineto
  86.400002 6.750130 lineto
  87.120003 8.457091 lineto
  87.840004 8.980546 lineto
  88.560005 8.905334 lineto
  89.280006 9.398204 lineto
  90.000000 16.566984 lineto
  90.720001 17.310587 lineto
  91.440002 11.131517 lineto
  92.160004 18.674366 lineto
  92.880005 12.689482 lineto
  93.600006 11.373221 lineto
  94.320007 7.682473 lineto
  95.040001 7.590974 lineto
  95.760002 7.384565 lineto
  96.480003 6.612581 lineto
  97.200005 5.699592 lineto
  97.920006 5.438319 lineto
  98.640007 8.103629 lineto
  99.360001 10.915431 lineto
  100.080002 11.077171 lineto
  100.800003 10.762330 lineto
  101.520004 20.451054 lineto
  102.240005 13.522551 lineto
  102.960007 11.722363 lineto
  103.680008 8.981928 lineto
  104.400002 7.749994 lineto
  105.120003 28.258806 lineto
  105.840004 30.082279 lineto
  106.560005 47.112625 lineto
  107.280006 29.386669 lineto
  108.000008 17.592941 lineto
  108.720001 16.219959 lineto
  109.440002 53.397362 lineto
  110.160004 41.654522 lineto
  110.880005 34.490578 lineto
  111.600006 19.968596 lineto
  112.320007 13.464490 lineto
  113.040001 8.102549 lineto
  113.760002 5.647968 lineto
  114.480003 4.005928 lineto
  115.200005 3.304148 lineto
  115.920006 4.041896 lineto
  116.640007 3.598612 lineto
  117.360008 5.936155 lineto
  118.080002 17.008057 lineto
  118.800003 23.368305 lineto
  119.520004 25.677475 lineto
  120.240005 18.599892 lineto
  120.960007 17.986624 lineto
  121.680008 13.048905 lineto
  122.400002 10.676837 lineto
  123.120003 8.155081 lineto
  123.840004 9.963087 lineto
  124.560005 23.033981 lineto
  125.280006 17.359360 lineto
  126.000008 16.125610 lineto
  126.720001 14.648214 lineto
  127.440002 15.983137 lineto
  128.160004 16.280785 lineto
  128.880005 11.734632 lineto
  129.600006 11.320863 lineto
  130.320007 10.967141 lineto
  131.040009 10.662365 lineto
  131.760010 9.440367 lineto
  132.480011 10.275725 lineto
  133.200012 13.069383 lineto
  133.919998 11.276323 lineto
  134.639999 10.813521 lineto
  135.360001 12.021523 lineto
  136.080002 13.330569 lineto
  136.800003 12.592324 lineto
  137.520004 16.741945 lineto
  138.240005 16.476999 lineto
  138.960007 19.339172 lineto
  139.680008 16.571217 lineto
  140.400009 15.361791 lineto
  141.120010 13.557802 lineto
  141.840012 11.788374 lineto
  142.560013 10.300609 lineto
  143.279999 10.396512 lineto
  144.000000 12.348720 lineto
  144.720001 18.826777 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [1 3.200000] 0 setdash
144.720001 18.826777 moveto   145.440002 27.605751 lineto
  146.160004 24.742844 lineto
  146.880005 17.296244 lineto
  147.600006 12.807418 lineto
  148.320007 23.004606 lineto
  149.040009 16.173086 lineto
  149.760010 30.118525 lineto
  150.480011 25.985407 lineto
  151.200012 16.068544 lineto
  151.920013 15.834485 lineto
  152.639999 12.183653 lineto
  153.360001 13.152456 lineto
  154.080002 20.564367 lineto
  154.800003 21.605789 lineto
  155.520004 19.824783 lineto
  156.240005 28.509108 lineto
  156.960007 25.045935 lineto
  157.680008 19.545538 lineto
  158.400009 21.148214 lineto
  159.120010 24.724701 lineto
  159.840012 35.035419 lineto
  160.560013 31.746082 lineto
  161.279999 27.566397 lineto
  162.000000 25.645941 lineto
  162.720001 20.616251 lineto
  163.440002 12.516509 lineto
  164.160004 9.612303 lineto
  164.880005 7.043890 lineto
  165.600006 7.010799 lineto
  166.320007 7.872034 lineto
  167.040009 14.523496 lineto
  167.760010 20.724596 lineto
  168.480011 19.904314 lineto
  169.200012 18.047838 lineto
  169.920013 22.383087 lineto
  170.639999 20.838945 lineto
  171.360001 21.644583 lineto
  172.080002 19.013012 lineto
  172.800003 26.688011 lineto
  173.520004 31.183876 lineto
  174.240005 29.467758 lineto
  174.960007 25.450935 lineto
  175.680008 22.022108 lineto
  176.400009 24.899012 lineto
  177.120010 22.795042 lineto
  177.840012 17.656317 lineto
  178.560013 22.959763 lineto
  179.280014 23.480843 lineto
  180.000000 21.508804 lineto
  180.720001 27.749260 lineto
  181.440002 24.239174 lineto
  182.160004 21.293539 lineto
  182.880005 16.705137 lineto
  183.600006 18.480400 lineto
  184.320007 16.302515 lineto
  185.040009 11.657391 lineto
  185.760010 12.426178 lineto
  186.480011 22.121078 lineto
  187.200012 21.755133 lineto
  187.920013 25.320169 lineto
  188.640015 20.043850 lineto
  189.360001 19.817957 lineto
  190.080002 28.949789 lineto
  190.800003 33.647057 lineto
  191.520004 26.450239 lineto
  192.240005 33.076382 lineto
  192.960007 36.185532 lineto
  193.680008 40.620705 lineto
  194.400009 32.254288 lineto
  195.120010 28.992125 lineto
  195.840012 24.729279 lineto
  196.560013 36.641293 lineto
  197.280014 40.651588 lineto
  198.000015 48.593952 lineto
  198.720001 42.192230 lineto
  199.440002 42.673653 lineto
  200.160004 39.238907 lineto
  200.880005 36.054459 lineto
  201.600006 32.075871 lineto
  202.320007 36.753220 lineto
  203.040009 34.714828 lineto
  203.760010 32.534439 lineto
  204.480011 28.304468 lineto
  205.200012 30.625257 lineto
  205.920013 27.097589 lineto
  206.640015 32.294159 lineto
  207.360016 31.581577 lineto
  208.080002 46.452530 lineto
  208.800003 43.891201 lineto
  209.520004 25.980568 lineto
  210.240005 17.434700 lineto
  210.960007 12.123217 lineto
  211.680008 14.017320 lineto
  212.400009 12.237610 lineto
  213.120010 10.824149 lineto
  213.840012 8.940629 lineto
  214.560013 10.374912 lineto
  215.280014 9.232704 lineto
  216.000015 10.080288 lineto
  216.720001 12.225168 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [1 3.200000] 0 setdash
216.720001 12.225168 moveto   217.440002 14.125319 lineto
  218.160004 11.546799 lineto
  218.880005 14.385773 lineto
  219.600006 10.137399 lineto
  220.320007 12.094748 lineto
  221.040009 13.458744 lineto
  221.760010 12.442162 lineto
  222.480011 10.867652 lineto
  223.200012 7.357090 lineto
  223.920013 6.445095 lineto
  224.640015 12.653972 lineto
  225.360016 9.141898 lineto
  226.080002 5.260421 lineto
  226.800003 2.979266 lineto
  227.520004 2.450399 lineto
  228.240005 3.602927 lineto
  228.960007 4.866955 lineto
  229.680008 7.778160 lineto
  230.400009 8.661817 lineto
  231.120010 7.214962 lineto
  231.840012 6.672931 lineto
  232.560013 6.858130 lineto
  233.280014 6.563678 lineto
  234.000015 7.382362 lineto
  234.720016 9.201773 lineto
  235.440002 7.851254 lineto
  236.160004 8.318204 lineto
  236.880005 9.989395 lineto
  237.600006 9.589450 lineto
  238.320007 6.809573 lineto
  239.040009 5.519837 lineto
  239.760010 4.156151 lineto
  240.480011 3.284220 lineto
  241.200012 2.881086 lineto
  241.920013 3.028575 lineto
  242.640015 4.071730 lineto
  243.360016 4.213145 lineto
  244.080017 3.625482 lineto
  244.800003 2.948037 lineto
  245.520004 3.112163 lineto
  246.240005 3.132017 lineto
  246.960007 2.834361 lineto
  247.680008 7.990488 lineto
  248.400009 8.932162 lineto
  249.120010 5.746508 lineto
  249.840012 4.184810 lineto
  250.560013 3.464437 lineto
  251.280014 2.692989 lineto
  252.000015 2.664956 lineto
  252.720016 2.611198 lineto
  253.440002 2.347583 lineto
  254.160004 2.587296 lineto
  254.880005 2.999186 lineto
  255.600006 6.204946 lineto
  256.320007 6.465139 lineto
  257.040009 4.856890 lineto
  257.760010 4.154721 lineto
  258.480011 3.718958 lineto
  259.200012 3.684247 lineto
  259.920013 3.672078 lineto
  260.640015 4.429771 lineto
  261.360016 4.291938 lineto
  262.080017 3.879153 lineto
  262.800018 3.059320 lineto
  263.520020 2.409212 lineto
  264.240021 2.891134 lineto
  264.960022 4.823798 lineto
  265.680023 11.304188 lineto
  266.400024 18.392660 lineto
  267.120026 23.723625 lineto
  267.839996 25.068918 lineto
  268.559998 33.415588 lineto
  269.279999 28.046953 lineto
  270.000000 18.405664 lineto
  270.720001 13.287845 lineto
  271.440002 11.613629 lineto
  272.160004 18.523167 lineto
  272.880005 33.109734 lineto
  273.600006 38.946270 lineto
  274.320007 35.735344 lineto
  275.040009 26.388462 lineto
  275.760010 27.111544 lineto
  276.480011 23.690493 lineto
  277.200012 28.204201 lineto
  277.920013 30.455915 lineto
  278.640015 36.370041 lineto
  279.360016 32.295849 lineto
  280.080017 27.830954 lineto
  280.800018 27.017151 lineto
  281.520020 28.602678 lineto
  282.240021 26.421509 lineto
  282.960022 27.731159 lineto
  283.680023 23.957079 lineto
  284.400024 25.992619 lineto
  285.120026 23.677101 lineto
  285.839996 19.472832 lineto
  286.559998 16.498079 lineto
  287.279999 14.926032 lineto
  288.000000 15.339240 lineto
  288.720001 15.428361 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [1 3.200000] 0 setdash
288.720001 15.428361 moveto   289.440002 21.690245 lineto
  290.160004 36.016876 lineto
  290.880005 34.211895 lineto
  291.600006 31.088926 lineto
  292.320007 27.953251 lineto
  293.040009 22.811892 lineto
  293.760010 22.565348 lineto
  294.480011 19.765427 lineto
  295.200012 20.437359 lineto
  295.920013 23.899235 lineto
  296.640015 27.541384 lineto
  297.360016 25.828676 lineto
  298.080017 28.559650 lineto
  298.800018 31.622011 lineto
  299.520020 25.615700 lineto
  300.240021 20.844778 lineto
  300.960022 24.685301 lineto
  301.680023 23.415653 lineto
  302.400024 25.101576 lineto
  303.120026 21.130287 lineto
  303.840027 21.062765 lineto
  304.559998 21.896439 lineto
  305.279999 22.406588 lineto
  306.000000 25.461000 lineto
  306.720001 23.250587 lineto
  307.440002 19.791821 lineto
  308.160004 20.174055 lineto
  308.880005 25.728884 lineto
  309.600006 22.900665 lineto
  310.320007 30.116190 lineto
  311.040009 30.447662 lineto
  311.760010 38.983810 lineto
  312.480011 39.896152 lineto
  313.200012 35.016235 lineto
  313.920013 40.981247 lineto
  314.640015 37.514881 lineto
  315.360016 36.690624 lineto
  316.080017 37.033630 lineto
  316.800018 40.218769 lineto
  317.520020 45.849892 lineto
  318.240021 46.156178 lineto
  318.960022 40.033184 lineto
  319.680023 38.298832 lineto
  320.400024 37.740944 lineto
  321.120026 37.135456 lineto
  321.840027 29.424730 lineto
  322.559998 28.614124 lineto
  323.279999 41.923962 lineto
  324.000000 46.133713 lineto
  324.720001 51.470207 lineto
  325.440002 52.277187 lineto
  326.160004 55.538784 lineto
  326.880005 49.573296 lineto
  327.600006 42.550488 lineto
  328.320007 42.833752 lineto
  329.040009 38.859310 lineto
  329.760010 40.608044 lineto
  330.480011 48.748611 lineto
  331.200012 40.975201 lineto
  331.920013 36.770542 lineto
  332.640015 29.612089 lineto
  333.360016 31.101107 lineto
  334.080017 33.920898 lineto
  334.800018 31.378881 lineto
  335.520020 26.843702 lineto
  336.240021 30.997339 lineto
  336.960022 31.843801 lineto
  337.680023 33.853378 lineto
  338.400024 31.136011 lineto
  339.120026 35.063324 lineto
  339.840027 35.177975 lineto
  340.560028 35.159313 lineto
  341.279999 34.956406 lineto
  342.000000 31.105211 lineto
  342.720001 31.655836 lineto
  343.440002 27.735567 lineto
  344.160004 24.966749 lineto
  344.880005 32.087536 lineto
  345.600006 35.473381 lineto
  346.320007 36.857033 lineto
  347.040009 56.425682 lineto
  347.760010 56.477520 lineto
  348.480011 48.691586 lineto
  349.200012 47.001602 lineto
  349.920013 46.516033 lineto
  350.640015 37.819874 lineto
  351.360016 38.723186 lineto
  352.080017 29.425467 lineto
  352.800018 25.149832 lineto
  353.520020 31.268419 lineto
  354.240021 37.341347 lineto
  354.960022 30.345064 lineto
  355.680023 33.707058 lineto
  356.400024 44.021233 lineto
  357.120026 36.890381 lineto
  357.840027 32.020359 lineto
  358.560028 32.661186 lineto
  359.280029 34.310436 lineto
  360.000000 33.904701 lineto
  360.720001 36.509876 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
0.700000 setlinewidth  [1 3.200000] 0 setdash
360.720001 36.509876 moveto   361.440002 39.360729 lineto
  362.160004 35.804333 lineto
  362.880005 32.559063 lineto
  363.600006 21.898989 lineto
  364.320007 21.015072 lineto
  365.040009 23.638609 lineto
  365.760010 25.109352 lineto
  366.480011 25.296970 lineto
  367.200012 22.660517 lineto
  367.920013 21.416574 lineto
  368.640015 19.082174 lineto
  369.360016 15.820661 lineto
  370.080017 15.338982 lineto
  370.800018 18.633673 lineto
  371.520020 33.221970 lineto
  372.240021 31.615231 lineto
  372.960022 26.336319 lineto
  373.680023 28.521418 lineto
  374.400024 25.781286 lineto
  375.120026 28.226665 lineto
  375.840027 30.883551 lineto
  376.560028 37.729542 lineto
  377.280029 42.925423 lineto
  378.000000 53.219810 lineto
  378.720001 41.258202 lineto
  379.440002 46.547569 lineto
  380.160004 35.132965 lineto
  380.880005 26.539965 lineto
  381.600006 21.889269 lineto
  382.320007 19.415289 lineto
  383.040009 22.396349 lineto
  383.760010 21.049503 lineto
  384.480011 23.678267 lineto
  385.200012 23.371805 lineto
  385.920013 18.146894 lineto
  386.640015 15.346109 lineto
  387.360016 14.992863 lineto
  388.080017 14.944090 lineto
  388.800018 21.278767 lineto
  389.520020 22.510742 lineto
  390.240021 17.607498 lineto
  390.960022 17.803196 lineto
  391.680023 19.243658 lineto
  392.400024 22.728731 lineto
  393.120026 17.951502 lineto
  393.840027 14.999558 lineto
  394.560028 17.634499 lineto
  395.280029 20.597025 lineto
  396.000031 23.873659 lineto
  396.720001 19.743956 lineto
  397.440002 18.558634 lineto
  398.160004 15.795606 lineto
  398.880005 15.405941 lineto
  399.600006 16.254864 lineto
  400.320007 19.549513 lineto
  401.040009 16.994318 lineto
  401.760010 16.166044 lineto
  402.480011 19.976847 lineto
  403.200012 17.790323 lineto
  403.920013 15.929871 lineto
  404.640015 14.289394 lineto
  405.360016 16.878544 lineto
  406.080017 18.453011 lineto
  406.800018 17.173599 lineto
  407.520020 15.196378 lineto
  408.240021 12.861677 lineto
  408.960022 9.199095 lineto
  409.680023 7.103419 lineto
  410.400024 4.533235 lineto
  411.120026 4.331578 lineto
  411.840027 5.583773 lineto
  412.560028 6.942543 lineto
  413.280029 11.492626 lineto
  414.000031 16.570526 lineto
  414.720032 23.465723 lineto
  415.440002 21.915966 lineto
  416.160004 17.237534 lineto
  416.880005 12.410021 lineto
  417.600006 14.751678 lineto
  418.320007 15.925982 lineto
  419.040009 21.939077 lineto
  419.760010 19.669996 lineto
  420.480011 15.361143 lineto
  421.200012 9.804284 lineto
  421.920013 8.328788 lineto
  422.640015 8.667562 lineto
  423.360016 14.418389 lineto
  424.080017 10.238357 lineto
  424.800018 8.983008 lineto
  425.520020 11.225520 lineto
  426.240021 10.307736 lineto
  426.960022 14.453942 lineto
  427.680023 21.776731 lineto
  428.400024 25.398403 lineto
  429.120026 38.223492 lineto
  429.840027 35.721260 lineto
  430.560028 30.452589 lineto
  431.280029 25.856928 lineto
  432.000031 23.996305 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
 grestore 
 grestore 
 gsave 144.000000 86.400002 translate 0.000000 rotate
 gsave 0.000000 0.000000 0.000000 setrgbcolor
0.700000 setlinewidth  [] 0 setdash
0.000000 -2.700000 moveto   24.000000 -2.700000 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
 grestore 
/Tahoma findfont 9.000000 scalefont setfont
gsave 28.000000 0.000000 translate 0.000000 rotate
0 -5.400000 translate (Actual Traffic) dup stringwidth pop pop 0 0 moveto
show
grestore
 gsave 1.000000 0.000000 0.000000 setrgbcolor
0.700000 setlinewidth  [1 3.200000] 0 setdash
0.000000 -13.500000 moveto   24.000000 -13.500000 lineto
stroke
0.700000 setlinewidth  [] 0 setdash
 grestore 
gsave 28.000000 -10.800000 translate 0.000000 rotate
0 -5.400000 translate (EWMA Estimate) dup stringwidth pop pop 0 0 moveto
show
grestore
 grestore 
-0.000000 -0.000000 translate
 grestore 

%%EndDocument
 @endspecial 2040 817 a
SDict begin H.S end
 2040 817 a 2040 817 a
SDict begin 10.5 H.A end
 2040 817
a 2040 817 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.7) cvn H.B /DEST pdfmark
end
 2040 817 a 171 x FA(Figur)o(e)20 b(7:)2361
988 y
SDict begin H.S end
 2361 988 a 2361 988 a
SDict begin H.R end
 2361 988 a 2361 988 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.7) cvn H.B /DEST pdfmark
end
 2361
988 a FA(The)h(amount)g(of)g(traf\002c)g(sent)g(to)g(an)g(AP)g(in)f
(10-second)h(in-)2040 1075 y(ter)o(v)o(als.)j(T)-7 b(op:)23
b(At)c(a)g(W)o(iFi)e(hotspot.)22 b(Bottom:)i(At)19 b(SIGCOMM)e(2004.)
2040 1249 y FB(points)28 b(\()p Fz(i.e)o(.)p FB(,)g(all)g(\003o)n(ws)f
(are)h(inacti)n(v)o(e\).)49 b(T)-6 b(o)27 b(f)o(a)o(v)o(or)h(\003o)n
(ws)f(that)g(are)h(more)2040 1337 y(lik)o(ely)19 b(to)g(achie)n(v)o(e)h
(higher)f(throughput,)h(we)f(also)g(add)g(\()p Fz(N)3567
1351 y FE(init)3659 1337 y Fr(\000)10 b FB(1\))19 b(starting)2040
1424 y(points,)27 b(each)e(with)g(only)g(a)g(single)g(acti)n(v)o(e)g
(\003o)n(w)-5 b(.)41 b(Speci\002cally)-5 b(,)26 b(for)f(each)2040
1511 y Fz(d)20 b Ft(=)c FB(1)p Fv(;)8 b(:)g(:)g(:)g(;)g
Fz(n)p FB(,)18 b(we)g(\002nd)h(the)f(lar)o(gest)f Fz(x)3024
1484 y FE(init)3024 1536 y FH(d)3122 1511 y Fr(\024)f
Fz(x)3229 1484 y FG(\003)3229 1536 y FH(d)3283 1511 y
FB(such)j(that)f(it)g(is)f(feasible)i(for)2040 1612 y(\003o)n(w)c
Fz(d)j FB(to)d(send)g(at)g(rate)f Fz(x)2693 1585 y FE(init)2693
1638 y FH(d)2790 1612 y FB(while)g(all)g(other)h(\003o)n(ws)g(are)g
(inacti)n(v)o(e.)22 b(This)14 b(can)2040 1699 y(be)27
b(done)h(ef)n(\002ciently)f(using)g(the)g(subroutine)h
Fa(get)p FB(_)q Fa(max)p FB(_)p Fa(scaling)q FB(_)r Fa(facto)n(r)2040
1786 y FB(\(see)j(Section)2446 1787 y
SDict begin H.S end
 2446 1787 a -1
x FB(5.2)2539 1736 y
SDict begin H.R end
 2539 1736 a 2539 1786 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(subsection.5.2) cvn H.B /ANN pdfmark end
 2539 1786
a FB(\).)59 b(W)-6 b(e)30 b(then)h(select)g(the)g(\()p
Fz(N)3325 1800 y FE(init)3421 1786 y Fr(\000)15 b FB(1\))31
b(\003o)n(ws)g(with)f(the)2040 1874 y(lar)o(gest)18 b
Fz(x)2289 1847 y FE(init)2289 1899 y FH(d)2371 1874 y
FB(,)g(reduce)h(their)g(rates)f(by)h(a)f(constant)h(f)o(actor)g(\(2)f
(by)h(def)o(ault\))g(so)2040 1961 y(that)j(the)o(y)g(are)g(not)g(too)g
(close)g(to)g(the)f(boundary)j(of)e(the)g(feasible)g(solution)2040
2048 y(space,)27 b(and)f(include)f(the)g(resulted)h(traf)n(\002c)e
(assignments)i(as)f(our)g(starting)2040 2135 y(points.)30
b(In)21 b(our)h(e)o(xperiments,)g(we)f(use)g Fz(N)3155
2149 y FE(init)3254 2135 y Ft(=)d FB(4)j(starting)g(points.)30
b(Ho)n(w-)2040 2222 y(e)n(v)o(er)m(,)i(our)d(e)o(xperience)h(suggests)g
(that)f(e)n(v)o(en)h(a)f(single)g(all-zero)g(starting)2040
2310 y(point)19 b(often)h(yields)f(good)h(performance.)2040
2409 y
SDict begin H.S end
 2040 2409 a 2040 2409 a
SDict begin 10.5 H.A end
 2040 2409 a 2040 2409
a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.5.4) cvn H.B /DEST
pdfmark end
 2040 2409 a 71 x FC(5.4)99 b(Discussion)2115 2588 y
FB(W)-6 b(e)32 b(no)n(w)i(discuss)f(certain)g(practical)g(aspects)h(of)
f(our)g(optimization)2040 2675 y(strate)o(gy)-5 b(.)29
b(Our)21 b(algorithms)g(can)g(be)g(implemented)h(at)f(a)f(central)h
(location,)2040 2762 y(such)f(as)g(in)f(T)-5 b(esseract)19
b([)2676 2763 y
SDict begin H.S end
 2676 2763 a -1 x FB(34)2750 2712 y
SDict begin H.R end
 2750
2712 a 2750 2762 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.Tesseract) cvn H.B /ANN pdfmark end
 2750 2762 a FB(],)g(or)h(in)f(a)g(fully)h(distrib)o
(uted)f(manner)l(.)25 b(The)20 b(dis-)2040 2850 y(trib)o(ution)i(is)h
(similar)f(to)g(that)g(in)h(link-state)f(protocols)i(such)f(as)g(OSPF)
-6 b(,)20 b(in)2040 2937 y(which)e(all)e(nodes)i(implement)g(the)f
(same)g(algorithm,)h(o)o(v)o(er)f(the)g(same)g(data,)2040
3024 y(and)22 b(thus)f(arri)n(v)o(e)h(at)f(consistent)g(solutions.)31
b(Apart)21 b(from)g(topology)i(infor)o(-)2040 3111 y(mation,)31
b(distrib)o(uting)d(our)h(algorithms)f(also)h(needs)g(demand)h
(estimates)2040 3198 y(for)19 b(v)n(arious)h(\003o)n(ws.)2115
3285 y(Another)25 b(aspect)g(that)f(is)g(related)g(distrib)o(uted)g
(implementation)h(is)f(the)2040 3373 y(computational)30
b(requirements)f(of)f(our)h(approach.)52 b(An)29 b(e)o(xact)f
(quanti\002-)2040 3460 y(cation)j(is)f(a)g(subject)h(of)f(ongoing)i(w)o
(ork,)h(b)o(ut)d(in)h(our)f(e)o(xperiments)i(we)2040
3547 y(ha)o(v)o(e)23 b(not)f(found)i(it)d(to)h(be)h(a)f(problem.)34
b(In)23 b(our)f(unoptimized)i(implemen-)2040 3634 y(tation,)c(rate)g
(computations)i(are)e(practical)g(for)h(online)f(optimization.)28
b(F)o(or)2040 3721 y(instance,)18 b(in)g(our)g(e)o(xperiments,)h(it)e
(tak)o(es)i(roughly)g(three)f(seconds)h(to)e(opti-)2040
3808 y(mize)i(ten)g(\003o)n(ws)g(in)g(25-node)h(topologies.)2115
3896 y(Finally)-5 b(,)26 b(our)f(methods)h(use)g(\003o)n(w)e(demands)j
(as)e(inputs)g(for)g(optimiza-)2040 3983 y(tion.)55 b(W)-6
b(e)29 b(propose)i(that)f(nodes)h(base)f(their)f(estimates)h(on)g
(recent)g(his-)2040 4070 y(tory)-5 b(.)33 b(Such)22 b(a)g(strate)o(gy)g
(is)g(ef)n(fecti)n(v)o(e)g(only)g(if)g(there)g(is)f(temporal)i
(stability)2040 4157 y(in)g(\003o)n(w)g(demands.)38 b(While)22
b(wireless)h(meshes)h(are)f(not)h(signi\002cantly)f(de-)2040
4244 y(plo)o(yed)18 b(yet)e(to)h(settle)f(this)g(question)h(with)f
(certainty)-5 b(,)17 b(we)f(gain)h(insight)f(into)2040
4332 y(this)i(issue)g(by)g(studying)h(wireless)f(usage)h(in)f(tw)o(o)g
(dif)n(ferent)g(en)m(vironments)2040 4419 y(\226)k(at)g(a)g(W)m(iFi)f
(hotspot)h(in)g(Seattle)g(and)g(at)g(the)g(SIGCOMM)g(2004)h(confer)o(-)
2040 4506 y(ence)17 b([)2218 4506 y
SDict begin H.S end
 2218 4506 a FB(22)2292
4455 y
SDict begin H.R end
 2292 4455 a 2292 4506 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.wit) cvn H.B /ANN pdfmark end
 2292 4506 a FB(].)23 b(Figure)2570
4507 y
SDict begin H.S end
 2570 4507 a -1 x FB(7)2607 4457 y
SDict begin H.R end
 2607 4457 a
2607 4506 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.7) cvn H.B /ANN pdfmark end
 2607 4506 a 16 w FB(sho)n(ws)17 b(for)g(10-second)h(windo)n
(ws,)f(the)g(actual)f(traf)n(\002c)2040 4593 y(sent)h(to)g(an)h(AP)e
(and)i(the)f(traf)n(\002c)f(predicted)i(by)f(EWMA)g(\()p
Fw(a)6 b FB(=0.5\))17 b(o)o(v)o(er)h(his-)2040 4680 y(tory)-5
b(.)23 b(W)-6 b(e)19 b(see)g(that)f(traf)n(\002c)g(e)o(xhibits)h(a)g
(high)g(de)o(gree)h(of)f(temporal)g(stability)2040 4767
y(and)j(EWMA)e(predicts)i(future)f(traf)n(\002c)g(f)o(airly)g
(accurately)-5 b(.)30 b(What)21 b(visually)2040 4855
y(appears)c(as)g(sharp)g(peaks)g(and)g(v)n(alle)o(ys)g(in)f(traf)n
(\002c)f(are)i(in)f(f)o(act)g(composed)i(of)2040 4942
y(multiple)d(time)g(interv)n(als,)h(compressed)h(so)f(that)f(we)g(can)h
(sho)n(w)g(a)f(tw)o(o-hour)2040 5029 y(period.)42 b(The)25
b(a)o(v)o(erage)g(traf)n(\002c)g(v)o(olume)g(is)f(723.5)i(Kbps)g(for)f
(the)g(hotspot)2040 5116 y(trace)19 b(and)g(43.77)g(Kbps)g(for)f(the)h
(SIGCOMM)f(trace.)23 b(The)c(mean)g(absolute)2040 5203
y(error)h(\(MAE\),)e(de\002ned)j(as)e Fz(mean)p Ft(\()p
Fr(j)p Fz(E)5 b(s)n(t)g(ima)n(t)g(ed)16 b Fr(\000)11
b Fz(Ac)n(t)5 b(ual)t Fr(j)p Ft(\))p FB(,)18 b(is)i(200)g(Kbps)2040
5290 y(for)25 b(the)h(hotspot)g(trace)f(and)h(15)g(Kbps)g(for)f(the)g
(SIGCOMM)g(trace.)42 b(Our)2040 5378 y(rate-limiting)28
b(w)o(ould)g(actually)h(e)n(v)o(en)g(out)f(those)h(spik)o(es)g(if)e
(there)h(is)g(not)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152 -359
a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.8) cvn H.B /DEST pdfmark
end
 -152 -359 a 290
x FB(enough)21 b(capacity)f(in)f(the)g(netw)o(ork.)25
b(Suppose)20 b(the)f(APs)g(that)g(we)g(measure)-152 19
y(were)k(nodes)h(in)f(a)g(city-wide)g(wireless)f(mesh,)i(aggre)o
(gating)g(traf)n(\002c)f(from)-152 106 y(similar)c(clients)g(and)g
(sending)h(it)f(to)g(a)g(nearby)h(gate)n(w)o(ay)f(on)h(the)f(multi-hop)
-152 193 y(mesh)25 b(backhaul.)41 b(Then,)25 b(by)g(e)o(xtrapolating)g
(from)g(these)f(en)m(vironments,)-152 280 y(we)j(judge)g(that)f(the)g
(nodes)i(w)o(ould)f(be)g(able)f(to)h(obtain)g(reasonable)g(esti-)-152
367 y(mates)19 b(of)g(their)g(demands.)-152 451 y
SDict begin H.S end
 -152
451 a -152 451 a
SDict begin 10.5 H.A end
 -152 451 a -152 451 a
SDict begin [ /View [/XYZ H.V] /Dest (section.6) cvn H.B /DEST pdfmark
end
 -152 451 a 115
x FC(6.)100 b(EV)-13 b(ALU)-6 b(A)d(TION)24 b(METHODOLOGY)-77
674 y FB(W)-6 b(e)14 b(e)n(v)n(aluate)i(the)f(accurac)o(y)h(of)f(our)g
(approach)i(using)e(e)o(xtensi)n(v)o(e)h(testbed)-152
762 y(and)29 b(simulation)f(e)o(xperiments.)52 b(The)28
b(former)g(pro)o(vides)h(a)f(setting)g(with)-152 849
y(real-w)o(orld)20 b(comple)o(xities.)25 b(The)20 b(latter)f(lets)g(us)
g(conduct)i(a)e(broader)i(range)-152 936 y(of)k(e)o(xperiments)g(and)h
(also)f(lets)f(us)h(v)n(ary)g(parameters)g(such)g(as)g(topology)-152
1023 y(that)19 b(we)g(cannot)h(control)f(for)g(the)g(testbed.)-77
1110 y(W)-6 b(e)18 b(di)n(vide)i(our)f(empirical)g(results)g(across)g
(three)g(sections.)-77 1197 y Fr(\017)g FB(In)g(Section)303
1198 y
SDict begin H.S end
 303 1198 a -1 x FB(7)340 1149 y
SDict begin H.R end
 340 1149 a 340
1197 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.7) cvn H.B /ANN pdfmark end
 340 1197 a FB(,)g(we)f(e)n(v)n(aluate)i(the)f(accurac)o(y)h(of)f
(our)g(model.)-77 1285 y Fr(\017)24 b FB(In)g(Section)318
1286 y
SDict begin H.S end
 318 1286 a -1 x FB(8)355 1234 y
SDict begin H.R end
 355 1234 a 355
1285 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.8) cvn H.B /ANN pdfmark end
 355 1285 a FB(,)h(we)f(e)n(v)n(aluate)h(the)f(de)o(gree)g(to)g
(which)g(our)h(model)f(can)-152 1372 y(impro)o(v)o(e)16
b(performance)h(for)e(both)h(goals,)g(maximizing)h(f)o(airness)e(and)h
(max-)-152 1459 y(imizing)29 b(total)g(throughput.)55
b(W)-6 b(e)28 b(quantify)i(f)o(airness)f(using)h(the)f(classic)-152
1546 y(Jain')l(s)19 b(f)o(airness)g(inde)o(x,)g(which)g(is)f(de\002ned)
h(as)g Ft(\()1106 1552 y Fu(\345)1167 1546 y Fz(x)1200
1558 y FH(i)1221 1546 y Ft(\))1250 1519 y FE(2)1283 1546
y Fv(=)p Ft(\()p Fz(n)10 b Fr(\003)1443 1552 y Fu(\345)1506
1546 y Fz(x)1539 1558 y FH(i)1559 1519 y FE(2)1593 1546
y Ft(\))18 b FB(for)g(de-)-152 1633 y(mands)i Fz(x)95
1646 y FE(1)128 1633 y Fv(:::)p Fz(x)224 1644 y FH(n)257
1633 y FB(.)-77 1720 y Fr(\017)j FB(In)f(Section)314
1722 y
SDict begin H.S end
 314 1722 a -2 x FB(9)351 1670 y
SDict begin H.R end
 351 1670 a 351
1720 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.9) cvn H.B /ANN pdfmark end
 351 1720 a FB(,)h(we)f(sho)n(w)h(that)g(it)f(is)g(rate-limiting)
f(that)i(is)f(critical)g(to)-152 1808 y(netw)o(ork)28
b(performance.)49 b(Exactly)27 b(ho)n(w)h(the)f(routes)h(are)f(chosen)h
(is)f(less)-152 1895 y(important.)-77 1982 y(In)h(the)g(\002rst)f(tw)o
(o)h(sections,)j(we)d(use)g(ETX)f(as)h(the)g(routing)h(protocol.)-152
2069 y(ETX)22 b(selects)h(the)g(path)g(that)g(minimizes)g(the)f(total)h
(number)h(of)e(e)o(xpected)-152 2156 y(transmissions)e(from)f(a)g
(source)g(to)g(its)f(destination)i([)1241 2157 y
SDict begin H.S end
 1241
2157 a -1 x FB(3)1278 2106 y
SDict begin H.R end
 1278 2106 a 1278 2156 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.ETX) cvn H.B /ANN pdfmark end

1278 2156 a FB(].)-152 2235 y
SDict begin H.S end
 -152 2235 a -152 2235 a
SDict begin 10.5 H.A end

-152 2235 a -152 2235 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.6.1) cvn H.B /DEST
pdfmark end
 -152 2235 a 75 x FC(6.1)99 b(Strawman:)32
b(Con\003ict)26 b(Graph)f(Model)-77 2418 y FB(W)-6 b(e)29
b(compare)i(our)e(approach)j(to)d(one)h(based)h(on)f(the)f(con\003ict)h
(graph)-152 2505 y(\(CG\))18 b(model)i(of)e(interference[)687
2505 y
SDict begin H.S end
 687 2505 a FB(14)761 2454 y
SDict begin H.R end
 761 2454 a 761 2505
a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.JPPQ03) cvn H.B /ANN pdfmark end
 761 2505 a FB(].)24 b(W)-6 b(e)19 b(note)g(that)f(the)h(use)g(of)g
(CG)f(model)-152 2592 y(has)h(not)f(been)h(proposed)h(in)e(practical)g
(settings,)g(b)o(ut)g(it)g(pro)o(vides)h(an)g(inter)o(-)-152
2679 y(esting)h(comparison)g(point)f(in)g(our)g(e)n(v)n(aluation.)-77
2767 y(The)h(CG-based)h(model)f(assumes)h(that)f(pack)o(et)h
(transmissions)g(at)f(indi-)-152 2854 y(vidual)d(nodes)g(can)g(be)f
(\002nely)g(controlled.)23 b(It)15 b(represents)i(wireless)e(links)i
(as)-152 2941 y(con\003ict)f(v)o(ertices)f(and)h(dra)o(ws)f(a)h
(con\003ict)f(edge)h(between)g(tw)o(o)g(con\003ict)f(v)o(er)o(-)-152
3028 y(tices)h(if)f(and)h(only)g(if)f(the)h(corresponding)i(wireless)d
(links)g(interfere.)22 b(Based)-152 3115 y(on)d(the)g(de\002nition,)f
(it)g(is)g(clear)g(that)g(links)h(corresponding)i(to)d(con\003ict)g(v)o
(er)o(-)-152 3202 y(tices)25 b(in)h(a)f(clique)h(in)f(the)h(con\003ict)
f(graph)i(cannot)f(be)g(acti)n(v)o(e)f(simultane-)-152
3290 y(ously)-5 b(.)41 b(Therefore,)27 b(an)d(upper)i(bound)g(of)f
(optimal)g(wireless)f(throughput)-152 3377 y(can)d(be)f(computed)h(by)f
(solving)h(a)e(linear)h(program)h(\(LP\))d(which)j(speci\002es)-152
3464 y(the)g(goal)f(of)h(maximizing)g(the)f(total)g(traf)n(\002c)f
(deli)n(v)o(ered)i(to)g(the)f(destination)-152 3551 y(while)f
(satisfying)g(\003o)n(w)g(conserv)n(ation)i(and)e(clique)g
(constraints.)-77 3638 y(W)-6 b(e)29 b(apply)h(this)f(formulation)h(to)
f(deri)n(v)o(e)h(the)g(rate)f(limits)f(that)i(maxi-)-152
3725 y(mize)16 b(the)g(total)f(throughput.)24 b(When)16
b(applied)g(to)f(dif)n(ferent)h(route)g(selection)-152
3813 y(schemes,)k(we)f(enforce)h(traf)n(\002c)e(to)h(follo)n(w)h(the)f
(selected)g(routes)h(by)f(adding)-152 3900 y(the)f(follo)n(wing)g
(linear)g(constraints.)23 b(F)o(or)17 b(each)i(Demand)f
Fz(d)k FB(and)c(each)h(Link)-152 3987 y Fz(e)p FB(,)25
b Fz(T)-39 4001 y FH(d)s FI(;)p FH(e)58 3987 y Fr(\024)16
b Fz(C)r(a)6 b(p)264 3998 y FH(e)306 3987 y Fr(\002)12
b Fz(z)405 4001 y FH(d)s FI(;)p FH(e)483 3987 y FB(,)25
b(where)f Fz(T)769 4001 y FH(d)s FI(;)p FH(e)870 3987
y FB(is)g(the)f(amount)i(of)f(traf)n(\002c)f(success-)-152
4074 y(fully)d(routed)h(for)e(demand)i Fz(d)j FB(on)c(link)g
Fz(e)p FB(,)c Fz(C)r(a)6 b(p)1073 4085 y FH(e)1123 4074
y FB(is)19 b(the)h(capacity)g(of)g(link)g Fz(e)p FB(,)-152
4161 y(and)g Fz(z)4 4175 y FH(d)s FI(;)p FH(e)99 4161
y Ft(=)c FB(1)j(if)g Fz(e)g FB(is)f(used)i(to)f(route)g(demand)h
Fz(d)j FB(and)d(0)f(otherwise.)-77 4248 y(T)-6 b(o)24
b(maximize)h(f)o(airness,)g(we)f(use)h(a)f(similar)f(formulation.)39
b(The)24 b(main)-152 4336 y(dif)n(ference)g(is)f(that)g(we)g(change)i
(the)e(objecti)n(v)o(e)h(to)f(maximizing)h(the)f(total)-152
4423 y(throughput)k(across)e(all)f(the)g(\003o)n(ws)g(and)i(the)e
(portions)h(of)g(their)f(demands)-152 4510 y(that)e(are)g(achie)n(v)o
(ed.)32 b(This)22 b(can)g(be)g(e)o(xpressed)h(as)1177
4516 y Fu(\345)1231 4526 y FH(d)1275 4516 y Fu(\345)1329
4528 y FH(r)q Fs(\()p FH(e)p Fs(\)=)p FH(d)s(es)o(t)t
Fs(\()p FH(d)s Fs(\))1657 4510 y Fz(T)1693 4524 y FH(d)s
FI(;)p FH(e)1783 4510 y Ft(+)-152 4607 y Fw(l)9 b(a)-40
4613 y Fu(\345)13 4623 y FH(d)58 4607 y Fz(x)91 4621
y FH(d)127 4607 y FB(,)23 b(where)f Fz(r)r Ft(\()p Fz(e)p
Ft(\))g FB(is)g(the)g(recei)n(v)o(er)h(of)f(Link)g Fz(e)p
FB(,)h Fz(d)t(es)n(t)5 b Ft(\()p Fz(d)t Ft(\))22 b FB(is)g(destina-)
-152 4694 y(tion)f(of)f(Demand)h Fz(d)t FB(,)g Fz(x)454
4708 y FH(d)510 4694 y FB(is)f(traf)n(\002c)g(demand,)i
Fw(a)k FB(is)20 b(the)g(minimum)h(propor)o(-)-152 4781
y(tion)f(of)f(its)f(demand)j(that)e(can)h(be)f(achie)n(v)o(ed,)i(and)f
Fw(l)28 b FB(controls)19 b(the)h(relati)n(v)o(e)-152
4868 y(importance)26 b(of)f(these)h(tw)o(o)f(objecti)n(v)o(es.)42
b(In)25 b(addition,)i(we)d(add)i(the)f(con-)-152 4955
y(straints)h(to)g(ensure)h(that)f(each)g(\003o)n(w)g(recei)n(v)o(es)h
(throughput)h(no)e(less)g(than)-152 5043 y Fw(a)6 b Fz(x)-66
5057 y FH(d)-8 5043 y FB(\()p Fz(i.e)o(.)p FB(,)21 b(for)g(each)h
(Demand)h Fz(d)t FB(,)771 5049 y Fu(\345)824 5061 y FH(r)q
Fs(\()p FH(e)p Fs(\)=)p FH(d)s(es)o(t)t Fs(\()p FH(d)s
Fs(\))1153 5043 y Fz(T)1189 5057 y FH(d)s FI(;)p FH(e)1285
5043 y Fr(\025)18 b Fw(a)6 b Fz(x)1447 5057 y FH(d)1483
5043 y FB(\).)31 b(Our)21 b(e)n(v)n(al-)-152 5139 y(uation)27
b(uses)g Fw(l)j Ft(=)21 b FB(100)27 b(to)g(signi\002cantly)f(f)o(a)o(v)
o(or)g(the)h(solution)g(with)f(high)-152 5226 y(f)o(airness)20
b(when)f(maximizing)h(f)o(airness.)2040 -152 y
SDict begin H.S end
 2040 -152
a 2040 -152 a
SDict begin 10.5 H.A end
 2040 -152 a 2040 -152 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.6.2) cvn H.B /DEST
pdfmark end
 2040 -152 a 83
x FC(6.2)99 b(Simulation)25 b(Experiments)2115 39 y FB(Our)f
(simulations)g(are)g(based)g(on)h(QualNet)e(v3.9.5.)39
b(W)-6 b(e)23 b(use)h(802.11a)2040 126 y(with)16 b(a)h(\002x)o(ed)g
(bit)f(rate)g(of)h(6)g(Mbps)g(and)h(free-space)f(model)g(of)g(signal)g
(prop-)2040 214 y(agation,)f(which)g(pro)o(vides)g(a)f(communication)i
(range)f(of)f(230)i(meters.)k(The)2040 301 y(interference)f(range)f(of)
g(253)h(meters.)2115 388 y(W)-6 b(e)22 b(generate)i(traf)n(\002c)f
(using)h(both)f(TCP)f(and)i(UDP)e(and)i(consider)g(tw)o(o)2040
475 y(types)32 b(of)f(application)i(demands:)49 b Ft(\()p
Fz(i)p Ft(\))31 b Fz(satur)o(ated)h(demands)p FB(,)k(in)31
b(which)2040 562 y(sources)26 b(al)o(w)o(ays)f(ha)o(v)o(e)g(traf)n
(\002c)g(to)f(send;)29 b(and)c Ft(\()p Fz(ii)p Ft(\))f
Fz(r)o(andom)i(demands)p FB(,)h(in)2040 649 y(which)22
b(the)g(demand)h(of)f(a)g(source)h(is)e(pick)o(ed)i(randomly)g(from)f
(a)g(uniform)2040 737 y(distrib)o(ution)k(between)h(0)f(and)h(the)f
(maximum)h(link)f(load.)45 b(W)-6 b(e)26 b(v)n(ary)g(the)2040
824 y(number)e(of)f(\003o)n(ws)f(from)h(1)g(through)h(20)f(where)g
(each)g(\003o)n(w)g(is)f(between)h(a)2040 911 y(unique)d(sender)o
(-recei)n(v)o(er)g(pair)l(.)2115 998 y(W)-6 b(e)31 b(consider)i(tw)o(o)
f(kinds)h(of)f(topologies)h(in)f(this)f(paper:)50 b(5x5)33
b(grid)2040 1085 y(topologies)16 b(and)f(25-node)h(random)f
(topologies.)23 b(Both)14 b(occup)o(y)j(a)d(750x750)2040
1173 y Fz(m)2094 1145 y FE(2)2145 1173 y FB(area.)22
b(W)-6 b(e)17 b(also)h(study)g(other)g(netw)o(ork)g(densities)g(and)g
(\002nd)g(that)f(the)h(re-)2040 1260 y(sults)j(are)h(qualitati)n(v)o
(ely)f(similar)l(.)30 b(So)21 b(we)g(omit)g(them)h(from)f(this)g(paper)
h(in)2040 1347 y(the)d(interest)g(of)g(bre)n(vity)-5
b(.)2115 1434 y(F)o(or)25 b(each)i(scenario,)h(we)e(conduct)h(10)g
(random)g(trials.)43 b(In)26 b(each)h(trial,)2040 1521
y(\003o)n(w)i(sources)g(and)g(destinations)h(are)f(pick)o(ed)h
(randomly)-5 b(.)53 b(F)o(or)28 b(random)2040 1608 y(traf)n(\002c)f
(demands)i(and)f(random)g(topologies,)j(each)d(trial)f(also)g(randomly)
2040 1696 y(generates)20 b(the)f(demands)h(and)g(the)f(topology)-5
b(.)2115 1783 y(W)f(e)18 b(e)n(v)n(aluate)i(the)f(performance)h(with)f
(and)g(without)g(R)l(TS/CTS.)d(When)2040 1870 y(R)l(TS/CTS)26
b(is)i(enabled,)k(we)c(set)h(R)l(TS)d(threshold)k(to)e(100)i(bytes)f
(so)g(that)2040 1957 y(\(small\))23 b(TCP)g(A)m(CKs)g(do)h(not)g(incur)
g(R)l(TS/CTS)d(o)o(v)o(erhead.)39 b(In)23 b(order)i(for)2040
2044 y(TCP)17 b(to)h(be)g(rob)o(ust)g(to)f(high)i(link)f(loss)g(rates,)
f(we)h(use)g(TCP)f(Ne)n(wReno)i(and)2040 2131 y(set)26
b(the)h(MA)m(C-le)n(v)o(el)f(short)g(and)h(long)g(retry)f(counts)i(to)e
(16.)46 b(This)25 b(is)h(the)2040 2219 y(lar)o(gest)19
b(maximum)h(retry)f(count)h(allo)n(wed)g(in)f(madwi\002-old)h(dri)n(v)o
(er)m(,)f(which)2040 2306 y(we)g(use)g(in)g(our)g(testbed.)2115
2393 y(Since)k(se)n(v)o(eral)h(routing)h(metrics)e(\()p
Fz(e)o(.g)o(.)p FB(,)h(ETX)f([)3387 2394 y
SDict begin H.S end
 3387 2394
a -1 x FB(3)3424 2342 y
SDict begin H.R end
 3424 2342 a 3424 2393 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.ETX) cvn H.B /ANN pdfmark end
 3424
2393 a FB(])h(and)g(MIC)g([)3794 2394 y
SDict begin H.S end
 3794 2394 a -1
x FB(35)3868 2342 y
SDict begin H.R end
 3868 2342 a 3868 2393 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.mic) cvn H.B /ANN pdfmark end
 3868 2393
a FB(]\))f(are)2040 2480 y(designed)34 b(for)f(wireless)f(netw)o(orks)h
(with)g(lossy)g(links,)i(we)e(e)o(xtend)g(the)2040 2567
y(QualNet)27 b(simulator)h(to)f(generate)h(directional)g(inherent)g
(pack)o(et)g(losses.)2040 2654 y(In)18 b(our)g(e)n(v)n(aluation,)h(we)e
(randomly)i(assign)f(bit-error)o(-rate)f(\(BER\))g(of)g(links)2040
2742 y(such)28 b(that)g(the)f(data)h(pack)o(et)g(loss)g(rates)f(are)h
(uniformly)g(distrib)o(uted)f(be-)2040 2829 y(tween)j(0)f(and)h
(80\045.)56 b(As)29 b(wireless)g(link)h(loss)f(rates)g(depend)i(on)f
(frame)2040 2916 y(sizes,)23 b(our)g(e)n(v)n(aluation)h(considers)g
(both)f(small)f(and)i(lar)o(ge)e(frames.)34 b(The)o(y)2040
3003 y(ha)o(v)o(e)28 b(respecti)n(v)o(e)h(application)g(payload)h
(sizes)e(of)g(106)h(bytes)f(and)h(1024)2040 3090 y(bytes.)g(The)21
b(broadcast)h(probes)g(used)f(to)g(measure)h(link)f(quality)g(for)f
(rout-)2040 3178 y(ing)f(are)g(also)g(106)h(bytes,)f(as)g(in)g([)2912
3179 y
SDict begin H.S end
 2912 3179 a -1 x FB(3)2949 3127 y
SDict begin H.R end
 2949 3127 a
2949 3178 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.ETX) cvn H.B /ANN pdfmark end
 2949 3178 a FB(].)2040 3271 y
SDict begin H.S end
 2040 3271 a
2040 3271 a
SDict begin 10.5 H.A end
 2040 3271 a 2040 3271 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.6.3) cvn H.B /DEST
pdfmark end
 2040 3271 a 71 x
FC(6.3)99 b(T)-9 b(estbed)27 b(Experiments)2115 3450
y FB(Our)14 b(testbed)h(consists)g(of)g(19)g(nodes)g(located)g(inside)g
(an)g(of)n(\002ce)f(b)o(uilding.)2040 3537 y(Each)27
b(node)g(runs)g(Linux)f(and)i(is)d(equipped)k(with)d(a)g(NetGear)g(W)-9
b(A)m(G511)2040 3624 y(NIC.)22 b(W)-6 b(e)23 b(run)g(802.11a)h(with)f
(a)g(\002x)o(ed)g(bit)g(rate)f(of)h(6)g(Mbps.)37 b(W)-6
b(e)22 b(are)h(not)2040 3711 y(a)o(w)o(are)j(of)g(other)h(802.11a)g
(users)f(in)g(our)h(b)o(uilding.)44 b(W)-6 b(e)26 b(use)g(the)g(lo)n
(west)2040 3798 y(transmission)g(po)n(wer)f(for)g(our)h(nodes)g(to)f
(increase)g(the)g(netw)o(ork)h(diame-)2040 3886 y(ter)l(.)h(In)21
b(this)f(setting,)h(we)f(measured)i(the)e(diameter)h(to)f(be)h(7)g
(hops,)g(though)2040 3973 y(routing)f(paths)h(may)f(be)g(longer)l(.)26
b(Other)20 b(settings)g(are)g(consistent)g(with)f(the)2040
4060 y(simulations.)2115 4147 y(The)k(routing)g(protocols)h(are)f
(implemented)g(using)h(click)f([)3697 4147 y
SDict begin H.S end
 3697 4147
a FB(2)3734 4096 y
SDict begin H.R end
 3734 4096 a 3734 4147 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.click) cvn H.B /ANN pdfmark end
 3734 4147
a FB(].)35 b(W)-6 b(e)22 b(use)2040 4234 y Fz(nuttcp)e
FB([)2271 4234 y
SDict begin H.S end
 2271 4234 a FB(24)2345 4184 y
SDict begin H.R end
 2345 4184
a 2345 4234 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.nuttcp) cvn H.B /ANN pdfmark end
 2345 4234 a FB(])f(to)h(generate)g(and)f(measure)h(UDP)f
(and)h(TCP)e(throughput.)26 b(T)-6 b(o)2040 4321 y(rate)30
b(limit)g(\003o)n(ws,)j(we)d(let)g Fz(nuttcp)h FB(generate)g
(application)g(traf)n(\002c)f(at)g(the)2040 4409 y(speci\002ed)g
(limit.)55 b(W)m(ithout)29 b(rate)h(limit,)h(each)f(source)h(generates)
f(appli-)2040 4496 y(cation)19 b(traf)n(\002c)g(as)g(per)g(its)f
(demand.)24 b(W)-6 b(e)19 b(e)o(xperiment)g(with)g(1-16)h(\003o)n(ws.)
2115 4583 y(As)14 b(is)g(common)i([)2577 4584 y
SDict begin H.S end
 2577
4584 a -1 x FB(3)2614 4532 y
SDict begin H.R end
 2614 4532 a 2614 4583 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.ETX) cvn H.B /ANN pdfmark end

2614 4583 a FB(,)2648 4583 y
SDict begin H.S end
 2648 4583 a FB(4)2685 4532
y
SDict begin H.R end
 2685 4532 a 2685 4583 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.WCETT) cvn H.B /ANN pdfmark end
 2685 4583 a FB(,)2719 4584
y
SDict begin H.S end
 2719 4584 a -1 x FB(35)2793 4532 y
SDict begin H.R end
 2793 4532 a 2793
4583 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.mic) cvn H.B /ANN pdfmark end
 2793 4583 a FB(],)g(we)e(measure)i(link)e(quality)h(using)g
(broadcast)2040 4670 y(probes.)40 b(Figure)2516 4671
y
SDict begin H.S end
 2516 4671 a -1 x FB(8)2553 4619 y
SDict begin H.R end
 2553 4619 a 2553
4670 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.8) cvn H.B /ANN pdfmark end
 2553 4670 a 25 w FB(sho)n(ws)25 b(CDF)e(of)i(link)f(loss)g(rate)
g(in)h(our)f(testbed.)40 b(W)-6 b(e)2040 4757 y(prune)20
b(links)f(e)o(xceeding)h(90\045)g(loss)f(rates)g(in)g(our)g(route)g
(selection.)2040 4878 y
SDict begin H.S end
 2040 4878 a 2040 4878 a
SDict begin 10.5 H.A end
 2040
4878 a 2040 4878 a
SDict begin [ /View [/XYZ H.V] /Dest (section.7) cvn H.B /DEST pdfmark
end
 2040 4878 a 100 x FC(7.)99 b(MODEL)26
b(V)-13 b(ALID)m(A)k(TION)2115 5086 y FB(Belo)n(w)18
b(we)g(sho)n(w)h(that)g(our)f(model)h(is)f(accurate)h(in)g(a)f(range)h
(of)g(settings.)2040 5203 y FA(Methodology)92 b FB(A)15
b(good)i(interference)f(model)g(should)g(closely)g(approx-)2040
5290 y(imate)k(achie)n(v)n(able)i(throughput)g(gi)n(v)o(en)f(traf)n
(\002c)e(demands)j(as)e(input,)h(which)2040 5378 y(implies)16
b(that:)22 b(\(i\))15 b(the)i(throughput)h(estimate)e(should)h(be)f
(achie)n(v)n(able)i(in)e(the)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152 -359
a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.9) cvn H.B /DEST pdfmark
end
 -152 -359 a 287
615 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
1315 @rwi @setspecial
%%BeginDocument: Figs/testbed/Loss/loss-cdf.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: loss-cdf.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Jun  4 02:16:27 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (loss-cdf.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  4 02:16:27 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0) Rshow
1.000 UL
LTb
1224 1123 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.1) Rshow
1.000 UL
LTb
1224 1526 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.2) Rshow
1.000 UL
LTb
1224 1930 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.3) Rshow
1.000 UL
LTb
1224 2333 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.4) Rshow
1.000 UL
LTb
1224 2736 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.5) Rshow
1.000 UL
LTb
1224 3139 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.6) Rshow
1.000 UL
LTb
1224 3542 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.7) Rshow
1.000 UL
LTb
1224 3946 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.8) Rshow
1.000 UL
LTb
1224 4349 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.9) Rshow
1.000 UL
LTb
1224 4752 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1781 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.1) Cshow
1.000 UL
LTb
2338 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.2) Cshow
1.000 UL
LTb
2894 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.3) Cshow
1.000 UL
LTb
3451 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.4) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.5) Cshow
1.000 UL
LTb
4565 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.6) Cshow
1.000 UL
LTb
5122 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.7) Cshow
1.000 UL
LTb
5678 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.8) Cshow
1.000 UL
LTb
6235 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.9) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Fractions of links) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(Loss rate) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.500 UP
1.000 UL
LT0
1224 771 M
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 52 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
1 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 51 V
0 52 V
0 51 V
0 51 V
0 51 V
1 51 V
0 51 V
0 51 V
0 51 V
0 51 V
2 51 V
1 51 V
4 51 V
2 51 V
24 51 V
7 51 V
7 51 V
2 51 V
279 51 V
39 51 V
75 51 V
103 51 V
35 51 V
217 51 V
114 51 V
239 51 V
268 51 V
247 52 V
144 51 V
117 51 V
216 51 V
135 51 V
54 51 V
267 51 V
42 51 V
99 51 V
197 51 V
327 51 V
302 51 V
773 51 V
698 51 V
1224 771 Pls
1224 822 Pls
1224 873 Pls
1224 924 Pls
1224 975 Pls
1224 1026 Pls
1224 1077 Pls
1224 1128 Pls
1224 1179 Pls
1224 1230 Pls
1224 1281 Pls
1224 1332 Pls
1224 1383 Pls
1224 1435 Pls
1224 1486 Pls
1224 1537 Pls
1224 1588 Pls
1224 1639 Pls
1224 1690 Pls
1224 1741 Pls
1224 1792 Pls
1224 1843 Pls
1224 1894 Pls
1224 1945 Pls
1224 1996 Pls
1224 2047 Pls
1224 2098 Pls
1224 2149 Pls
1224 2200 Pls
1224 2251 Pls
1225 2302 Pls
1225 2353 Pls
1225 2404 Pls
1225 2455 Pls
1225 2506 Pls
1225 2557 Pls
1225 2608 Pls
1225 2659 Pls
1225 2710 Pls
1225 2762 Pls
1225 2813 Pls
1225 2864 Pls
1225 2915 Pls
1226 2966 Pls
1226 3017 Pls
1226 3068 Pls
1226 3119 Pls
1226 3170 Pls
1228 3221 Pls
1229 3272 Pls
1233 3323 Pls
1235 3374 Pls
1259 3425 Pls
1266 3476 Pls
1273 3527 Pls
1275 3578 Pls
1554 3629 Pls
1593 3680 Pls
1668 3731 Pls
1771 3782 Pls
1806 3833 Pls
2023 3884 Pls
2137 3935 Pls
2376 3986 Pls
2644 4037 Pls
2891 4089 Pls
3035 4140 Pls
3152 4191 Pls
3368 4242 Pls
3503 4293 Pls
3557 4344 Pls
3824 4395 Pls
3866 4446 Pls
3965 4497 Pls
4162 4548 Pls
4489 4599 Pls
4791 4650 Pls
5564 4701 Pls
6262 4752 Pls
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 1402 615 a
SDict begin H.S end
 1402 615 a 1402 615 a
SDict begin 10.5 H.A end
 1402 615
a 1402 615 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.8) cvn H.B /DEST pdfmark
end
 1402 615 a 119 756 a FA(Figur)o(e)18 b(8:)433
756 y
SDict begin H.S end
 433 756 a 433 756 a
SDict begin H.R end
 433 756 a 433 756 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.8) cvn H.B /DEST pdfmark
end
 433 756
a FA(CDF)g(of)h(link)f(loss)h(rate)g(in)f(our)h(testbed.)-152
908 y FB(netw)o(ork,)e(i.e.,)e(the)g(model)h(should)g(not)f(o)o(v)o(er)
o(-predict)h(throughput;)i(and)e(\(ii\))-152 995 y(the)23
b(netw)o(ork)g(should)h(not)f(be)g(capable)g(of)g(deli)n(v)o(ering)g
(more)g(throughput,)-152 1082 y(i.e.,)30 b(the)e(model)g(should)i(not)e
(under)o(-predict.)52 b(It)27 b(is)h(straightforw)o(ard)h(to)-152
1169 y(e)n(v)n(aluate)23 b(for)f(o)o(v)o(er)o(-prediction)h(\226)f
(instantiate)g(the)h(estimated)f(throughput)-152 1256
y(to)d(the)g(netw)o(ork)h(and)f(check)h(if)f(the)g(actual)g(throughput)
h(comes)g(close.)-77 1343 y(Ev)n(aluating)30 b(under)o(-prediction)g
(is)f(more)g(trick)o(y)-5 b(.)54 b(W)-6 b(e)29 b(w)o(ould)h(lik)o(e)f
(to)-152 1431 y(increase)21 b(the)f(load)g(on)h(the)f(netw)o(ork)h(be)o
(yond)g(what)f(the)g(model)h(estimates)-152 1518 y(and)16
b(check)g(ho)n(w)g(often)g(that)f(leads)g(to)g(higher)h(netw)o(ork)g
(throughput.)24 b(Ho)n(w-)-152 1605 y(e)n(v)o(er)m(,)16
b(gi)n(v)o(en)h(multiple)e(\003o)n(ws,)h(there)f(are)h(numerous)g(w)o
(ays)g(to)g(increase)g(net-)-152 1692 y(w)o(ork)i(load.)k(Our)17
b(e)o(xperiments)g(use)g(a)g(simple)g(uniform)g(scaling)g(approach)-152
1779 y(that)e(increases)g(each)g(\003o)n(w)f(throughput)j(by)e(the)f
(same)h(f)o(actor)l(.)22 b(W)-6 b(e)14 b(use)h(scal-)-152
1866 y(ing)i(f)o(actors)g(of)f(1.1,)h(1.2,)g(and)g(1.5,)g(which)f
(correspond)j(to)d(increasing)h(load)-152 1954 y(by)j(10\045,)f
(20\045,)g(and)h(50\045.)-77 2041 y(Figure)146 2043 y
SDict begin H.S end

146 2043 a -2 x FB(9)183 1990 y
SDict begin H.R end
 183 1990 a 183 2041 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.9) cvn H.B /ANN pdfmark end

183 2041 a 28 w FB(sho)n(ws)29 b(the)f(format)g(in)f(which)i(we)f
(present)g(results)g(in)g(this)-152 2128 y(section.)23
b(T)-6 b(o)16 b(e)n(v)n(aluate)h(under)o(-prediction,)h(the)e(left)g
(graph)h(sho)n(ws)g(a)f(scatter)-152 2215 y(plot)k(of)g(actual)f(and)i
(estimated)e(throughput.)27 b(The)20 b(tw)o(o)g(lines)f(on)h(the)g
(scat-)-152 2302 y(ter)15 b(plot)f(correspond)j(to)e
Fz(y)p FB(=)p Fz(x)g FB(and)g Fz(y)p FB(=0.8)p Fz(x)p
FB(.)23 b(The)o(y)15 b(help)g(judge)h(the)e(accurac)o(y)-152
2389 y(of)k(the)f(model)h(visually)-5 b(.)23 b(There)18
b(will)e(be)i(no)g(points)g(abo)o(v)o(e)g Fz(y)p FB(=)p
Fz(x)g FB(as)f(the)h(net-)-152 2477 y(w)o(ork)j(can)g(ne)n(v)o(er)g
(achie)n(v)o(e)g(more)f(throughput)i(than)f(what)f(is)g(instantiated.)
-152 2564 y(The)i(points)g(belo)n(w)h Fz(y)p FB(=0.8)p
Fz(x)f FB(correspond)i(to)e(instances)g(where)h(the)e(actual)-152
2651 y(throughput)e(is)d(less)h(than)g(80\045)h(of)f(what)g(is)f
(predicted)i(by)f(our)h(model.)23 b(The)-152 2738 y(right)16
b(graph)g(is)f(a)g(CDF)f(of)i(the)f(ratio)g(of)g(actual)h(and)g
(estimated)f(throughput,)-152 2825 y(before)25 b(and)h(after)e
(scaling.)40 b(The)25 b Fz(y)p FB(-v)n(alue)g(of)f(the)h(point)g(where)
g(a)f(scaled)-152 2912 y(curv)o(e)19 b(reaches)f Fz(x)p
FB(=1)h(represents)f(the)g(fraction)g(of)g(cases)g(where)g(our)g(model)
-152 3000 y(under)o(-predicted)h(by)e(at)g(least)f(the)h(scaling)g(f)o
(actor)l(.)23 b(The)17 b(\002gures)g(aggre)o(gate)-152
3087 y(results)23 b(across)g(all)f(\003o)n(w)g(counts)h(that)g(we)f
(generate.)35 b(These)23 b(counts)g(v)n(ary)-152 3174
y(between)d(1-20)g(in)e(simulations)i(and)f(1-16)h(in)f(our)g(testbed)g
(e)o(xperiments.)-77 3261 y(In)h(the)g(e)o(xperiments)h(belo)n(w)-5
b(,)21 b(we)f(use)g(a)g(data)h(pack)o(et)g(payload)g(of)f(1024)-152
3348 y(bytes)25 b(and)h(use)f(ETX)f(to)g(select)h(routes.)40
b(W)-6 b(e)25 b(\002nd)f(qualitati)n(v)o(ely)h(similar)-152
3436 y(results)18 b(for)f(smaller)g(payloads)i(\(not)f(sho)n(wn\))g
(and)h(other)f(routing)g(schemes)-152 3523 y(\(Section)116
3525 y
SDict begin H.S end
 116 3525 a -2 x FB(9)153 3472 y
SDict begin H.R end
 153 3472 a 153
3523 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.9) cvn H.B /ANN pdfmark end
 153 3523 a FB(\).)-152 3627 y
SDict begin H.S end
 -152 3627 a -152
3627 a
SDict begin 10.5 H.A end
 -152 3627 a -152 3627 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.7.1) cvn H.B /DEST
pdfmark end
 -152 3627 a 74 x FC(7.1)99
b(Simulation)25 b(Experiments)-77 3808 y FB(Figure)145
3810 y
SDict begin H.S end
 145 3810 a -2 x FB(9)182 3758 y
SDict begin H.R end
 182 3758 a 182
3808 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.9) cvn H.B /ANN pdfmark end
 182 3808 a 27 w FB(sho)n(ws)j(the)f(accurac)o(y)i(of)e
(predicting)h(the)f(throughput)i(in)e(a)-152 3896 y(grid)19
b(topology)g(with)f(saturated)h(UDP)e(demands)j(and)f(without)f(R)l
(TS/CTS.)-152 3983 y(W)-6 b(e)18 b(can)h(see)g(from)f(the)h(scatter)f
(plot)g(that)h(the)f(v)n(ast)h(majority)f(of)h(the)f(points)-152
4070 y(lie)23 b(between)h(the)g(lines,)g(which)g(implies)f(that)h(we)f
(o)o(v)o(er)o(-predict)h(netw)o(ork)-152 4157 y(throughput)d(by)f(more)
f(than)h(20\045)f(in)g(v)o(ery)h(fe)n(w)f(cases.)24 b(From)19
b(the)g(scale=1)-152 4244 y(CDF)24 b(on)g(the)g(right,)h(we)f(can)h
(see)f(that)g(there)g(are)g(fe)n(wer)h(than)f(15\045)h(such)-152
4332 y(cases.)44 b(Meanwhile,)28 b(the)e(w)o(orst-case)g(o)o(v)o
(erestimate)h(is)e(under)i(50\045.)44 b(A)-152 4419 y(major)26
b(cause)g(for)g(these)g(o)o(v)o(er)o(-predictions)g(is)f(that)h(our)g
(model)g(assumes)-152 4506 y(pairwise)f(interference.)42
b(The)25 b(model)g(o)o(v)o(er)o(-predicts)h(when)f(neither)h(tw)o(o)
-152 4593 y(senders)c(interfere)e(with)h(a)f(link)h(alone)g(b)o(ut)f
(their)h(total)f(noise)h(collecti)n(v)o(ely)-152 4680
y(interferes)e(with)g(the)g(link.)-77 4767 y(The)f(scaled)g(CDFs)f(sho)
n(w)h(that)f(our)h(model)g(does)h(not)f(under)o(-predict)g(ei-)-152
4855 y(ther)g(in)f(this)h(con\002guration.)23 b(In)18
b(almost)g(all)f(cases,)g(the)h(netw)o(ork)h(is)e(unable)-152
4942 y(to)i(achie)n(v)o(e)h(demands)g(that)f(ha)o(v)o(e)g(been)h
(scaled)f(by)h(e)n(v)o(en)g(10\045.)-77 5029 y(F)o(or)f(the)g(same)g
(con\002guration,)h(Figure)977 5030 y
SDict begin H.S end
 977 5030 a -1 x
FB(10)1051 4978 y
SDict begin H.R end
 1051 4978 a 1051 5029 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.10) cvn H.B /ANN pdfmark end
 1051 5029 a
20 w FB(sho)n(ws)g(the)f(accurac)o(y)h(of)g(the)-152
5116 y(CG-based)g(model.)k(Clearly)-5 b(,)19 b(this)g(model)h(v)n
(astly)f(o)o(v)o(er)o(-predicts)g(what)h(the)-152 5203
y(netw)o(ork)d(can)e(achie)n(v)o(e,)i(because)g(of)e(the)h(assumptions)
g(it)f(mak)o(es)h(about)h(the)-152 5290 y(ability)22
b(of)g(the)g(nodes)h(to)f(\002nely)g(coordinate)h(their)e
(transmissions.)33 b(From)-152 5378 y(the)27 b(CDFs,)h(we)f(can)g(see)g
(the)g(netw)o(ork)h(achie)n(v)o(es)g(less)f(than)g(half)g(of)g(the)2040
529 y @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts0/scatter-r1-m2-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/scatter-r1-m2-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/scatter-r1-m2-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1170 780 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 0) Rshow
1.000 UL
LTb
1170 1344 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 2) Rshow
1.000 UL
LTb
1170 1908 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 4) Rshow
1.000 UL
LTb
1170 2472 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 6) Rshow
1.000 UL
LTb
1170 3036 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 8) Rshow
1.000 UL
LTb
1170 3600 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 10) Rshow
1.000 UL
LTb
1170 4164 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 12) Rshow
1.000 UL
LTb
1170 4728 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 14) Rshow
1.000 UL
LTb
1170 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1968 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2767 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
3565 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
4363 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
5161 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
5960 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Actual throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3964 130 M
(Estimated throughput \(Mbps\)) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
1430 964 M
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 34 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
46 33 V
47 34 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
47 33 V
46 33 V
47 33 V
47 33 V
46 33 V
47 33 V
stroke
LT1
/Helvetica findfont 260 scalefont setfont
1430 927 M
47 27 V
47 26 V
47 26 V
46 27 V
47 26 V
47 27 V
47 26 V
46 27 V
47 26 V
47 26 V
47 27 V
46 26 V
47 27 V
47 26 V
46 26 V
47 27 V
47 26 V
47 27 V
46 26 V
47 26 V
47 27 V
47 26 V
46 27 V
47 26 V
47 27 V
47 26 V
46 26 V
47 27 V
47 26 V
46 27 V
47 26 V
47 26 V
47 27 V
46 26 V
47 27 V
47 26 V
47 27 V
46 26 V
47 26 V
47 27 V
47 26 V
46 27 V
47 26 V
47 26 V
46 27 V
47 26 V
47 27 V
47 26 V
46 27 V
47 26 V
47 26 V
47 27 V
46 26 V
47 27 V
47 26 V
47 26 V
46 27 V
47 26 V
47 27 V
47 26 V
46 27 V
47 26 V
47 26 V
46 27 V
47 26 V
47 27 V
47 26 V
46 26 V
47 27 V
47 26 V
47 27 V
46 26 V
47 26 V
47 27 V
47 26 V
46 27 V
47 26 V
47 27 V
46 26 V
47 26 V
47 27 V
47 26 V
46 27 V
47 26 V
47 26 V
47 27 V
46 26 V
47 27 V
47 26 V
47 27 V
46 26 V
47 26 V
47 27 V
47 26 V
46 27 V
47 26 V
47 26 V
46 27 V
47 26 V
2.000 UP
stroke
LT2
/Helvetica findfont 260 scalefont setfont
1817 1233 CircleF
1430 959 CircleF
1735 1179 CircleF
1797 1218 CircleF
1556 1043 CircleF
1550 1048 CircleF
1439 970 CircleF
1609 1089 CircleF
1679 1134 CircleF
1753 1188 CircleF
1696 1145 CircleF
2700 1858 CircleF
4295 2955 CircleF
1687 1128 CircleF
2543 1731 CircleF
2383 1629 CircleF
1678 1137 CircleF
1861 1266 CircleF
1993 1362 CircleF
3072 2115 CircleF
2058 1391 CircleF
3176 2174 CircleF
3100 2137 CircleF
2454 1668 CircleF
3444 2361 CircleF
3013 2064 CircleF
2711 1860 CircleF
3531 2006 CircleF
1939 1323 CircleF
2282 1563 CircleF
2044 1334 CircleF
3677 2516 CircleF
4012 2751 CircleF
2504 1647 CircleF
2613 1782 CircleF
2005 1369 CircleF
3219 2058 CircleF
3947 2674 CircleF
2389 1636 CircleF
4714 3271 CircleF
3680 2333 CircleF
3725 2518 CircleF
3185 2171 CircleF
3310 2206 CircleF
2861 1941 CircleF
3198 1832 CircleF
3922 2483 CircleF
5520 2894 CircleF
3670 2465 CircleF
2676 1768 CircleF
6057 3205 CircleF
5035 3056 CircleF
4168 2825 CircleF
4414 2559 CircleF
3279 2164 CircleF
4019 2771 CircleF
3386 2275 CircleF
3252 2229 CircleF
4324 2969 CircleF
5530 2457 CircleF
5741 3089 CircleF
5190 2881 CircleF
4000 2591 CircleF
5355 2700 CircleF
4872 3096 CircleF
3960 2365 CircleF
5164 3015 CircleF
4545 3052 CircleF
4174 2515 CircleF
5026 3083 CircleF
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 1002 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts0/cdf-r1-m2-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/cdf-r1-m2-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/cdf-r1-m2-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1326 780 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0) Rshow
1.000 UL
LTb
1326 1175 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.1) Rshow
1.000 UL
LTb
1326 1570 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.2) Rshow
1.000 UL
LTb
1326 1964 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.3) Rshow
1.000 UL
LTb
1326 2359 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.4) Rshow
1.000 UL
LTb
1326 2754 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.5) Rshow
1.000 UL
LTb
1326 3149 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.6) Rshow
1.000 UL
LTb
1326 3544 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.7) Rshow
1.000 UL
LTb
1326 3938 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.8) Rshow
1.000 UL
LTb
1326 4333 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.9) Rshow
1.000 UL
LTb
1326 4728 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 1) Rshow
1.000 UL
LTb
1326 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
2412 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.2) Cshow
1.000 UL
LTb
3499 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.4) Cshow
1.000 UL
LTb
4585 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.6) Cshow
1.000 UL
LTb
5672 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.8) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Fractions of runs) Cshow
grestore
LTb
LCb setrgbcolor
4042 130 M
(Ratios between actual and estimated throughput) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
1482 4535 M
(scale=1) Lshow
LT0
3042 4535 M
750 0 V
4284 836 M
569 57 V
209 56 V
79 57 V
69 56 V
103 56 V
6 57 V
25 56 V
199 57 V
86 56 V
66 56 V
73 57 V
86 56 V
64 57 V
163 56 V
2 56 V
38 57 V
16 56 V
57 57 V
52 56 V
73 56 V
51 57 V
0 56 V
79 57 V
49 56 V
4 56 V
7 57 V
4 56 V
42 57 V
5 56 V
10 56 V
2 57 V
32 56 V
8 57 V
0 56 V
20 56 V
13 57 V
4 56 V
1 57 V
6 56 V
1 56 V
5 57 V
6 56 V
0 57 V
2 56 V
8 56 V
0 57 V
2 56 V
2 57 V
17 56 V
1 56 V
3 57 V
2 56 V
8 57 V
3 56 V
6 56 V
3 57 V
1 56 V
3 57 V
2 56 V
4 56 V
3 57 V
3 56 V
4 57 V
3 56 V
7 56 V
1 57 V
0 56 V
1 57 V
0 56 V
4284 836 Pls
4853 893 Pls
5062 949 Pls
5141 1006 Pls
5210 1062 Pls
5313 1118 Pls
5319 1175 Pls
5344 1231 Pls
5543 1288 Pls
5629 1344 Pls
5695 1400 Pls
5768 1457 Pls
5854 1513 Pls
5918 1570 Pls
6081 1626 Pls
6083 1682 Pls
6121 1739 Pls
6137 1795 Pls
6194 1852 Pls
6246 1908 Pls
6319 1964 Pls
6370 2021 Pls
6370 2077 Pls
6449 2134 Pls
6498 2190 Pls
6502 2246 Pls
6509 2303 Pls
6513 2359 Pls
6555 2416 Pls
6560 2472 Pls
6570 2528 Pls
6572 2585 Pls
6604 2641 Pls
6612 2698 Pls
6612 2754 Pls
6632 2810 Pls
6645 2867 Pls
6649 2923 Pls
6650 2980 Pls
6656 3036 Pls
6657 3092 Pls
6662 3149 Pls
6668 3205 Pls
6668 3262 Pls
6670 3318 Pls
6678 3374 Pls
6678 3431 Pls
6680 3487 Pls
6682 3544 Pls
6699 3600 Pls
6700 3656 Pls
6703 3713 Pls
6705 3769 Pls
6713 3826 Pls
6716 3882 Pls
6722 3938 Pls
6725 3995 Pls
6726 4051 Pls
6729 4108 Pls
6731 4164 Pls
6735 4220 Pls
6738 4277 Pls
6741 4333 Pls
6745 4390 Pls
6748 4446 Pls
6755 4502 Pls
6756 4559 Pls
6756 4615 Pls
6757 4672 Pls
6757 4728 Pls
3417 4535 Pls
2.000 UP
1.000 UL
LT1
LTb
1482 4275 M
(scale=1.1) Lshow
LT1
3042 4275 M
750 0 V
4028 836 M
503 57 V
195 56 V
74 57 V
25 56 V
46 56 V
45 57 V
53 56 V
205 57 V
102 56 V
11 56 V
82 57 V
75 56 V
45 57 V
30 56 V
13 56 V
37 57 V
48 56 V
84 57 V
117 56 V
81 56 V
19 57 V
13 56 V
31 57 V
7 56 V
47 56 V
3 57 V
1 56 V
8 57 V
12 56 V
6 56 V
39 57 V
0 56 V
14 57 V
11 56 V
20 56 V
3 57 V
5 56 V
1 57 V
15 56 V
8 56 V
9 57 V
1 56 V
0 57 V
7 56 V
18 56 V
3 57 V
0 56 V
3 57 V
1 56 V
3 56 V
4 57 V
16 56 V
5 57 V
5 56 V
5 56 V
7 57 V
1 56 V
6 57 V
2 56 V
25 56 V
6 57 V
39 56 V
3 57 V
3 56 V
9 56 V
37 57 V
317 56 V
58 57 V
2 56 V
4028 836 Crs
4531 893 Crs
4726 949 Crs
4800 1006 Crs
4825 1062 Crs
4871 1118 Crs
4916 1175 Crs
4969 1231 Crs
5174 1288 Crs
5276 1344 Crs
5287 1400 Crs
5369 1457 Crs
5444 1513 Crs
5489 1570 Crs
5519 1626 Crs
5532 1682 Crs
5569 1739 Crs
5617 1795 Crs
5701 1852 Crs
5818 1908 Crs
5899 1964 Crs
5918 2021 Crs
5931 2077 Crs
5962 2134 Crs
5969 2190 Crs
6016 2246 Crs
6019 2303 Crs
6020 2359 Crs
6028 2416 Crs
6040 2472 Crs
6046 2528 Crs
6085 2585 Crs
6085 2641 Crs
6099 2698 Crs
6110 2754 Crs
6130 2810 Crs
6133 2867 Crs
6138 2923 Crs
6139 2980 Crs
6154 3036 Crs
6162 3092 Crs
6171 3149 Crs
6172 3205 Crs
6172 3262 Crs
6179 3318 Crs
6197 3374 Crs
6200 3431 Crs
6200 3487 Crs
6203 3544 Crs
6204 3600 Crs
6207 3656 Crs
6211 3713 Crs
6227 3769 Crs
6232 3826 Crs
6237 3882 Crs
6242 3938 Crs
6249 3995 Crs
6250 4051 Crs
6256 4108 Crs
6258 4164 Crs
6283 4220 Crs
6289 4277 Crs
6328 4333 Crs
6331 4390 Crs
6334 4446 Crs
6343 4502 Crs
6380 4559 Crs
6697 4615 Crs
6755 4672 Crs
6757 4728 Crs
3417 4275 Crs
2.000 UP
1.000 UL
LT2
LTb
1482 4015 M
(scale=1.2) Lshow
LT2
3042 4015 M
750 0 V
8 -3179 R
485 57 V
159 56 V
2 57 V
65 56 V
59 56 V
19 57 V
67 56 V
175 57 V
56 56 V
47 56 V
17 57 V
5 56 V
108 57 V
22 56 V
6 56 V
35 57 V
130 56 V
50 57 V
22 56 V
46 56 V
18 57 V
35 56 V
9 57 V
77 56 V
2 56 V
2 57 V
18 56 V
32 57 V
59 56 V
2 56 V
2 57 V
11 56 V
27 57 V
8 56 V
1 56 V
7 57 V
11 56 V
5 57 V
37 56 V
2 56 V
16 57 V
1 56 V
12 57 V
1 56 V
3 56 V
3 57 V
4 56 V
10 57 V
8 56 V
6 56 V
2 57 V
4 56 V
16 57 V
5 56 V
2 56 V
5 57 V
8 56 V
5 57 V
2 56 V
5 56 V
15 57 V
6 56 V
9 57 V
18 56 V
11 56 V
5 57 V
385 56 V
301 57 V
121 56 V
3800 836 Star
4285 893 Star
4444 949 Star
4446 1006 Star
4511 1062 Star
4570 1118 Star
4589 1175 Star
4656 1231 Star
4831 1288 Star
4887 1344 Star
4934 1400 Star
4951 1457 Star
4956 1513 Star
5064 1570 Star
5086 1626 Star
5092 1682 Star
5127 1739 Star
5257 1795 Star
5307 1852 Star
5329 1908 Star
5375 1964 Star
5393 2021 Star
5428 2077 Star
5437 2134 Star
5514 2190 Star
5516 2246 Star
5518 2303 Star
5536 2359 Star
5568 2416 Star
5627 2472 Star
5629 2528 Star
5631 2585 Star
5642 2641 Star
5669 2698 Star
5677 2754 Star
5678 2810 Star
5685 2867 Star
5696 2923 Star
5701 2980 Star
5738 3036 Star
5740 3092 Star
5756 3149 Star
5757 3205 Star
5769 3262 Star
5770 3318 Star
5773 3374 Star
5776 3431 Star
5780 3487 Star
5790 3544 Star
5798 3600 Star
5804 3656 Star
5806 3713 Star
5810 3769 Star
5826 3826 Star
5831 3882 Star
5833 3938 Star
5838 3995 Star
5846 4051 Star
5851 4108 Star
5853 4164 Star
5858 4220 Star
5873 4277 Star
5879 4333 Star
5888 4390 Star
5906 4446 Star
5917 4502 Star
5922 4559 Star
6307 4615 Star
6608 4672 Star
6729 4728 Star
3417 4015 Star
2.000 UP
1.000 UL
LT3
LTb
1482 3755 M
(scale=1.5) Lshow
LT3
3042 3755 M
750 0 V
3293 836 M
340 57 V
51 56 V
102 57 V
12 56 V
17 56 V
32 57 V
27 56 V
42 57 V
31 56 V
40 56 V
10 57 V
124 56 V
24 57 V
39 56 V
4 56 V
7 57 V
47 56 V
32 57 V
94 56 V
7 56 V
14 57 V
138 56 V
10 57 V
8 56 V
34 56 V
13 57 V
18 56 V
62 57 V
16 56 V
3 56 V
18 57 V
23 56 V
11 57 V
10 56 V
10 56 V
21 57 V
11 56 V
33 57 V
18 56 V
4 56 V
5 57 V
4 56 V
15 57 V
1 56 V
1 56 V
2 57 V
6 56 V
7 57 V
5 56 V
1 56 V
4 57 V
4 56 V
3 57 V
1 56 V
5 56 V
8 57 V
3 56 V
11 57 V
2 56 V
18 56 V
2 57 V
1 56 V
17 57 V
14 56 V
8 56 V
6 57 V
432 56 V
142 57 V
212 56 V
3293 836 Box
3633 893 Box
3684 949 Box
3786 1006 Box
3798 1062 Box
3815 1118 Box
3847 1175 Box
3874 1231 Box
3916 1288 Box
3947 1344 Box
3987 1400 Box
3997 1457 Box
4121 1513 Box
4145 1570 Box
4184 1626 Box
4188 1682 Box
4195 1739 Box
4242 1795 Box
4274 1852 Box
4368 1908 Box
4375 1964 Box
4389 2021 Box
4527 2077 Box
4537 2134 Box
4545 2190 Box
4579 2246 Box
4592 2303 Box
4610 2359 Box
4672 2416 Box
4688 2472 Box
4691 2528 Box
4709 2585 Box
4732 2641 Box
4743 2698 Box
4753 2754 Box
4763 2810 Box
4784 2867 Box
4795 2923 Box
4828 2980 Box
4846 3036 Box
4850 3092 Box
4855 3149 Box
4859 3205 Box
4874 3262 Box
4875 3318 Box
4876 3374 Box
4878 3431 Box
4884 3487 Box
4891 3544 Box
4896 3600 Box
4897 3656 Box
4901 3713 Box
4905 3769 Box
4908 3826 Box
4909 3882 Box
4914 3938 Box
4922 3995 Box
4925 4051 Box
4936 4108 Box
4938 4164 Box
4956 4220 Box
4958 4277 Box
4959 4333 Box
4976 4390 Box
4990 4446 Box
4998 4502 Box
5004 4559 Box
5436 4615 Box
5578 4672 Box
5790 4728 Box
3417 3755 Box
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 4033 529 a
SDict begin H.S end
 4033 529 a 4033 529 a
SDict begin 10.5 H.A end
 4033 529
a 4033 529 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.9) cvn H.B /DEST pdfmark
end
 4033 529 a 2040 669 a FA(Figur)o(e)17 b(9:)2353
669 y
SDict begin H.S end
 2353 669 a 2353 669 a
SDict begin H.R end
 2353 669 a 2353 669 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.9) cvn H.B /DEST pdfmark
end
 2353
669 a FA(Thr)o(oughput)e(pr)o(ediction)h(accuracy)j(in)e(simulation)g
(of)h(our)2040 756 y(model)f(f)n(or)g(grid)f(topologies,)i(saturated)e
(UDP)g(traf\002c,)h(and)f(R)m(TS/CTS)2040 843 y(=)i(OFF)-8
b(.)2040 1533 y @beginspecial 50 @llx 50 @lly 410 @urx
302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts0/scatter-r2-m2-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/scatter-r2-m2-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/scatter-r2-m2-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1170 780 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 0) Rshow
1.000 UL
LTb
1170 1175 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 2) Rshow
1.000 UL
LTb
1170 1570 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 4) Rshow
1.000 UL
LTb
1170 1964 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 6) Rshow
1.000 UL
LTb
1170 2359 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 8) Rshow
1.000 UL
LTb
1170 2754 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 10) Rshow
1.000 UL
LTb
1170 3149 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 12) Rshow
1.000 UL
LTb
1170 3544 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 14) Rshow
1.000 UL
LTb
1170 3938 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 16) Rshow
1.000 UL
LTb
1170 4333 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 18) Rshow
1.000 UL
LTb
1170 4728 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 20) Rshow
1.000 UL
LTb
1170 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1729 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2288 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2846 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3405 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3964 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4523 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
5082 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5640 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
6199 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Actual throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3964 130 M
(Estimated throughput \(Mbps\)) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
1563 1058 M
51 36 V
51 35 V
50 36 V
51 36 V
51 36 V
50 36 V
51 35 V
51 36 V
50 36 V
51 36 V
50 36 V
51 35 V
51 36 V
50 36 V
51 36 V
51 35 V
50 36 V
51 36 V
51 36 V
50 36 V
51 35 V
51 36 V
50 36 V
51 36 V
51 36 V
50 35 V
51 36 V
51 36 V
50 36 V
51 36 V
51 35 V
50 36 V
51 36 V
51 36 V
50 35 V
51 36 V
51 36 V
50 36 V
51 36 V
51 35 V
50 36 V
51 36 V
50 36 V
51 36 V
51 35 V
50 36 V
51 36 V
51 36 V
50 36 V
51 35 V
51 36 V
50 36 V
51 36 V
51 35 V
50 36 V
51 36 V
51 36 V
50 36 V
51 35 V
51 36 V
50 36 V
51 36 V
51 36 V
50 35 V
51 36 V
51 36 V
50 36 V
51 36 V
51 35 V
50 36 V
51 36 V
50 36 V
51 35 V
51 36 V
50 36 V
51 36 V
51 36 V
50 35 V
51 36 V
51 36 V
50 36 V
51 36 V
51 35 V
50 36 V
51 36 V
51 36 V
50 36 V
51 35 V
51 36 V
50 36 V
51 36 V
51 35 V
50 36 V
51 36 V
51 36 V
50 36 V
51 35 V
51 36 V
50 36 V
stroke
LT1
/Helvetica findfont 260 scalefont setfont
1563 1002 M
51 29 V
51 29 V
50 28 V
51 29 V
51 28 V
50 29 V
51 29 V
51 28 V
50 29 V
51 29 V
50 28 V
51 29 V
51 28 V
50 29 V
51 29 V
51 28 V
50 29 V
51 29 V
51 28 V
50 29 V
51 29 V
51 28 V
50 29 V
51 28 V
51 29 V
50 29 V
51 28 V
51 29 V
50 29 V
51 28 V
51 29 V
50 28 V
51 29 V
51 29 V
50 28 V
51 29 V
51 29 V
50 28 V
51 29 V
51 29 V
50 28 V
51 29 V
50 28 V
51 29 V
51 29 V
50 28 V
51 29 V
51 29 V
50 28 V
51 29 V
51 28 V
50 29 V
51 29 V
51 28 V
50 29 V
51 29 V
51 28 V
50 29 V
51 29 V
51 28 V
50 29 V
51 28 V
51 29 V
50 29 V
51 28 V
51 29 V
50 29 V
51 28 V
51 29 V
50 28 V
51 29 V
50 29 V
51 28 V
51 29 V
50 29 V
51 28 V
51 29 V
50 29 V
51 28 V
51 29 V
50 28 V
51 29 V
51 29 V
50 28 V
51 29 V
51 29 V
50 28 V
51 29 V
51 28 V
50 29 V
51 29 V
51 28 V
50 29 V
51 29 V
51 28 V
50 29 V
51 29 V
51 28 V
50 29 V
2.000 UP
stroke
LT2
/Helvetica findfont 260 scalefont setfont
1738 1057 CircleF
1607 898 CircleF
1943 1105 CircleF
1733 1095 CircleF
1698 965 CircleF
1737 940 CircleF
1563 927 CircleF
1726 1049 CircleF
1663 990 CircleF
1699 1067 CircleF
1844 975 CircleF
2515 1548 CircleF
3836 2309 CircleF
2117 1032 CircleF
2344 1445 CircleF
2267 1327 CircleF
1813 1026 CircleF
1770 1071 CircleF
2248 1109 CircleF
2774 1715 CircleF
2465 1054 CircleF
3264 1617 CircleF
2803 1728 CircleF
3297 1324 CircleF
3224 1892 CircleF
2711 1679 CircleF
2737 1370 CircleF
3794 1492 CircleF
2506 891 CircleF
2276 1228 CircleF
2185 1097 CircleF
3469 1998 CircleF
3958 1253 CircleF
2966 1352 CircleF
2951 1314 CircleF
2450 874 CircleF
3166 1084 CircleF
4074 2117 CircleF
3004 945 CircleF
5276 2352 CircleF
5150 1432 CircleF
4753 2006 CircleF
3378 1580 CircleF
3908 1765 CircleF
3447 910 CircleF
4101 1119 CircleF
4029 1983 CircleF
5167 1935 CircleF
4156 1755 CircleF
3171 881 CircleF
6268 2918 CircleF
5999 1999 CircleF
5350 1710 CircleF
6000 2051 CircleF
3912 1104 CircleF
6392 1623 CircleF
4796 1443 CircleF
3730 1099 CircleF
5834 1487 CircleF
6486 2239 CircleF
6578 2387 CircleF
4866 2118 CircleF
4471 1844 CircleF
5426 1819 CircleF
5679 2201 CircleF
4418 1319 CircleF
4849 2351 CircleF
5112 1554 CircleF
5126 1770 CircleF
5359 1339 CircleF
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 1002 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts0/cdf-r2-m2-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/cdf-r2-m2-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/cdf-r2-m2-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1326 780 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0) Rshow
1.000 UL
LTb
1326 1175 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.1) Rshow
1.000 UL
LTb
1326 1570 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.2) Rshow
1.000 UL
LTb
1326 1964 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.3) Rshow
1.000 UL
LTb
1326 2359 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.4) Rshow
1.000 UL
LTb
1326 2754 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.5) Rshow
1.000 UL
LTb
1326 3149 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.6) Rshow
1.000 UL
LTb
1326 3544 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.7) Rshow
1.000 UL
LTb
1326 3938 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.8) Rshow
1.000 UL
LTb
1326 4333 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.9) Rshow
1.000 UL
LTb
1326 4728 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 1) Rshow
1.000 UL
LTb
1326 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
2412 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.2) Cshow
1.000 UL
LTb
3499 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.4) Cshow
1.000 UL
LTb
4585 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.6) Cshow
1.000 UL
LTb
5672 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.8) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Fractions of runs) Cshow
grestore
LTb
LCb setrgbcolor
4042 130 M
(Ratios between actual and estimated throughput) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
1713 836 M
51 57 V
124 56 V
75 57 V
55 56 V
196 56 V
22 57 V
49 56 V
68 57 V
139 56 V
6 56 V
68 57 V
21 56 V
16 57 V
27 56 V
102 56 V
104 57 V
119 56 V
81 57 V
166 56 V
48 56 V
17 57 V
26 56 V
56 57 V
25 56 V
19 56 V
19 57 V
24 56 V
60 57 V
51 56 V
5 56 V
58 57 V
22 56 V
42 57 V
50 56 V
25 56 V
26 57 V
30 56 V
31 57 V
120 56 V
57 56 V
79 57 V
17 56 V
2 57 V
84 56 V
24 56 V
51 57 V
0 56 V
128 57 V
45 56 V
108 56 V
9 57 V
2 56 V
35 57 V
12 56 V
256 56 V
186 57 V
8 56 V
10 57 V
91 56 V
241 56 V
85 57 V
12 56 V
125 57 V
58 56 V
34 56 V
20 57 V
55 56 V
17 57 V
4 56 V
1713 836 Pls
1764 893 Pls
1888 949 Pls
1963 1006 Pls
2018 1062 Pls
2214 1118 Pls
2236 1175 Pls
2285 1231 Pls
2353 1288 Pls
2492 1344 Pls
2498 1400 Pls
2566 1457 Pls
2587 1513 Pls
2603 1570 Pls
2630 1626 Pls
2732 1682 Pls
2836 1739 Pls
2955 1795 Pls
3036 1852 Pls
3202 1908 Pls
3250 1964 Pls
3267 2021 Pls
3293 2077 Pls
3349 2134 Pls
3374 2190 Pls
3393 2246 Pls
3412 2303 Pls
3436 2359 Pls
3496 2416 Pls
3547 2472 Pls
3552 2528 Pls
3610 2585 Pls
3632 2641 Pls
3674 2698 Pls
3724 2754 Pls
3749 2810 Pls
3775 2867 Pls
3805 2923 Pls
3836 2980 Pls
3956 3036 Pls
4013 3092 Pls
4092 3149 Pls
4109 3205 Pls
4111 3262 Pls
4195 3318 Pls
4219 3374 Pls
4270 3431 Pls
4270 3487 Pls
4398 3544 Pls
4443 3600 Pls
4551 3656 Pls
4560 3713 Pls
4562 3769 Pls
4597 3826 Pls
4609 3882 Pls
4865 3938 Pls
5051 3995 Pls
5059 4051 Pls
5069 4108 Pls
5160 4164 Pls
5401 4220 Pls
5486 4277 Pls
5498 4333 Pls
5623 4390 Pls
5681 4446 Pls
5715 4502 Pls
5735 4559 Pls
5790 4615 Pls
5807 4672 Pls
5811 4728 Pls
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 4033 1533 a
SDict begin H.S end
 4033 1533 a 4033 1533 a
SDict begin 10.5 H.A end
 4033
1533 a 4033 1533 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.10) cvn H.B /DEST pdfmark
end
 4033 1533 a 2040 1673 a FA(Figur)o(e)29
b(10:)2424 1673 y
SDict begin H.S end
 2424 1673 a 2424 1673 a
SDict begin H.R end
 2424 1673 a
2424 1673 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.10) cvn H.B /DEST pdfmark
end
 2424 1673 a FA(Thr)o(oughput)e(pr)o(ediction)h(accuracy)i
(in)f(simulation)f(of)2040 1760 y(the)j(CG-based)h(model)g(f)n(or)g
(grid)g(topologies,)j(saturated)d(UDP)f(de-)2040 1847
y(mands,)18 b(and)g(without)g(R)m(TS/CTS.)2040 2007 y
FB(predicted)25 b(throughput)g(in)f(half)f(of)h(the)g(cases.)38
b(Thus,)24 b(modeling)h(802.11)2040 2094 y(DCF)-6 b(,)20
b(as)h(our)g(model)h(does,)g(is)e(k)o(e)o(y)i(to)f(accurate)h
(predictions)g(of)f(netw)o(ork)2040 2181 y(throughput.)46
b(Interestingly)-5 b(,)29 b(the)d(inaccurac)o(y)h(of)f(the)g(CG-based)h
(model)2040 2268 y(also)16 b(hints)f(at)g(the)g(performance)i(cost)e
(of)h(the)f(CSMA-based)h(802.11)g(MA)m(C)2040 2356 y(under)k(hea)o(vy)g
(load.)2115 2443 y(Figure)2337 2443 y
SDict begin H.S end
 2337 2443 a FB(11)2411
2392 y
SDict begin H.R end
 2411 2392 a 2411 2443 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.11) cvn H.B /ANN pdfmark end
 2411 2443 a 28 w FB(sho)n(ws)28
b(that)f(our)h(model)g(is)f(rob)o(ust)g(across)h(a)f(wide)h(range)2040
2530 y(of)19 b(other)g(simulated)h(con\002gurations.)k(F)o(or)19
b(TCP)f(traf)n(\002c,)g(it)g(o)o(v)o(erestimates)2040
2617 y(throughput)i(by)e(more)g(than)g(20\045)h(in)e(fe)n(wer)h(than)g
(20\045)h(of)f(the)g(cases.)23 b(This)2040 2704 y(accurac)o(y)c(is)f
(less)f(than)i(that)e(for)h(UDP)f(because)i(TCP)e(creates)h(b)o(ursty)g
(traf-)2040 2792 y(\002c)k(and)i(losses,)g(which)f(we)g(do)g(not)g
(currently)h(model.)35 b(Ho)n(we)n(v)o(er)m(,)25 b(as)e(for)2040
2879 y(UDP)-8 b(,)23 b(we)h(ne)n(v)o(er)h(under)o(-predict)h(the)e
(netw)o(ork')l(s)h(TCP)e(throughput)k(e)n(v)o(en)2040
2966 y(by)19 b(10\045.)2115 3053 y(The)e(remaining)i(graphs)f(in)f(the)
h(\002gure)g(sho)n(w)g(that)f(the)h(accurac)o(y)g(of)g(our)2040
3140 y(model)d(is)g(high)g(e)n(v)o(en)g(when)h(we)e(switch)h(from)g
(grid)f(to)h(random)h(topologies,)2040 3227 y(or)i(from)f(saturated)h
(demands)h(to)f(randomly)g(assigned)h(demands,)g(or)e(from)2040
3315 y(not)i(using)h(R)l(TS/CTS)c(to)j(using)g(it.)2040
3401 y
SDict begin H.S end
 2040 3401 a 2040 3401 a
SDict begin 10.5 H.A end
 2040 3401 a 2040 3401
a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.7.2) cvn H.B /DEST
pdfmark end
 2040 3401 a 71 x FC(7.2)99 b(T)-9 b(estbed)27 b(Experiments)2115
3580 y FB(Figure)2337 3580 y
SDict begin H.S end
 2337 3580 a FB(12)2411 3530
y
SDict begin H.R end
 2411 3530 a 2411 3580 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.12) cvn H.B /ANN pdfmark end
 2411 3580 a 29 w FB(sho)n(ws)h(that)f(our)h
(model)h(is)e(f)o(airly)g(accurate)i(in)e(the)h(more)2040
3667 y(realistic)19 b(testbed)g(setting)h(as)f(well.)24
b(F)o(or)18 b(UDP)-8 b(,)18 b(only)i(in)f(10\045)h(of)g(the)f(cases)
2040 3755 y(we)g(o)o(v)o(er)o(-predict)g(throughput)i(by)e(more)g(than)
h(20\045.)k(F)o(or)18 b(TCP)-8 b(,)17 b(this)i(o)o(v)o(er)o(-)2040
3842 y(prediction)24 b(occurs)f(for)g(20\045)h(of)e(the)h(cases,)h
(which)f(is)g(similar)f(to)h(that)f(in)2040 3929 y(simulation.)53
b(The)28 b(w)o(orst-case)i(o)o(v)o(er)o(-prediction)f(is)f(less)h(than)
g(40\045)h(for)2040 4016 y(both)23 b(TCP)e(and)i(UDP)-8
b(.)21 b(Meanwhile,)j(as)e(in)g(simulation,)h(our)g(model)g(does)2040
4103 y(not)k(under)o(-predict)h(either)l(.)46 b(F)o(or)26
b(both)i(TCP)d(and)j(UDP)-8 b(,)25 b(the)i(netw)o(ork)h(is)2040
4190 y(unable)20 b(to)f(achie)n(v)o(e)h(demands)g(that)f(ha)o(v)o(e)g
(been)h(scaled)f(by)g(e)n(v)o(en)h(10\045.)2115 4278
y(Figure)2333 4279 y
SDict begin H.S end
 2333 4279 a -1 x FB(13)2407 4227
y
SDict begin H.R end
 2407 4227 a 2407 4278 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.13) cvn H.B /ANN pdfmark end
 2407 4278 a 24 w FB(sho)n(ws)k(the)g
(throughput)h(prediction)f(accurac)o(y)h(using)f(CG-)2040
4365 y(model.)43 b(W)-6 b(e)24 b(see)i(that,)g(as)f(in)g(simulation,)i
(the)e(CG-model)h(consistently)2040 4452 y(o)o(v)o(er)o(-estimates)d
(the)f(achie)n(v)n(able)i(rates.)34 b(Almost)23 b(all)f(the)h(points)g
(are)f(out-)2040 4539 y(side)c(the)g(cone)h(formed)g(by)g
Fz(y)d Ft(=)f Fz(x)k FB(and)f Fz(y)e Ft(=)g FB(0)p Fv(:)p
FB(8)p Fz(x)p FB(,)j(which)f(indicates)h(that)e(in)2040
4626 y(most)i(cases)g(its)g(estimated)g(demands)h(are)f(not)g(achie)n
(v)n(able)i(within)d(80\045.)2040 4718 y
SDict begin H.S end
 2040 4718 a
2040 4718 a
SDict begin 10.5 H.A end
 2040 4718 a 2040 4718 a
SDict begin [ /View [/XYZ H.V] /Dest (section.8) cvn H.B /DEST pdfmark
end
 2040 4718 a 116 x
FC(8.)99 b(PERFORMANCE)25 b(OPTIMIZA)-9 b(TION)2115 4942
y FB(Can)19 b(the)f(accurac)o(y)i(of)f(our)g(model)g(in)f(predicting)i
(the)f(throughout)h(sup-)2040 5029 y(ported)27 b(by)f(the)g(netw)o(ork)
h(be)g(harnessed)g(to)f(impro)o(v)o(e)h(performance,)h(us-)2040
5116 y(ing)e(the)f(methods)h(we)f(outlined)h(earlier?)43
b(W)-6 b(e)25 b(answer)g(this)g(question)h(in)2040 5203
y(this)32 b(section)g(by)h(\002rst)e(considering)i(f)o(airness)g
(maximization)f(and)h(then)2040 5290 y(throughput)c(maximization.)50
b(W)-6 b(e)27 b(compare)i(results)e(with)h(no)g(rate)f(lim-)2040
5378 y(iting,)18 b(as)h(it)g(happens)h(today)-5 b(,)20
b(and)f(with)g(CG-based)g(rate)g(limiting.)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152 -359
a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.10) cvn H.B /DEST pdfmark
end
 -152 -359 a -152
-152 a
SDict begin H.S end
 -152 -152 a -152 -152 a
SDict begin 10.5 H.A end
 -152 -152 a -152 -152
a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.11.1) cvn H.B /DEST
pdfmark end
 -152 -152 a -133 529 a @beginspecial 50 @llx 50 @lly
410 @urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts0/scatter-r1-m2-t0-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/scatter-r1-m2-t0-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/scatter-r1-m2-t0-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1170 780 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 0) Rshow
1.000 UL
LTb
1170 1438 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 2) Rshow
1.000 UL
LTb
1170 2096 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 4) Rshow
1.000 UL
LTb
1170 2754 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 6) Rshow
1.000 UL
LTb
1170 3412 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 8) Rshow
1.000 UL
LTb
1170 4070 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 10) Rshow
1.000 UL
LTb
1170 4728 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 12) Rshow
1.000 UL
LTb
1170 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
2101 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
3033 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
3964 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
4895 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
5827 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Actual throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3964 130 M
(Estimated throughput \(Mbps\)) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
1450 978 M
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 36 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 36 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
50 35 V
49 35 V
50 35 V
49 35 V
50 36 V
50 35 V
49 35 V
50 35 V
49 35 V
50 35 V
49 35 V
stroke
LT1
/Helvetica findfont 260 scalefont setfont
1450 938 M
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 29 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 29 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 28 V
50 28 V
50 28 V
49 28 V
50 28 V
49 29 V
50 28 V
49 28 V
2.000 UP
stroke
LT2
/Helvetica findfont 260 scalefont setfont
1866 1224 CircleF
1450 952 CircleF
1735 1176 CircleF
1802 1205 CircleF
1578 1038 CircleF
1553 1028 CircleF
1462 984 CircleF
1611 1086 CircleF
1715 1139 CircleF
1741 1116 CircleF
1704 1107 CircleF
2764 1903 CircleF
4537 3090 CircleF
1716 1110 CircleF
2679 1783 CircleF
2406 1572 CircleF
1679 1100 CircleF
1898 1176 CircleF
2081 1338 CircleF
3190 2149 CircleF
2163 1442 CircleF
3321 2216 CircleF
3225 2169 CircleF
2568 1732 CircleF
3658 2466 CircleF
3165 2123 CircleF
2898 1937 CircleF
3579 2319 CircleF
1895 1157 CircleF
2363 1606 CircleF
2131 1365 CircleF
3801 2566 CircleF
4165 2819 CircleF
2609 1695 CircleF
2580 1701 CircleF
2080 1361 CircleF
3325 2109 CircleF
4161 2762 CircleF
2054 1362 CircleF
4855 3326 CircleF
3864 2353 CircleF
3699 2491 CircleF
3271 2181 CircleF
3504 2302 CircleF
2926 1983 CircleF
3256 1764 CircleF
4110 2547 CircleF
5672 2824 CircleF
3768 2502 CircleF
2715 1650 CircleF
6358 3400 CircleF
5177 3160 CircleF
4360 2980 CircleF
4485 3000 CircleF
3369 2220 CircleF
4075 2796 CircleF
3616 2389 CircleF
3302 2202 CircleF
5144 3417 CircleF
5820 2515 CircleF
5883 3084 CircleF
5503 2993 CircleF
4257 2732 CircleF
5705 2709 CircleF
5005 3196 CircleF
4195 2459 CircleF
5359 3084 CircleF
4687 2849 CircleF
4309 2517 CircleF
5307 3049 CircleF
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 991 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts0/cdf-r1-m2-t0-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/cdf-r1-m2-t0-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/cdf-r1-m2-t0-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1326 780 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0) Rshow
1.000 UL
LTb
1326 1175 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.1) Rshow
1.000 UL
LTb
1326 1570 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.2) Rshow
1.000 UL
LTb
1326 1964 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.3) Rshow
1.000 UL
LTb
1326 2359 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.4) Rshow
1.000 UL
LTb
1326 2754 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.5) Rshow
1.000 UL
LTb
1326 3149 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.6) Rshow
1.000 UL
LTb
1326 3544 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.7) Rshow
1.000 UL
LTb
1326 3938 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.8) Rshow
1.000 UL
LTb
1326 4333 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.9) Rshow
1.000 UL
LTb
1326 4728 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 1) Rshow
1.000 UL
LTb
1326 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
2412 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.2) Cshow
1.000 UL
LTb
3499 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.4) Cshow
1.000 UL
LTb
4585 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.6) Cshow
1.000 UL
LTb
5672 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.8) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Fractions of runs) Cshow
grestore
LTb
LCb setrgbcolor
4042 130 M
(Ratios between actual and estimated throughput) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
1482 4535 M
(scale=1) Lshow
LT0
3042 4535 M
750 0 V
4194 836 M
401 57 V
222 56 V
136 57 V
131 56 V
124 56 V
44 57 V
70 56 V
190 57 V
30 56 V
12 56 V
26 57 V
14 56 V
63 57 V
157 56 V
33 56 V
2 57 V
44 56 V
55 57 V
23 56 V
33 56 V
30 57 V
2 56 V
15 57 V
16 56 V
90 56 V
13 57 V
11 56 V
6 57 V
29 56 V
9 56 V
7 57 V
4 56 V
14 57 V
45 56 V
45 56 V
6 57 V
15 56 V
21 57 V
3 56 V
0 56 V
35 57 V
2 56 V
6 57 V
9 56 V
15 56 V
2 57 V
2 56 V
3 57 V
12 56 V
4 56 V
18 57 V
7 56 V
26 57 V
2 56 V
6 56 V
1 57 V
10 56 V
16 57 V
2 56 V
30 56 V
9 57 V
27 56 V
10 57 V
12 56 V
6 56 V
3 57 V
28 56 V
32 57 V
25 56 V
4194 836 Pls
4595 893 Pls
4817 949 Pls
4953 1006 Pls
5084 1062 Pls
5208 1118 Pls
5252 1175 Pls
5322 1231 Pls
5512 1288 Pls
5542 1344 Pls
5554 1400 Pls
5580 1457 Pls
5594 1513 Pls
5657 1570 Pls
5814 1626 Pls
5847 1682 Pls
5849 1739 Pls
5893 1795 Pls
5948 1852 Pls
5971 1908 Pls
6004 1964 Pls
6034 2021 Pls
6036 2077 Pls
6051 2134 Pls
6067 2190 Pls
6157 2246 Pls
6170 2303 Pls
6181 2359 Pls
6187 2416 Pls
6216 2472 Pls
6225 2528 Pls
6232 2585 Pls
6236 2641 Pls
6250 2698 Pls
6295 2754 Pls
6340 2810 Pls
6346 2867 Pls
6361 2923 Pls
6382 2980 Pls
6385 3036 Pls
6385 3092 Pls
6420 3149 Pls
6422 3205 Pls
6428 3262 Pls
6437 3318 Pls
6452 3374 Pls
6454 3431 Pls
6456 3487 Pls
6459 3544 Pls
6471 3600 Pls
6475 3656 Pls
6493 3713 Pls
6500 3769 Pls
6526 3826 Pls
6528 3882 Pls
6534 3938 Pls
6535 3995 Pls
6545 4051 Pls
6561 4108 Pls
6563 4164 Pls
6593 4220 Pls
6602 4277 Pls
6629 4333 Pls
6639 4390 Pls
6651 4446 Pls
6657 4502 Pls
6660 4559 Pls
6688 4615 Pls
6720 4672 Pls
6745 4728 Pls
3417 4535 Pls
2.000 UP
1.000 UL
LT1
LTb
1482 4275 M
(scale=1.1) Lshow
LT1
3042 4275 M
750 0 V
4039 836 M
347 57 V
85 56 V
41 57 V
351 56 V
9 56 V
30 57 V
103 56 V
148 57 V
26 56 V
11 56 V
1 57 V
24 56 V
85 57 V
138 56 V
49 56 V
12 57 V
22 56 V
36 57 V
13 56 V
80 56 V
14 57 V
20 56 V
16 57 V
66 56 V
13 56 V
20 57 V
2 56 V
8 57 V
4 56 V
30 56 V
14 57 V
24 56 V
19 57 V
25 56 V
18 56 V
36 57 V
12 56 V
4 57 V
5 56 V
7 56 V
0 57 V
1 56 V
17 57 V
4 56 V
1 56 V
2 57 V
11 56 V
2 57 V
18 56 V
45 56 V
9 57 V
0 56 V
3 57 V
3 56 V
9 56 V
24 57 V
26 56 V
1 57 V
8 56 V
19 56 V
8 57 V
51 56 V
12 57 V
44 56 V
43 56 V
75 57 V
4 56 V
33 57 V
4 56 V
4039 836 Crs
4386 893 Crs
4471 949 Crs
4512 1006 Crs
4863 1062 Crs
4872 1118 Crs
4902 1175 Crs
5005 1231 Crs
5153 1288 Crs
5179 1344 Crs
5190 1400 Crs
5191 1457 Crs
5215 1513 Crs
5300 1570 Crs
5438 1626 Crs
5487 1682 Crs
5499 1739 Crs
5521 1795 Crs
5557 1852 Crs
5570 1908 Crs
5650 1964 Crs
5664 2021 Crs
5684 2077 Crs
5700 2134 Crs
5766 2190 Crs
5779 2246 Crs
5799 2303 Crs
5801 2359 Crs
5809 2416 Crs
5813 2472 Crs
5843 2528 Crs
5857 2585 Crs
5881 2641 Crs
5900 2698 Crs
5925 2754 Crs
5943 2810 Crs
5979 2867 Crs
5991 2923 Crs
5995 2980 Crs
6000 3036 Crs
6007 3092 Crs
6007 3149 Crs
6008 3205 Crs
6025 3262 Crs
6029 3318 Crs
6030 3374 Crs
6032 3431 Crs
6043 3487 Crs
6045 3544 Crs
6063 3600 Crs
6108 3656 Crs
6117 3713 Crs
6117 3769 Crs
6120 3826 Crs
6123 3882 Crs
6132 3938 Crs
6156 3995 Crs
6182 4051 Crs
6183 4108 Crs
6191 4164 Crs
6210 4220 Crs
6218 4277 Crs
6269 4333 Crs
6281 4390 Crs
6325 4446 Crs
6368 4502 Crs
6443 4559 Crs
6447 4615 Crs
6480 4672 Crs
6484 4728 Crs
3417 4275 Crs
2.000 UP
1.000 UL
LT2
LTb
1482 4015 M
(scale=1.2) Lshow
LT2
3042 4015 M
750 0 V
3823 836 M
311 57 V
52 56 V
22 57 V
364 56 V
13 56 V
27 57 V
112 56 V
109 57 V
12 56 V
46 56 V
1 57 V
5 56 V
69 57 V
68 56 V
36 56 V
49 57 V
49 56 V
12 57 V
7 56 V
57 56 V
19 57 V
41 56 V
65 57 V
2 56 V
38 56 V
5 57 V
2 56 V
13 57 V
49 56 V
2 56 V
7 57 V
6 56 V
5 57 V
63 56 V
7 56 V
13 57 V
12 56 V
11 57 V
1 56 V
10 56 V
5 57 V
4 56 V
10 57 V
3 56 V
5 56 V
4 57 V
3 56 V
16 57 V
15 56 V
25 56 V
2 57 V
1 56 V
11 57 V
0 56 V
13 56 V
20 57 V
12 56 V
2 57 V
12 56 V
29 56 V
15 57 V
16 56 V
18 57 V
57 56 V
31 56 V
4 57 V
101 56 V
3 57 V
61 56 V
3823 836 Star
4134 893 Star
4186 949 Star
4208 1006 Star
4572 1062 Star
4585 1118 Star
4612 1175 Star
4724 1231 Star
4833 1288 Star
4845 1344 Star
4891 1400 Star
4892 1457 Star
4897 1513 Star
4966 1570 Star
5034 1626 Star
5070 1682 Star
5119 1739 Star
5168 1795 Star
5180 1852 Star
5187 1908 Star
5244 1964 Star
5263 2021 Star
5304 2077 Star
5369 2134 Star
5371 2190 Star
5409 2246 Star
5414 2303 Star
5416 2359 Star
5429 2416 Star
5478 2472 Star
5480 2528 Star
5487 2585 Star
5493 2641 Star
5498 2698 Star
5561 2754 Star
5568 2810 Star
5581 2867 Star
5593 2923 Star
5604 2980 Star
5605 3036 Star
5615 3092 Star
5620 3149 Star
5624 3205 Star
5634 3262 Star
5637 3318 Star
5642 3374 Star
5646 3431 Star
5649 3487 Star
5665 3544 Star
5680 3600 Star
5705 3656 Star
5707 3713 Star
5708 3769 Star
5719 3826 Star
5719 3882 Star
5732 3938 Star
5752 3995 Star
5764 4051 Star
5766 4108 Star
5778 4164 Star
5807 4220 Star
5822 4277 Star
5838 4333 Star
5856 4390 Star
5913 4446 Star
5944 4502 Star
5948 4559 Star
6049 4615 Star
6052 4672 Star
6113 4728 Star
3417 4015 Star
2.000 UP
1.000 UL
LT3
LTb
1482 3755 M
(scale=1.5) Lshow
LT3
3042 3755 M
750 0 V
3305 836 M
268 57 V
76 56 V
12 57 V
256 56 V
13 56 V
9 57 V
65 56 V
119 57 V
15 56 V
4 56 V
17 57 V
55 56 V
10 57 V
81 56 V
23 56 V
33 57 V
34 56 V
38 57 V
25 56 V
10 56 V
14 57 V
6 56 V
59 57 V
25 56 V
15 56 V
14 57 V
23 56 V
25 57 V
0 56 V
6 56 V
2 57 V
9 56 V
2 57 V
1 56 V
24 56 V
5 57 V
12 56 V
13 57 V
8 56 V
7 56 V
3 57 V
9 56 V
3 57 V
5 56 V
2 56 V
11 57 V
4 56 V
1 57 V
7 56 V
2 56 V
19 57 V
22 56 V
6 57 V
13 56 V
6 56 V
1 57 V
6 56 V
1 57 V
11 56 V
23 56 V
0 57 V
9 56 V
21 57 V
21 56 V
79 56 V
1 57 V
82 56 V
27 57 V
10 56 V
3305 836 Box
3573 893 Box
3649 949 Box
3661 1006 Box
3917 1062 Box
3930 1118 Box
3939 1175 Box
4004 1231 Box
4123 1288 Box
4138 1344 Box
4142 1400 Box
4159 1457 Box
4214 1513 Box
4224 1570 Box
4305 1626 Box
4328 1682 Box
4361 1739 Box
4395 1795 Box
4433 1852 Box
4458 1908 Box
4468 1964 Box
4482 2021 Box
4488 2077 Box
4547 2134 Box
4572 2190 Box
4587 2246 Box
4601 2303 Box
4624 2359 Box
4649 2416 Box
4649 2472 Box
4655 2528 Box
4657 2585 Box
4666 2641 Box
4668 2698 Box
4669 2754 Box
4693 2810 Box
4698 2867 Box
4710 2923 Box
4723 2980 Box
4731 3036 Box
4738 3092 Box
4741 3149 Box
4750 3205 Box
4753 3262 Box
4758 3318 Box
4760 3374 Box
4771 3431 Box
4775 3487 Box
4776 3544 Box
4783 3600 Box
4785 3656 Box
4804 3713 Box
4826 3769 Box
4832 3826 Box
4845 3882 Box
4851 3938 Box
4852 3995 Box
4858 4051 Box
4859 4108 Box
4870 4164 Box
4893 4220 Box
4893 4277 Box
4902 4333 Box
4923 4390 Box
4944 4446 Box
5023 4502 Box
5024 4559 Box
5106 4615 Box
5133 4672 Box
5143 4728 Box
3417 3755 Box
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial -98 616 a FB(\(a\))25 b Fz(Grid)19 b(topolo)o(gy)l(,)h
FA(saturated)f(TCP)f(demands)p Fz(,)g(without)h(RTS/CTS)-152
1361 y
SDict begin H.S end
 -152 1361 a -152 1361 a
SDict begin 10.5 H.A end
 -152 1361 a -152 1361
a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.11.2) cvn H.B /DEST
pdfmark end
 -152 1361 a 19 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/rand-sparse-inf-rts0/scatter-r1-m2-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-inf-rts0/scatter-r1-m2-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-inf-rts0/scatter-r1-m2-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1170 780 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 0) Rshow
1.000 UL
LTb
1170 1344 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 2) Rshow
1.000 UL
LTb
1170 1908 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 4) Rshow
1.000 UL
LTb
1170 2472 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 6) Rshow
1.000 UL
LTb
1170 3036 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 8) Rshow
1.000 UL
LTb
1170 3600 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 10) Rshow
1.000 UL
LTb
1170 4164 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 12) Rshow
1.000 UL
LTb
1170 4728 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 14) Rshow
1.000 UL
LTb
1170 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1968 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2767 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
3565 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
4363 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
5161 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
5960 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Actual throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3964 130 M
(Estimated throughput \(Mbps\)) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
1440 970 M
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
53 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
53 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
53 37 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
53 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 37 V
53 36 V
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
53 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
53 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
52 37 V
52 37 V
52 37 V
52 37 V
52 36 V
53 37 V
52 37 V
52 37 V
52 37 V
52 36 V
stroke
LT1
/Helvetica findfont 260 scalefont setfont
1440 932 M
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
53 30 V
52 29 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 29 V
53 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
53 29 V
52 30 V
52 29 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
53 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
53 30 V
52 29 V
52 30 V
52 29 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
53 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 29 V
52 30 V
52 29 V
53 30 V
52 29 V
52 30 V
52 29 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
52 29 V
52 30 V
53 29 V
52 29 V
52 30 V
52 29 V
52 30 V
2.000 UP
stroke
LT2
/Helvetica findfont 260 scalefont setfont
1637 1106 CircleF
1690 1148 CircleF
1868 1267 CircleF
2749 1879 CircleF
1955 1323 CircleF
2182 1489 CircleF
2246 1525 CircleF
1440 970 CircleF
2799 1924 CircleF
1872 1274 CircleF
1700 1135 CircleF
1886 1261 CircleF
1726 1162 CircleF
1456 982 CircleF
2571 1769 CircleF
2375 1620 CircleF
2182 1490 CircleF
2058 1407 CircleF
2856 1968 CircleF
2521 1719 CircleF
2996 2070 CircleF
2041 1395 CircleF
2900 1986 CircleF
3568 2469 CircleF
3390 2348 CircleF
2602 1791 CircleF
2978 2053 CircleF
2423 1642 CircleF
3445 2369 CircleF
2352 1607 CircleF
4595 2900 CircleF
2880 1973 CircleF
3009 2079 CircleF
3755 2577 CircleF
2103 1439 CircleF
3082 2128 CircleF
2914 1829 CircleF
3993 2750 CircleF
4679 3257 CircleF
3207 2192 CircleF
4685 3127 CircleF
4567 3139 CircleF
4365 3018 CircleF
5319 2482 CircleF
2044 1393 CircleF
4334 2987 CircleF
3228 2227 CircleF
4858 3367 CircleF
3151 2176 CircleF
4549 3116 CircleF
3758 2598 CircleF
4132 2827 CircleF
6121 4219 CircleF
3665 2488 CircleF
3997 2774 CircleF
3615 2501 CircleF
4547 2958 CircleF
2294 1571 CircleF
3921 2711 CircleF
3476 2371 CircleF
3871 2663 CircleF
3558 2443 CircleF
4278 2934 CircleF
3141 2142 CircleF
6596 4598 CircleF
4362 3013 CircleF
4940 2747 CircleF
4082 2770 CircleF
4493 3105 CircleF
4562 2859 CircleF
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 991 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/rand-sparse-inf-rts0/cdf-r1-m2-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-inf-rts0/cdf-r1-m2-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-inf-rts0/cdf-r1-m2-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1326 780 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0) Rshow
1.000 UL
LTb
1326 1175 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.1) Rshow
1.000 UL
LTb
1326 1570 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.2) Rshow
1.000 UL
LTb
1326 1964 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.3) Rshow
1.000 UL
LTb
1326 2359 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.4) Rshow
1.000 UL
LTb
1326 2754 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.5) Rshow
1.000 UL
LTb
1326 3149 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.6) Rshow
1.000 UL
LTb
1326 3544 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.7) Rshow
1.000 UL
LTb
1326 3938 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.8) Rshow
1.000 UL
LTb
1326 4333 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.9) Rshow
1.000 UL
LTb
1326 4728 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 1) Rshow
1.000 UL
LTb
1326 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
2412 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.2) Cshow
1.000 UL
LTb
3499 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.4) Cshow
1.000 UL
LTb
4585 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.6) Cshow
1.000 UL
LTb
5672 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.8) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Fractions of runs) Cshow
grestore
LTb
LCb setrgbcolor
4042 130 M
(Ratios between actual and estimated throughput) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
1482 4535 M
(scale=1) Lshow
LT0
3042 4535 M
750 0 V
4480 836 M
857 57 V
614 56 V
87 57 V
46 56 V
201 56 V
175 57 V
11 56 V
17 57 V
93 56 V
9 56 V
20 57 V
6 56 V
16 57 V
7 56 V
1 56 V
2 57 V
2 56 V
5 57 V
5 56 V
3 56 V
8 57 V
1 56 V
3 57 V
2 56 V
4 56 V
5 57 V
3 56 V
1 57 V
4 56 V
1 56 V
0 57 V
1 56 V
1 57 V
5 56 V
0 56 V
9 57 V
1 56 V
0 57 V
5 56 V
3 56 V
6 57 V
1 56 V
1 57 V
1 56 V
3 56 V
2 57 V
3 56 V
4 57 V
2 56 V
3 56 V
0 57 V
1 56 V
0 57 V
0 56 V
3 56 V
3 57 V
0 56 V
4 57 V
1 56 V
1 56 V
0 57 V
1 56 V
1 57 V
0 56 V
1 56 V
1 57 V
0 56 V
0 57 V
1 28 V
4480 836 Pls
5337 893 Pls
5951 949 Pls
6038 1006 Pls
6084 1062 Pls
6285 1118 Pls
6460 1175 Pls
6471 1231 Pls
6488 1288 Pls
6581 1344 Pls
6590 1400 Pls
6610 1457 Pls
6616 1513 Pls
6632 1570 Pls
6639 1626 Pls
6640 1682 Pls
6642 1739 Pls
6644 1795 Pls
6649 1852 Pls
6654 1908 Pls
6657 1964 Pls
6665 2021 Pls
6666 2077 Pls
6669 2134 Pls
6671 2190 Pls
6675 2246 Pls
6680 2303 Pls
6683 2359 Pls
6684 2416 Pls
6688 2472 Pls
6689 2528 Pls
6689 2585 Pls
6690 2641 Pls
6691 2698 Pls
6696 2754 Pls
6696 2810 Pls
6705 2867 Pls
6706 2923 Pls
6706 2980 Pls
6711 3036 Pls
6714 3092 Pls
6720 3149 Pls
6721 3205 Pls
6722 3262 Pls
6723 3318 Pls
6726 3374 Pls
6728 3431 Pls
6731 3487 Pls
6735 3544 Pls
6737 3600 Pls
6740 3656 Pls
6740 3713 Pls
6741 3769 Pls
6741 3826 Pls
6741 3882 Pls
6744 3938 Pls
6747 3995 Pls
6747 4051 Pls
6751 4108 Pls
6752 4164 Pls
6753 4220 Pls
6753 4277 Pls
6754 4333 Pls
6755 4390 Pls
6755 4446 Pls
6756 4502 Pls
6757 4559 Pls
6757 4615 Pls
6757 4672 Pls
3417 4535 Pls
2.000 UP
1.000 UL
LT1
LTb
1482 4275 M
(scale=1.1) Lshow
LT1
3042 4275 M
750 0 V
4181 836 M
797 57 V
573 56 V
63 57 V
84 56 V
121 56 V
44 57 V
108 56 V
8 57 V
85 56 V
36 56 V
10 57 V
8 56 V
15 57 V
17 56 V
2 56 V
9 57 V
7 56 V
1 57 V
4 56 V
14 56 V
3 57 V
0 56 V
1 57 V
1 56 V
5 56 V
7 57 V
4 56 V
2 57 V
0 56 V
12 56 V
3 57 V
7 56 V
3 57 V
1 56 V
0 56 V
4 57 V
12 56 V
0 57 V
2 56 V
0 56 V
2 57 V
3 56 V
1 57 V
4 56 V
0 56 V
4 57 V
5 56 V
43 57 V
8 56 V
1 56 V
7 57 V
2 56 V
3 57 V
1 56 V
2 56 V
4 57 V
19 56 V
0 57 V
17 56 V
5 56 V
16 57 V
5 56 V
4 57 V
61 56 V
6 56 V
33 57 V
169 56 V
14 57 V
60 56 V
4181 836 Crs
4978 893 Crs
5551 949 Crs
5614 1006 Crs
5698 1062 Crs
5819 1118 Crs
5863 1175 Crs
5971 1231 Crs
5979 1288 Crs
6064 1344 Crs
6100 1400 Crs
6110 1457 Crs
6118 1513 Crs
6133 1570 Crs
6150 1626 Crs
6152 1682 Crs
6161 1739 Crs
6168 1795 Crs
6169 1852 Crs
6173 1908 Crs
6187 1964 Crs
6190 2021 Crs
6190 2077 Crs
6191 2134 Crs
6192 2190 Crs
6197 2246 Crs
6204 2303 Crs
6208 2359 Crs
6210 2416 Crs
6210 2472 Crs
6222 2528 Crs
6225 2585 Crs
6232 2641 Crs
6235 2698 Crs
6236 2754 Crs
6236 2810 Crs
6240 2867 Crs
6252 2923 Crs
6252 2980 Crs
6254 3036 Crs
6254 3092 Crs
6256 3149 Crs
6259 3205 Crs
6260 3262 Crs
6264 3318 Crs
6264 3374 Crs
6268 3431 Crs
6273 3487 Crs
6316 3544 Crs
6324 3600 Crs
6325 3656 Crs
6332 3713 Crs
6334 3769 Crs
6337 3826 Crs
6338 3882 Crs
6340 3938 Crs
6344 3995 Crs
6363 4051 Crs
6363 4108 Crs
6380 4164 Crs
6385 4220 Crs
6401 4277 Crs
6406 4333 Crs
6410 4390 Crs
6471 4446 Crs
6477 4502 Crs
6510 4559 Crs
6679 4615 Crs
6693 4672 Crs
6753 4728 Crs
3417 4275 Crs
2.000 UP
1.000 UL
LT2
LTb
1482 4015 M
(scale=1.2) Lshow
LT2
3042 4015 M
750 0 V
3951 836 M
722 57 V
501 56 V
69 57 V
83 56 V
114 56 V
7 57 V
114 56 V
20 57 V
3 56 V
66 56 V
22 57 V
50 56 V
0 57 V
1 56 V
8 56 V
22 57 V
4 56 V
2 57 V
8 56 V
2 56 V
0 57 V
1 56 V
15 57 V
5 56 V
3 56 V
6 57 V
0 56 V
7 57 V
5 56 V
6 56 V
0 57 V
0 56 V
1 57 V
7 56 V
1 56 V
1 57 V
1 56 V
8 57 V
1 56 V
3 56 V
2 57 V
4 56 V
2 57 V
1 56 V
2 56 V
10 57 V
9 56 V
11 57 V
8 56 V
11 56 V
7 57 V
2 56 V
9 57 V
7 56 V
1 56 V
0 57 V
3 56 V
17 57 V
1 56 V
9 56 V
15 57 V
5 56 V
6 57 V
65 56 V
5 56 V
31 57 V
106 56 V
140 57 V
203 56 V
3951 836 Star
4673 893 Star
5174 949 Star
5243 1006 Star
5326 1062 Star
5440 1118 Star
5447 1175 Star
5561 1231 Star
5581 1288 Star
5584 1344 Star
5650 1400 Star
5672 1457 Star
5722 1513 Star
5722 1570 Star
5723 1626 Star
5731 1682 Star
5753 1739 Star
5757 1795 Star
5759 1852 Star
5767 1908 Star
5769 1964 Star
5769 2021 Star
5770 2077 Star
5785 2134 Star
5790 2190 Star
5793 2246 Star
5799 2303 Star
5799 2359 Star
5806 2416 Star
5811 2472 Star
5817 2528 Star
5817 2585 Star
5817 2641 Star
5818 2698 Star
5825 2754 Star
5826 2810 Star
5827 2867 Star
5828 2923 Star
5836 2980 Star
5837 3036 Star
5840 3092 Star
5842 3149 Star
5846 3205 Star
5848 3262 Star
5849 3318 Star
5851 3374 Star
5861 3431 Star
5870 3487 Star
5881 3544 Star
5889 3600 Star
5900 3656 Star
5907 3713 Star
5909 3769 Star
5918 3826 Star
5925 3882 Star
5926 3938 Star
5926 3995 Star
5929 4051 Star
5946 4108 Star
5947 4164 Star
5956 4220 Star
5971 4277 Star
5976 4333 Star
5982 4390 Star
6047 4446 Star
6052 4502 Star
6083 4559 Star
6189 4615 Star
6329 4672 Star
6532 4728 Star
3417 4015 Star
2.000 UP
1.000 UL
LT3
LTb
1482 3755 M
(scale=1.5) Lshow
LT3
3042 3755 M
750 0 V
3432 836 M
561 57 V
413 56 V
37 57 V
84 56 V
61 56 V
19 57 V
50 56 V
6 57 V
26 56 V
7 56 V
67 57 V
13 56 V
0 57 V
20 56 V
8 56 V
9 57 V
8 56 V
27 57 V
3 56 V
5 56 V
3 57 V
6 56 V
1 57 V
14 56 V
1 56 V
7 57 V
4 56 V
1 57 V
4 56 V
2 56 V
2 57 V
2 56 V
6 57 V
1 56 V
1 56 V
1 57 V
9 56 V
0 57 V
1 56 V
1 56 V
2 57 V
1 56 V
1 57 V
4 56 V
1 56 V
7 57 V
2 56 V
18 57 V
9 56 V
10 56 V
2 57 V
8 56 V
5 57 V
4 56 V
6 56 V
1 57 V
6 56 V
7 57 V
6 56 V
1 56 V
6 57 V
4 56 V
5 57 V
12 56 V
21 56 V
27 57 V
277 56 V
22 57 V
304 56 V
3432 836 Box
3993 893 Box
4406 949 Box
4443 1006 Box
4527 1062 Box
4588 1118 Box
4607 1175 Box
4657 1231 Box
4663 1288 Box
4689 1344 Box
4696 1400 Box
4763 1457 Box
4776 1513 Box
4776 1570 Box
4796 1626 Box
4804 1682 Box
4813 1739 Box
4821 1795 Box
4848 1852 Box
4851 1908 Box
4856 1964 Box
4859 2021 Box
4865 2077 Box
4866 2134 Box
4880 2190 Box
4881 2246 Box
4888 2303 Box
4892 2359 Box
4893 2416 Box
4897 2472 Box
4899 2528 Box
4901 2585 Box
4903 2641 Box
4909 2698 Box
4910 2754 Box
4911 2810 Box
4912 2867 Box
4921 2923 Box
4921 2980 Box
4922 3036 Box
4923 3092 Box
4925 3149 Box
4926 3205 Box
4927 3262 Box
4931 3318 Box
4932 3374 Box
4939 3431 Box
4941 3487 Box
4959 3544 Box
4968 3600 Box
4978 3656 Box
4980 3713 Box
4988 3769 Box
4993 3826 Box
4997 3882 Box
5003 3938 Box
5004 3995 Box
5010 4051 Box
5017 4108 Box
5023 4164 Box
5024 4220 Box
5030 4277 Box
5034 4333 Box
5039 4390 Box
5051 4446 Box
5072 4502 Box
5099 4559 Box
5376 4615 Box
5398 4672 Box
5702 4728 Box
3417 3755 Box
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial -152 1449 a FB(\(b\))25 b FA(Random)17 b(topology)p
Fz(,)i(satur)o(ated)f(UDP)f(demands,)i(without)e(RTS/CTS)-152
2194 y
SDict begin H.S end
 -152 2194 a -152 2194 a
SDict begin 10.5 H.A end
 -152 2194 a -152 2194
a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.11.3) cvn H.B /DEST
pdfmark end
 -152 2194 a 19 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-rand-rts0/scatter-r1-m2-t0-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-rand-rts0/scatter-r1-m2-t0-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-rand-rts0/scatter-r1-m2-t0-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1170 780 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 0) Rshow
1.000 UL
LTb
1170 1175 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 1) Rshow
1.000 UL
LTb
1170 1570 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 2) Rshow
1.000 UL
LTb
1170 1964 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 3) Rshow
1.000 UL
LTb
1170 2359 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 4) Rshow
1.000 UL
LTb
1170 2754 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 5) Rshow
1.000 UL
LTb
1170 3149 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 6) Rshow
1.000 UL
LTb
1170 3544 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 7) Rshow
1.000 UL
LTb
1170 3938 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 8) Rshow
1.000 UL
LTb
1170 4333 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 9) Rshow
1.000 UL
LTb
1170 4728 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 10) Rshow
1.000 UL
LTb
1170 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1729 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 1) Cshow
1.000 UL
LTb
2288 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2846 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 3) Cshow
1.000 UL
LTb
3405 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
3964 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 5) Cshow
1.000 UL
LTb
4523 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
5082 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 7) Cshow
1.000 UL
LTb
5640 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
6199 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 9) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Actual throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3964 130 M
(Estimated throughput \(Mbps\)) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
1299 871 M
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
56 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
56 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 38 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
55 39 V
stroke
LT1
/Helvetica findfont 260 scalefont setfont
1299 853 M
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 32 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 32 V
55 31 V
55 31 V
55 31 V
55 31 V
56 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 32 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 32 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 32 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 32 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
56 31 V
55 31 V
55 32 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 32 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 32 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 31 V
55 32 V
55 31 V
55 31 V
2.000 UP
stroke
LT2
/Helvetica findfont 260 scalefont setfont
2005 1307 CircleF
1506 987 CircleF
1848 1256 CircleF
1929 1290 CircleF
1407 948 CircleF
1630 1077 CircleF
1521 1025 CircleF
1299 871 CircleF
1825 1210 CircleF
1855 1183 CircleF
1811 1178 CircleF
2499 1716 CircleF
3754 2577 CircleF
2114 1323 CircleF
1944 1182 CircleF
2774 1909 CircleF
1832 1155 CircleF
1809 1230 CircleF
2648 1688 CircleF
2737 1835 CircleF
2590 1693 CircleF
2266 1500 CircleF
3061 2028 CircleF
4840 3323 CircleF
2399 1583 CircleF
3599 2405 CircleF
2347 1596 CircleF
2307 1428 CircleF
3313 2011 CircleF
2602 1774 CircleF
2761 1873 CircleF
2426 1618 CircleF
3851 2048 CircleF
4175 2760 CircleF
2763 1744 CircleF
3267 1868 CircleF
2399 1583 CircleF
2922 1942 CircleF
2729 1761 CircleF
2840 1830 CircleF
5375 3111 CircleF
4512 2727 CircleF
3537 2295 CircleF
3534 2349 CircleF
4597 3111 CircleF
3875 2057 CircleF
6746 4500 CircleF
3642 2471 CircleF
3282 2117 CircleF
4845 3231 CircleF
4522 3033 CircleF
4637 2864 CircleF
4624 3056 CircleF
2845 1760 CircleF
4717 3130 CircleF
4850 3034 CircleF
4693 2548 CircleF
4502 2728 CircleF
4405 2659 CircleF
5389 3257 CircleF
5905 3744 CircleF
3705 2429 CircleF
4012 2426 CircleF
4240 2671 CircleF
4835 2848 CircleF
6250 3950 CircleF
5460 3407 CircleF
4085 2699 CircleF
3948 2624 CircleF
5474 3505 CircleF
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 991 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-rand-rts0/cdf-r1-m2-t0-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-rand-rts0/cdf-r1-m2-t0-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-rand-rts0/cdf-r1-m2-t0-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1326 780 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0) Rshow
1.000 UL
LTb
1326 1175 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.1) Rshow
1.000 UL
LTb
1326 1570 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.2) Rshow
1.000 UL
LTb
1326 1964 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.3) Rshow
1.000 UL
LTb
1326 2359 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.4) Rshow
1.000 UL
LTb
1326 2754 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.5) Rshow
1.000 UL
LTb
1326 3149 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.6) Rshow
1.000 UL
LTb
1326 3544 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.7) Rshow
1.000 UL
LTb
1326 3938 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.8) Rshow
1.000 UL
LTb
1326 4333 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.9) Rshow
1.000 UL
LTb
1326 4728 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 1) Rshow
1.000 UL
LTb
1326 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
2412 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.2) Cshow
1.000 UL
LTb
3499 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.4) Cshow
1.000 UL
LTb
4585 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.6) Cshow
1.000 UL
LTb
5672 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.8) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Fractions of runs) Cshow
grestore
LTb
LCb setrgbcolor
4042 130 M
(Ratios between actual and estimated throughput) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
1482 4535 M
(scale=1) Lshow
LT0
3042 4535 M
750 0 V
4956 836 M
8 57 V
221 56 V
130 57 V
10 56 V
262 56 V
77 57 V
19 56 V
27 57 V
35 56 V
8 56 V
27 57 V
12 56 V
13 57 V
15 56 V
7 56 V
14 57 V
6 56 V
101 57 V
32 56 V
53 56 V
2 57 V
16 56 V
1 57 V
10 56 V
36 56 V
25 57 V
16 56 V
20 57 V
5 56 V
12 56 V
17 57 V
1 56 V
53 57 V
23 56 V
25 56 V
32 57 V
22 56 V
2 57 V
23 56 V
8 56 V
6 57 V
3 56 V
2 57 V
7 56 V
19 56 V
6 57 V
3 56 V
3 57 V
23 56 V
1 56 V
1 57 V
12 56 V
25 57 V
1 56 V
5 56 V
57 57 V
28 56 V
25 57 V
45 56 V
2 56 V
8 57 V
11 56 V
13 57 V
32 56 V
17 56 V
5 57 V
1 56 V
14 57 V
1 14 V
4956 836 Pls
4964 893 Pls
5185 949 Pls
5315 1006 Pls
5325 1062 Pls
5587 1118 Pls
5664 1175 Pls
5683 1231 Pls
5710 1288 Pls
5745 1344 Pls
5753 1400 Pls
5780 1457 Pls
5792 1513 Pls
5805 1570 Pls
5820 1626 Pls
5827 1682 Pls
5841 1739 Pls
5847 1795 Pls
5948 1852 Pls
5980 1908 Pls
6033 1964 Pls
6035 2021 Pls
6051 2077 Pls
6052 2134 Pls
6062 2190 Pls
6098 2246 Pls
6123 2303 Pls
6139 2359 Pls
6159 2416 Pls
6164 2472 Pls
6176 2528 Pls
6193 2585 Pls
6194 2641 Pls
6247 2698 Pls
6270 2754 Pls
6295 2810 Pls
6327 2867 Pls
6349 2923 Pls
6351 2980 Pls
6374 3036 Pls
6382 3092 Pls
6388 3149 Pls
6391 3205 Pls
6393 3262 Pls
6400 3318 Pls
6419 3374 Pls
6425 3431 Pls
6428 3487 Pls
6431 3544 Pls
6454 3600 Pls
6455 3656 Pls
6456 3713 Pls
6468 3769 Pls
6493 3826 Pls
6494 3882 Pls
6499 3938 Pls
6556 3995 Pls
6584 4051 Pls
6609 4108 Pls
6654 4164 Pls
6656 4220 Pls
6664 4277 Pls
6675 4333 Pls
6688 4390 Pls
6720 4446 Pls
6737 4502 Pls
6742 4559 Pls
6743 4615 Pls
6757 4672 Pls
3417 4535 Pls
2.000 UP
1.000 UL
LT1
LTb
1482 4275 M
(scale=1.1) Lshow
LT1
3042 4275 M
750 0 V
4565 836 M
177 57 V
202 56 V
80 57 V
18 56 V
136 56 V
44 57 V
64 56 V
73 57 V
11 56 V
6 56 V
3 57 V
55 56 V
18 57 V
0 56 V
1 56 V
1 57 V
116 56 V
12 57 V
9 56 V
60 56 V
2 57 V
21 56 V
1 57 V
38 56 V
16 56 V
16 57 V
23 56 V
15 57 V
30 56 V
8 56 V
43 57 V
44 56 V
49 57 V
6 56 V
10 56 V
22 57 V
1 56 V
1 57 V
0 56 V
1 56 V
9 57 V
8 56 V
15 57 V
59 56 V
1 56 V
43 57 V
6 56 V
10 57 V
2 56 V
5 56 V
16 57 V
15 56 V
24 57 V
10 56 V
1 56 V
13 57 V
13 56 V
21 57 V
32 56 V
11 56 V
143 57 V
25 56 V
4 57 V
10 56 V
94 56 V
50 57 V
83 56 V
36 57 V
1 35 V
4565 836 Crs
4742 893 Crs
4944 949 Crs
5024 1006 Crs
5042 1062 Crs
5178 1118 Crs
5222 1175 Crs
5286 1231 Crs
5359 1288 Crs
5370 1344 Crs
5376 1400 Crs
5379 1457 Crs
5434 1513 Crs
5452 1570 Crs
5452 1626 Crs
5453 1682 Crs
5454 1739 Crs
5570 1795 Crs
5582 1852 Crs
5591 1908 Crs
5651 1964 Crs
5653 2021 Crs
5674 2077 Crs
5675 2134 Crs
5713 2190 Crs
5729 2246 Crs
5745 2303 Crs
5768 2359 Crs
5783 2416 Crs
5813 2472 Crs
5821 2528 Crs
5864 2585 Crs
5908 2641 Crs
5957 2698 Crs
5963 2754 Crs
5973 2810 Crs
5995 2867 Crs
5996 2923 Crs
5997 2980 Crs
5997 3036 Crs
5998 3092 Crs
6007 3149 Crs
6015 3205 Crs
6030 3262 Crs
6089 3318 Crs
6090 3374 Crs
6133 3431 Crs
6139 3487 Crs
6149 3544 Crs
6151 3600 Crs
6156 3656 Crs
6172 3713 Crs
6187 3769 Crs
6211 3826 Crs
6221 3882 Crs
6222 3938 Crs
6235 3995 Crs
6248 4051 Crs
6269 4108 Crs
6301 4164 Crs
6312 4220 Crs
6455 4277 Crs
6480 4333 Crs
6484 4390 Crs
6494 4446 Crs
6588 4502 Crs
6638 4559 Crs
6721 4615 Crs
6757 4672 Crs
3417 4275 Crs
2.000 UP
1.000 UL
LT2
LTb
1482 4015 M
(scale=1.2) Lshow
LT2
3042 4015 M
750 0 V
4177 836 M
354 57 V
149 56 V
3 57 V
3 56 V
30 56 V
160 57 V
48 56 V
14 57 V
2 56 V
89 56 V
81 57 V
20 56 V
4 57 V
3 56 V
8 56 V
3 57 V
22 56 V
10 57 V
12 56 V
72 56 V
29 57 V
42 56 V
31 57 V
5 56 V
10 56 V
1 57 V
26 56 V
24 57 V
40 56 V
3 56 V
7 57 V
18 56 V
42 57 V
4 56 V
22 56 V
29 57 V
15 56 V
6 57 V
16 56 V
13 56 V
12 57 V
42 56 V
14 57 V
4 56 V
44 56 V
1 57 V
8 56 V
9 57 V
37 56 V
34 56 V
3 57 V
27 56 V
14 57 V
7 56 V
46 56 V
14 57 V
15 56 V
3 57 V
16 56 V
12 56 V
18 57 V
22 56 V
64 57 V
25 56 V
148 56 V
214 57 V
212 56 V
46 55 V
4177 836 Star
4531 893 Star
4680 949 Star
4683 1006 Star
4686 1062 Star
4716 1118 Star
4876 1175 Star
4924 1231 Star
4938 1288 Star
4940 1344 Star
5029 1400 Star
5110 1457 Star
5130 1513 Star
5134 1570 Star
5137 1626 Star
5145 1682 Star
5148 1739 Star
5170 1795 Star
5180 1852 Star
5192 1908 Star
5264 1964 Star
5293 2021 Star
5335 2077 Star
5366 2134 Star
5371 2190 Star
5381 2246 Star
5382 2303 Star
5408 2359 Star
5432 2416 Star
5472 2472 Star
5475 2528 Star
5482 2585 Star
5500 2641 Star
5542 2698 Star
5546 2754 Star
5568 2810 Star
5597 2867 Star
5612 2923 Star
5618 2980 Star
5634 3036 Star
5647 3092 Star
5659 3149 Star
5701 3205 Star
5715 3262 Star
5719 3318 Star
5763 3374 Star
5764 3431 Star
5772 3487 Star
5781 3544 Star
5818 3600 Star
5852 3656 Star
5855 3713 Star
5882 3769 Star
5896 3826 Star
5903 3882 Star
5949 3938 Star
5963 3995 Star
5978 4051 Star
5981 4108 Star
5997 4164 Star
6009 4220 Star
6027 4277 Star
6049 4333 Star
6113 4390 Star
6138 4446 Star
6286 4502 Star
6500 4559 Star
6712 4615 Star
3417 4015 Star
2.000 UP
1.000 UL
LT3
LTb
1482 3755 M
(scale=1.5) Lshow
LT3
3042 3755 M
750 0 V
3660 836 M
232 57 V
22 56 V
40 57 V
91 56 V
129 56 V
11 57 V
11 56 V
38 57 V
40 56 V
68 56 V
12 57 V
5 56 V
2 57 V
29 56 V
9 56 V
2 57 V
7 56 V
53 57 V
16 56 V
28 56 V
43 57 V
12 56 V
2 57 V
13 56 V
3 56 V
9 57 V
1 56 V
7 57 V
12 56 V
17 56 V
16 57 V
29 56 V
0 57 V
24 56 V
21 56 V
25 57 V
10 56 V
4 57 V
5 56 V
2 56 V
28 57 V
1 56 V
27 57 V
14 56 V
46 56 V
17 57 V
3 56 V
97 57 V
9 56 V
13 56 V
15 57 V
39 56 V
7 57 V
30 56 V
9 56 V
18 57 V
94 56 V
69 57 V
73 56 V
68 56 V
1 57 V
145 56 V
161 57 V
43 56 V
25 56 V
4 57 V
217 56 V
715 57 V
6 56 V
3660 836 Box
3892 893 Box
3914 949 Box
3954 1006 Box
4045 1062 Box
4174 1118 Box
4185 1175 Box
4196 1231 Box
4234 1288 Box
4274 1344 Box
4342 1400 Box
4354 1457 Box
4359 1513 Box
4361 1570 Box
4390 1626 Box
4399 1682 Box
4401 1739 Box
4408 1795 Box
4461 1852 Box
4477 1908 Box
4505 1964 Box
4548 2021 Box
4560 2077 Box
4562 2134 Box
4575 2190 Box
4578 2246 Box
4587 2303 Box
4588 2359 Box
4595 2416 Box
4607 2472 Box
4624 2528 Box
4640 2585 Box
4669 2641 Box
4669 2698 Box
4693 2754 Box
4714 2810 Box
4739 2867 Box
4749 2923 Box
4753 2980 Box
4758 3036 Box
4760 3092 Box
4788 3149 Box
4789 3205 Box
4816 3262 Box
4830 3318 Box
4876 3374 Box
4893 3431 Box
4896 3487 Box
4993 3544 Box
5002 3600 Box
5015 3656 Box
5030 3713 Box
5069 3769 Box
5076 3826 Box
5106 3882 Box
5115 3938 Box
5133 3995 Box
5227 4051 Box
5296 4108 Box
5369 4164 Box
5437 4220 Box
5438 4277 Box
5583 4333 Box
5744 4390 Box
5787 4446 Box
5812 4502 Box
5816 4559 Box
6033 4615 Box
6748 4672 Box
6754 4728 Box
3417 3755 Box
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial -75 2281 a FB(\(c\))25 b Fz(Grid)19 b(topolo)o(gy)l(,)h
FA(random)f(UDP)f(demands)p Fz(,)g(without)h(RTS/CTS)-152
3027 y
SDict begin H.S end
 -152 3027 a -152 3027 a
SDict begin 10.5 H.A end
 -152 3027 a -152 3027
a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.11.4) cvn H.B /DEST
pdfmark end
 -152 3027 a 19 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts1/scatter-r1-m2-t1-rts1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts1/scatter-r1-m2-t1-rts1.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts1/scatter-r1-m2-t1-rts1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1170 780 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 0) Rshow
1.000 UL
LTb
1170 1438 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 2) Rshow
1.000 UL
LTb
1170 2096 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 4) Rshow
1.000 UL
LTb
1170 2754 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 6) Rshow
1.000 UL
LTb
1170 3412 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 8) Rshow
1.000 UL
LTb
1170 4070 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 10) Rshow
1.000 UL
LTb
1170 4728 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
( 12) Rshow
1.000 UL
LTb
1170 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
2101 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
3033 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
3964 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
4895 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
5827 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Actual throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3964 130 M
(Estimated throughput \(Mbps\)) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
1482 1001 M
50 35 V
50 35 V
51 36 V
50 35 V
50 36 V
50 35 V
50 35 V
50 36 V
50 35 V
50 36 V
50 35 V
51 35 V
50 36 V
50 35 V
50 36 V
50 35 V
50 35 V
50 36 V
50 35 V
50 36 V
51 35 V
50 35 V
50 36 V
50 35 V
50 36 V
50 35 V
50 36 V
50 35 V
50 35 V
51 36 V
50 35 V
50 36 V
50 35 V
50 35 V
50 36 V
50 35 V
50 36 V
50 35 V
51 35 V
50 36 V
50 35 V
50 36 V
50 35 V
50 35 V
50 36 V
50 35 V
51 36 V
50 35 V
50 35 V
50 36 V
50 35 V
50 36 V
50 35 V
50 35 V
50 36 V
51 35 V
50 36 V
50 35 V
50 36 V
50 35 V
50 35 V
50 36 V
50 35 V
50 36 V
51 35 V
50 35 V
50 36 V
50 35 V
50 36 V
50 35 V
50 35 V
50 36 V
50 35 V
51 36 V
50 35 V
50 35 V
50 36 V
50 35 V
50 36 V
50 35 V
50 35 V
51 36 V
50 35 V
50 36 V
50 35 V
50 35 V
50 36 V
50 35 V
50 36 V
50 35 V
51 36 V
50 35 V
50 35 V
50 36 V
50 35 V
50 36 V
50 35 V
50 35 V
50 36 V
stroke
LT1
/Helvetica findfont 260 scalefont setfont
1482 956 M
50 29 V
50 28 V
51 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
51 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
51 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
51 28 V
50 29 V
50 28 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
51 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
51 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
51 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
51 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
51 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
51 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
51 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
50 28 V
50 28 V
50 29 V
2.000 UP
stroke
LT2
/Helvetica findfont 260 scalefont setfont
1869 1263 CircleF
1482 965 CircleF
1839 1188 CircleF
1843 1255 CircleF
1637 1059 CircleF
1606 1051 CircleF
1491 986 CircleF
1658 1105 CircleF
1696 1150 CircleF
1795 1209 CircleF
1766 1166 CircleF
2802 1925 CircleF
4540 3112 CircleF
1759 1169 CircleF
2655 1793 CircleF
2452 1665 CircleF
1748 1155 CircleF
1910 1301 CircleF
2167 1445 CircleF
3225 2218 CircleF
2108 1424 CircleF
3359 2214 CircleF
3265 2240 CircleF
2547 1730 CircleF
3587 2431 CircleF
3174 2169 CircleF
2691 1825 CircleF
3724 2080 CircleF
1999 1361 CircleF
2320 1583 CircleF
2086 1399 CircleF
3818 2580 CircleF
4208 2842 CircleF
2630 1699 CircleF
2707 1854 CircleF
2068 1375 CircleF
3354 2125 CircleF
4208 2755 CircleF
2439 1670 CircleF
4989 3441 CircleF
3888 2508 CircleF
4100 2623 CircleF
3408 2155 CircleF
3485 2263 CircleF
2989 2040 CircleF
3285 1922 CircleF
4163 2605 CircleF
5878 3036 CircleF
3857 2670 CircleF
2801 1866 CircleF
6443 3547 CircleF
5368 3173 CircleF
4385 3005 CircleF
4823 3024 CircleF
3512 2195 CircleF
4021 2610 CircleF
3608 2183 CircleF
3381 2317 CircleF
5167 3528 CircleF
5904 2931 CircleF
6187 3184 CircleF
5477 3050 CircleF
4171 2713 CircleF
5674 2839 CircleF
5310 3400 CircleF
4171 2458 CircleF
5530 3179 CircleF
5007 3370 CircleF
4434 2630 CircleF
5283 3088 CircleF
1.000 UL
LTb
1170 4728 N
0 -3948 V
5588 0 V
0 3948 V
-5588 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 991 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts1/cdf-r1-m2-t1-rts1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts1/cdf-r1-m2-t1-rts1.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts1/cdf-r1-m2-t1-rts1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:50 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1326 780 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0) Rshow
1.000 UL
LTb
1326 1175 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.1) Rshow
1.000 UL
LTb
1326 1570 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.2) Rshow
1.000 UL
LTb
1326 1964 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.3) Rshow
1.000 UL
LTb
1326 2359 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.4) Rshow
1.000 UL
LTb
1326 2754 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.5) Rshow
1.000 UL
LTb
1326 3149 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.6) Rshow
1.000 UL
LTb
1326 3544 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.7) Rshow
1.000 UL
LTb
1326 3938 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.8) Rshow
1.000 UL
LTb
1326 4333 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.9) Rshow
1.000 UL
LTb
1326 4728 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 1) Rshow
1.000 UL
LTb
1326 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
2412 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.2) Cshow
1.000 UL
LTb
3499 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.4) Cshow
1.000 UL
LTb
4585 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.6) Cshow
1.000 UL
LTb
5672 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0.8) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Fractions of runs) Cshow
grestore
LTb
LCb setrgbcolor
4042 130 M
(Ratios between actual and estimated throughput) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
1482 4535 M
(scale=1) Lshow
LT0
3042 4535 M
750 0 V
4820 836 M
20 57 V
169 56 V
1 57 V
230 56 V
120 56 V
18 57 V
99 56 V
79 57 V
70 56 V
14 56 V
43 57 V
26 56 V
41 57 V
136 56 V
39 56 V
48 57 V
40 56 V
0 57 V
35 56 V
1 56 V
11 57 V
47 56 V
55 57 V
2 56 V
28 56 V
23 57 V
35 56 V
12 57 V
6 56 V
9 56 V
28 57 V
12 56 V
7 57 V
37 56 V
45 56 V
16 57 V
22 56 V
4 57 V
3 56 V
65 56 V
3 57 V
26 56 V
7 57 V
21 56 V
6 56 V
27 57 V
1 56 V
2 57 V
3 56 V
18 56 V
5 57 V
7 56 V
4 57 V
1 56 V
4 56 V
4 57 V
14 56 V
14 57 V
1 56 V
12 56 V
0 57 V
10 56 V
3 57 V
9 56 V
3 56 V
8 57 V
4 56 V
2 57 V
12 56 V
4820 836 Pls
4840 893 Pls
5009 949 Pls
5010 1006 Pls
5240 1062 Pls
5360 1118 Pls
5378 1175 Pls
5477 1231 Pls
5556 1288 Pls
5626 1344 Pls
5640 1400 Pls
5683 1457 Pls
5709 1513 Pls
5750 1570 Pls
5886 1626 Pls
5925 1682 Pls
5973 1739 Pls
6013 1795 Pls
6013 1852 Pls
6048 1908 Pls
6049 1964 Pls
6060 2021 Pls
6107 2077 Pls
6162 2134 Pls
6164 2190 Pls
6192 2246 Pls
6215 2303 Pls
6250 2359 Pls
6262 2416 Pls
6268 2472 Pls
6277 2528 Pls
6305 2585 Pls
6317 2641 Pls
6324 2698 Pls
6361 2754 Pls
6406 2810 Pls
6422 2867 Pls
6444 2923 Pls
6448 2980 Pls
6451 3036 Pls
6516 3092 Pls
6519 3149 Pls
6545 3205 Pls
6552 3262 Pls
6573 3318 Pls
6579 3374 Pls
6606 3431 Pls
6607 3487 Pls
6609 3544 Pls
6612 3600 Pls
6630 3656 Pls
6635 3713 Pls
6642 3769 Pls
6646 3826 Pls
6647 3882 Pls
6651 3938 Pls
6655 3995 Pls
6669 4051 Pls
6683 4108 Pls
6684 4164 Pls
6696 4220 Pls
6696 4277 Pls
6706 4333 Pls
6709 4390 Pls
6718 4446 Pls
6721 4502 Pls
6729 4559 Pls
6733 4615 Pls
6735 4672 Pls
6747 4728 Pls
3417 4535 Pls
2.000 UP
1.000 UL
LT1
LTb
1482 4275 M
(scale=1.1) Lshow
LT1
3042 4275 M
750 0 V
4525 836 M
34 57 V
136 56 V
4 57 V
145 56 V
113 56 V
29 57 V
67 56 V
123 57 V
66 56 V
11 56 V
5 57 V
68 56 V
101 57 V
36 56 V
56 56 V
20 57 V
16 56 V
51 57 V
2 56 V
6 56 V
31 57 V
6 56 V
47 57 V
11 56 V
20 56 V
19 57 V
28 56 V
2 57 V
23 56 V
7 56 V
11 57 V
1 56 V
50 57 V
14 56 V
23 56 V
46 57 V
29 56 V
6 57 V
24 56 V
18 56 V
9 57 V
24 56 V
7 57 V
1 56 V
11 56 V
7 57 V
4 56 V
3 57 V
6 56 V
25 56 V
2 57 V
12 56 V
9 57 V
1 56 V
4 56 V
11 57 V
6 56 V
21 57 V
9 56 V
2 56 V
8 57 V
4 56 V
4 57 V
4 56 V
7 56 V
28 57 V
51 56 V
6 57 V
5 56 V
4525 836 Crs
4559 893 Crs
4695 949 Crs
4699 1006 Crs
4844 1062 Crs
4957 1118 Crs
4986 1175 Crs
5053 1231 Crs
5176 1288 Crs
5242 1344 Crs
5253 1400 Crs
5258 1457 Crs
5326 1513 Crs
5427 1570 Crs
5463 1626 Crs
5519 1682 Crs
5539 1739 Crs
5555 1795 Crs
5606 1852 Crs
5608 1908 Crs
5614 1964 Crs
5645 2021 Crs
5651 2077 Crs
5698 2134 Crs
5709 2190 Crs
5729 2246 Crs
5748 2303 Crs
5776 2359 Crs
5778 2416 Crs
5801 2472 Crs
5808 2528 Crs
5819 2585 Crs
5820 2641 Crs
5870 2698 Crs
5884 2754 Crs
5907 2810 Crs
5953 2867 Crs
5982 2923 Crs
5988 2980 Crs
6012 3036 Crs
6030 3092 Crs
6039 3149 Crs
6063 3205 Crs
6070 3262 Crs
6071 3318 Crs
6082 3374 Crs
6089 3431 Crs
6093 3487 Crs
6096 3544 Crs
6102 3600 Crs
6127 3656 Crs
6129 3713 Crs
6141 3769 Crs
6150 3826 Crs
6151 3882 Crs
6155 3938 Crs
6166 3995 Crs
6172 4051 Crs
6193 4108 Crs
6202 4164 Crs
6204 4220 Crs
6212 4277 Crs
6216 4333 Crs
6220 4390 Crs
6224 4446 Crs
6231 4502 Crs
6259 4559 Crs
6310 4615 Crs
6316 4672 Crs
6321 4728 Crs
3417 4275 Crs
2.000 UP
1.000 UL
LT2
LTb
1482 4015 M
(scale=1.2) Lshow
LT2
3042 4015 M
750 0 V
4252 836 M
7 57 V
134 56 V
20 57 V
63 56 V
118 56 V
83 57 V
65 56 V
95 57 V
45 56 V
19 56 V
21 57 V
26 56 V
6 57 V
59 56 V
30 56 V
10 57 V
91 56 V
36 57 V
17 56 V
4 56 V
22 57 V
40 56 V
10 57 V
60 56 V
20 56 V
15 57 V
19 56 V
3 57 V
11 56 V
10 56 V
6 57 V
7 56 V
10 57 V
14 56 V
7 56 V
8 57 V
23 56 V
9 57 V
18 56 V
11 56 V
73 57 V
19 56 V
2 57 V
33 56 V
41 56 V
1 57 V
14 56 V
5 57 V
8 56 V
4 56 V
4 57 V
8 56 V
4 57 V
3 56 V
1 56 V
8 57 V
11 56 V
5 57 V
10 56 V
6 56 V
1 57 V
8 56 V
2 57 V
16 56 V
10 56 V
37 57 V
13 56 V
56 57 V
8 56 V
4252 836 Star
4259 893 Star
4393 949 Star
4413 1006 Star
4476 1062 Star
4594 1118 Star
4677 1175 Star
4742 1231 Star
4837 1288 Star
4882 1344 Star
4901 1400 Star
4922 1457 Star
4948 1513 Star
4954 1570 Star
5013 1626 Star
5043 1682 Star
5053 1739 Star
5144 1795 Star
5180 1852 Star
5197 1908 Star
5201 1964 Star
5223 2021 Star
5263 2077 Star
5273 2134 Star
5333 2190 Star
5353 2246 Star
5368 2303 Star
5387 2359 Star
5390 2416 Star
5401 2472 Star
5411 2528 Star
5417 2585 Star
5424 2641 Star
5434 2698 Star
5448 2754 Star
5455 2810 Star
5463 2867 Star
5486 2923 Star
5495 2980 Star
5513 3036 Star
5524 3092 Star
5597 3149 Star
5616 3205 Star
5618 3262 Star
5651 3318 Star
5692 3374 Star
5693 3431 Star
5707 3487 Star
5712 3544 Star
5720 3600 Star
5724 3656 Star
5728 3713 Star
5736 3769 Star
5740 3826 Star
5743 3882 Star
5744 3938 Star
5752 3995 Star
5763 4051 Star
5768 4108 Star
5778 4164 Star
5784 4220 Star
5785 4277 Star
5793 4333 Star
5795 4390 Star
5811 4446 Star
5821 4502 Star
5858 4559 Star
5871 4615 Star
5927 4672 Star
5935 4728 Star
3417 4015 Star
2.000 UP
1.000 UL
LT3
LTb
1482 3755 M
(scale=1.5) Lshow
LT3
3042 3755 M
750 0 V
3649 836 M
34 57 V
89 56 V
14 57 V
8 56 V
2 56 V
63 57 V
6 56 V
25 57 V
101 56 V
6 56 V
33 57 V
47 56 V
55 57 V
26 56 V
7 56 V
3 57 V
3 56 V
3 57 V
7 56 V
13 56 V
39 57 V
96 56 V
38 57 V
52 56 V
27 56 V
11 57 V
34 56 V
7 57 V
3 56 V
24 56 V
2 57 V
22 56 V
20 57 V
4 56 V
2 56 V
3 57 V
14 56 V
35 57 V
33 56 V
69 56 V
18 57 V
4 56 V
13 57 V
9 56 V
6 56 V
18 57 V
9 56 V
9 57 V
14 56 V
2 56 V
3 57 V
4 56 V
1 57 V
4 56 V
9 56 V
16 57 V
6 56 V
2 57 V
1 56 V
21 56 V
3 57 V
5 56 V
8 57 V
8 56 V
23 56 V
8 57 V
22 56 V
11 57 V
7 56 V
3649 836 Box
3683 893 Box
3772 949 Box
3786 1006 Box
3794 1062 Box
3796 1118 Box
3859 1175 Box
3865 1231 Box
3890 1288 Box
3991 1344 Box
3997 1400 Box
4030 1457 Box
4077 1513 Box
4132 1570 Box
4158 1626 Box
4165 1682 Box
4168 1739 Box
4171 1795 Box
4174 1852 Box
4181 1908 Box
4194 1964 Box
4233 2021 Box
4329 2077 Box
4367 2134 Box
4419 2190 Box
4446 2246 Box
4457 2303 Box
4491 2359 Box
4498 2416 Box
4501 2472 Box
4525 2528 Box
4527 2585 Box
4549 2641 Box
4569 2698 Box
4573 2754 Box
4575 2810 Box
4578 2867 Box
4592 2923 Box
4627 2980 Box
4660 3036 Box
4729 3092 Box
4747 3149 Box
4751 3205 Box
4764 3262 Box
4773 3318 Box
4779 3374 Box
4797 3431 Box
4806 3487 Box
4815 3544 Box
4829 3600 Box
4831 3656 Box
4834 3713 Box
4838 3769 Box
4839 3826 Box
4843 3882 Box
4852 3938 Box
4868 3995 Box
4874 4051 Box
4876 4108 Box
4877 4164 Box
4898 4220 Box
4901 4277 Box
4906 4333 Box
4914 4390 Box
4922 4446 Box
4945 4502 Box
4953 4559 Box
4975 4615 Box
4986 4672 Box
4993 4728 Box
3417 3755 Box
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial -56 3114 a FB(\(d\))25 b Fz(Grid)19 b(topolo)o(gy)l(,)h
(satur)o(ated)g(UDP)e(demands,)i FA(with)e(R)m(TS/CTS)845
3179 y
SDict begin H.S end
 845 3179 a 845 3179 a
SDict begin 10.5 H.A end
 845 3179 a 845 3179 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.11) cvn H.B /DEST pdfmark
end
 845
3179 a -152 3319 a FA(Figur)o(e)29 b(11:)232 3319 y
SDict begin H.S end
 232
3319 a 232 3319 a
SDict begin H.R end
 232 3319 a 232 3319 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.11) cvn H.B /DEST pdfmark
end
 232 3319 a FA(Thr)o(oughput)e
(pr)o(ediction)h(accuracy)i(in)f(simulation)g(of)-152
3406 y(our)22 b(model)f(f)n(or)h(v)o(arious)h(con\002gurations.)31
b(The)21 b(differ)o(ence)f(fr)o(om)i(the)-152 3493 y(base)d
(con\002guration)f(in)g(Figur)o(e)764 3494 y
SDict begin H.S end
 764 3494
a -1 x FA(9)801 3442 y
SDict begin H.R end
 801 3442 a 801 3493 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.9) cvn H.B /ANN pdfmark end
 801 3493
a 19 w FA(is)h(in)f(bold.)-152 3614 y
SDict begin H.S end
 -152 3614 a -152
3614 a
SDict begin 10.5 H.A end
 -152 3614 a -152 3614 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.8.1) cvn H.B /DEST
pdfmark end
 -152 3614 a 83 x FC(8.1)99
b(Maximizing)25 b(F)n(air)o(ness)-77 3805 y FB(Figure)142
3805 y
SDict begin H.S end
 142 3805 a FB(14)216 3754 y
SDict begin H.R end
 216 3754 a 216 3805
a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.14) cvn H.B /ANN pdfmark end
 216 3805 a 24 w FB(sho)n(ws)f(the)g(f)o(airness)g(inde)o(x)h(for)f
(TCP)e(and)j(UDP)e(traf)n(\002c)g(in)-152 3892 y(our)j(testbed.)44
b(W)-6 b(e)25 b(see)h(that)f(the)h(f)o(airness)g(inde)o(x)g(with)f(our)
h(algorithm)g(is)-152 3979 y(remarkably)j(close)e(to)h(1)f(for)h(both)g
(kinds)g(of)f(traf)n(\002c)g(and)h(across)g(all)f(of-)-152
4066 y(fered)k(loads.)58 b(W)m(ithout)30 b(rate)g(limiting,)i(f)o
(airness)f(de)o(grades)g(quickly)h(as)-152 4153 y(load)26
b(increases.)44 b(Ev)o(en)26 b(with)f(the)g(CG-based)h(rate)g
(limiting,)g(f)o(airness)g(is)-152 4241 y(substantially)20
b(lo)n(wer)f(than)g(with)g(our)g(rate)g(limiting.)-77
4328 y(Figure)141 4329 y
SDict begin H.S end
 141 4329 a -1 x FB(15)215 4277
y
SDict begin H.R end
 215 4277 a 215 4328 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.15) cvn H.B /ANN pdfmark end
 215 4328 a 24 w FB(sho)n(ws)24
b(the)f(f)o(airness)g(pro)o(vided)i(by)e(our)h(model-dri)n(v)o(en)g
(ap-)-152 4415 y(proach)f(holds)f(in)g(a)f(range)h(of)g(simulated)g
(con\002gurations,)h(for)f(both)g(TCP)-152 4502 y(and)h(UDP)d(traf)n
(\002c,)h(including)i(grid)f(and)g(random)g(topologies,)h(with)f(satu-)
-152 4589 y(rated)d(or)g(random)h(demand)g(models,)g(and)f(with)g(and)g
(without)g(R)l(TS/CTS.)-152 4670 y
SDict begin H.S end
 -152 4670 a -152 4670
a
SDict begin 10.5 H.A end
 -152 4670 a -152 4670 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.8.2) cvn H.B /DEST
pdfmark end
 -152 4670 a 77 x FC(8.2)99
b(Maximizing)25 b(T)-9 b(otal)24 b(Thr)n(oughput)-77
4855 y FB(W)-6 b(e)18 b(ne)o(xt)h(consider)h(the)f(performance)h
(objecti)n(v)o(e)f(of)g(maximizing)g(total)-152 4942
y(throughput.)24 b(Figure)429 4943 y
SDict begin H.S end
 429 4943 a -1 x
FB(16)503 4891 y
SDict begin H.R end
 503 4891 a 503 4942 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.16) cvn H.B /ANN pdfmark end
 503 4942 a FB(\(a\))18
b(sho)n(ws)g(that)f(the)g(bene\002ts)g(of)g(rate)g(limiting)g(for)-152
5029 y(saturated)24 b(UDP)f(traf)n(\002c)g(in)g(our)h(testbed)f(are)h
(signi\002cant.)36 b(The)24 b(graph)g(on)-152 5116 y(the)16
b(left)e(plots)h(the)g(a)o(v)o(erage)h(total)f(throughput,)i(and)f(the)
f(graph)h(on)g(the)f(right)-152 5203 y(plots)j(the)g(a)o(v)o(erage)g
(normalized)g(throughput)h(\()p Fz(i.e)o(.)p FB(,)e(the)g(throughput)j
(under)-152 5290 y(rate)29 b(limit)e(normalized)i(by)g(the)g
(throughput)h(under)f(no)g(rate)f(limit\).)51 b(In)-152
5378 y(terms)23 b(of)h(absolute)g(throughput,)i(UDP)c(traf)n(\002c)h(e)
o(xperiences)i(o)o(v)o(er)f(100\045)2040 -152 y
SDict begin H.S end
 2040
-152 a 2040 -152 a
SDict begin 10.5 H.A end
 2040 -152 a 2040 -152 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.12.1) cvn H.B /DEST
pdfmark end
 2040 -152
a 2059 529 a @beginspecial 50 @llx 50 @lly 410 @urx 302
@ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/validation/UDP_noRTS/UDP-noRTS.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: UDP-noRTS.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Thu May 29 15:08:00 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (UDP-noRTS.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 29 15:08:00 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1080 720 M
63 0 V
5649 0 R
-63 0 V
936 720 M
( 0) Rshow
1.000 UL
LTb
1080 1123 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 1) Rshow
1.000 UL
LTb
1080 1526 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 2) Rshow
1.000 UL
LTb
1080 1930 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 3) Rshow
1.000 UL
LTb
1080 2333 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 4) Rshow
1.000 UL
LTb
1080 2736 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 5) Rshow
1.000 UL
LTb
1080 3139 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 6) Rshow
1.000 UL
LTb
1080 3542 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 7) Rshow
1.000 UL
LTb
1080 3946 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 8) Rshow
1.000 UL
LTb
1080 4349 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 9) Rshow
1.000 UL
LTb
1080 4752 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 10) Rshow
1.000 UL
LTb
1080 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1651 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 1) Cshow
1.000 UL
LTb
2222 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2794 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 3) Cshow
1.000 UL
LTb
3365 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3936 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 5) Cshow
1.000 UL
LTb
4507 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
5078 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 7) Cshow
1.000 UL
LTb
5650 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
6221 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 9) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
1.000 UL
LTb
1080 4752 N
0 -4032 V
5712 0 V
0 4032 V
-5712 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Actual throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3936 120 M
(Estimated throughput \(Mbps\) ) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 240 scalefont setfont
1425 964 M
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
48 34 V
49 35 V
49 34 V
49 35 V
49 34 V
49 35 V
49 34 V
stroke
LT1
/Helvetica findfont 240 scalefont setfont
1425 915 M
49 27 V
49 28 V
49 28 V
49 27 V
48 28 V
49 27 V
49 28 V
49 28 V
49 27 V
49 28 V
49 27 V
49 28 V
48 28 V
49 27 V
49 28 V
49 27 V
49 28 V
49 28 V
49 27 V
49 28 V
48 27 V
49 28 V
49 28 V
49 27 V
49 28 V
49 27 V
49 28 V
49 28 V
48 27 V
49 28 V
49 27 V
49 28 V
49 28 V
49 27 V
49 28 V
49 27 V
48 28 V
49 28 V
49 27 V
49 28 V
49 27 V
49 28 V
49 28 V
49 27 V
48 28 V
49 27 V
49 28 V
49 28 V
49 27 V
49 28 V
49 27 V
49 28 V
48 28 V
49 27 V
49 28 V
49 27 V
49 28 V
49 28 V
49 27 V
49 28 V
48 27 V
49 28 V
49 28 V
49 27 V
49 28 V
49 27 V
49 28 V
49 28 V
48 27 V
49 28 V
49 27 V
49 28 V
49 28 V
49 27 V
49 28 V
49 27 V
48 28 V
49 28 V
49 27 V
49 28 V
49 27 V
49 28 V
49 28 V
49 27 V
48 28 V
49 27 V
49 28 V
49 28 V
49 27 V
49 28 V
49 27 V
49 28 V
48 28 V
49 27 V
49 28 V
49 27 V
49 28 V
49 28 V
49 27 V
1.500 UP
stroke
LT2
/Helvetica findfont 240 scalefont setfont
2387 1642 CircleF
1425 964 CircleF
1919 1087 CircleF
2164 1472 CircleF
1788 1158 CircleF
2784 1921 CircleF
3629 2463 CircleF
1508 1022 CircleF
1573 997 CircleF
1451 930 CircleF
2345 1560 CircleF
3504 2429 CircleF
2200 1354 CircleF
3752 2588 CircleF
3747 2551 CircleF
2251 1507 CircleF
4631 2820 CircleF
2359 1623 CircleF
4351 2483 CircleF
3546 2393 CircleF
4064 2602 CircleF
3746 2567 CircleF
6264 4377 CircleF
3831 2640 CircleF
3804 2367 CircleF
3867 2658 CircleF
3801 2599 CircleF
4501 3132 CircleF
3872 2685 CircleF
3071 1964 CircleF
1.000 UL
LTb
1080 4752 N
0 -4032 V
5712 0 V
0 4032 V
-5712 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 990 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/validation/UDP_noRTS/UDP-noRTS-cdf.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: UDP-noRTS-cdf.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Thu May 29 15:08:00 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (UDP-noRTS-cdf.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 29 15:08:00 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0) Rshow
1.000 UL
LTb
1224 1123 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.1) Rshow
1.000 UL
LTb
1224 1526 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.2) Rshow
1.000 UL
LTb
1224 1930 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.3) Rshow
1.000 UL
LTb
1224 2333 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.4) Rshow
1.000 UL
LTb
1224 2736 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.5) Rshow
1.000 UL
LTb
1224 3139 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.6) Rshow
1.000 UL
LTb
1224 3542 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.7) Rshow
1.000 UL
LTb
1224 3946 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.8) Rshow
1.000 UL
LTb
1224 4349 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.9) Rshow
1.000 UL
LTb
1224 4752 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
2338 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.2) Cshow
1.000 UL
LTb
3451 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.4) Cshow
1.000 UL
LTb
4565 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.6) Cshow
1.000 UL
LTb
5678 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.8) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Fractions of runs) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(Ratios between actual and estimated throughput) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.500 UP
1.000 UL
LT0
LTb
2664 4569 M
(scale=1.0) Rshow
LT0
2808 4569 M
670 0 V
4669 854 M
807 135 V
175 134 V
37 135 V
2 134 V
198 134 V
104 135 V
104 134 V
56 135 V
48 134 V
262 134 V
65 135 V
47 134 V
43 135 V
23 134 V
31 134 V
17 135 V
10 134 V
9 135 V
21 134 V
13 134 V
35 135 V
7 134 V
1 135 V
1 134 V
4 134 V
0 135 V
2 134 V
0 135 V
1 134 V
4669 854 Pls
5476 989 Pls
5651 1123 Pls
5688 1258 Pls
5690 1392 Pls
5888 1526 Pls
5992 1661 Pls
6096 1795 Pls
6152 1930 Pls
6200 2064 Pls
6462 2198 Pls
6527 2333 Pls
6574 2467 Pls
6617 2602 Pls
6640 2736 Pls
6671 2870 Pls
6688 3005 Pls
6698 3139 Pls
6707 3274 Pls
6728 3408 Pls
6741 3542 Pls
6776 3677 Pls
6783 3811 Pls
6784 3946 Pls
6785 4080 Pls
6789 4214 Pls
6789 4349 Pls
6791 4483 Pls
6791 4618 Pls
6792 4752 Pls
3143 4569 Pls
1.500 UP
1.000 UL
LT1
LTb
2664 4329 M
(scale=1.1) Rshow
LT1
2808 4329 M
670 0 V
2852 854 M
5166 989 L
68 134 V
11 135 V
79 134 V
5 134 V
195 135 V
157 134 V
14 135 V
58 134 V
36 134 V
134 135 V
221 134 V
26 135 V
19 134 V
0 134 V
11 135 V
37 134 V
4 135 V
12 134 V
38 134 V
14 135 V
40 134 V
20 135 V
10 134 V
63 134 V
20 135 V
4 134 V
77 135 V
253 134 V
2852 854 Crs
5166 989 Crs
5234 1123 Crs
5245 1258 Crs
5324 1392 Crs
5329 1526 Crs
5524 1661 Crs
5681 1795 Crs
5695 1930 Crs
5753 2064 Crs
5789 2198 Crs
5923 2333 Crs
6144 2467 Crs
6170 2602 Crs
6189 2736 Crs
6189 2870 Crs
6200 3005 Crs
6237 3139 Crs
6241 3274 Crs
6253 3408 Crs
6291 3542 Crs
6305 3677 Crs
6345 3811 Crs
6365 3946 Crs
6375 4080 Crs
6438 4214 Crs
6458 4349 Crs
6462 4483 Crs
6539 4618 Crs
6792 4752 Crs
3143 4329 Crs
1.500 UP
1.000 UL
LT2
LTb
2664 4089 M
(scale=1.2) Rshow
LT2
2808 4089 M
670 0 V
2289 854 M
3426 989 L
1241 134 V
66 135 V
160 134 V
83 134 V
1 135 V
204 134 V
45 135 V
137 134 V
51 134 V
95 135 V
196 134 V
23 135 V
39 134 V
4 134 V
16 135 V
12 134 V
21 135 V
1 134 V
14 134 V
29 135 V
4 134 V
69 135 V
9 134 V
52 134 V
127 135 V
2 134 V
89 135 V
357 134 V
2289 854 Star
3426 989 Star
4667 1123 Star
4733 1258 Star
4893 1392 Star
4976 1526 Star
4977 1661 Star
5181 1795 Star
5226 1930 Star
5363 2064 Star
5414 2198 Star
5509 2333 Star
5705 2467 Star
5728 2602 Star
5767 2736 Star
5771 2870 Star
5787 3005 Star
5799 3139 Star
5820 3274 Star
5821 3408 Star
5835 3542 Star
5864 3677 Star
5868 3811 Star
5937 3946 Star
5946 4080 Star
5998 4214 Star
6125 4349 Star
6127 4483 Star
6216 4618 Star
6573 4752 Star
3143 4089 Star
1.500 UP
1.000 UL
LT3
LTb
2664 3849 M
(scale=1.5) Rshow
LT3
2808 3849 M
670 0 V
1772 854 M
410 135 V
1573 134 V
67 135 V
344 134 V
0 134 V
54 135 V
13 134 V
0 135 V
224 134 V
84 134 V
50 135 V
141 134 V
98 135 V
4 134 V
33 134 V
8 135 V
3 134 V
27 135 V
10 134 V
22 134 V
22 135 V
2 134 V
31 135 V
12 134 V
29 134 V
48 135 V
46 134 V
66 135 V
309 134 V
1772 854 Box
2182 989 Box
3755 1123 Box
3822 1258 Box
4166 1392 Box
4166 1526 Box
4220 1661 Box
4233 1795 Box
4233 1930 Box
4457 2064 Box
4541 2198 Box
4591 2333 Box
4732 2467 Box
4830 2602 Box
4834 2736 Box
4867 2870 Box
4875 3005 Box
4878 3139 Box
4905 3274 Box
4915 3408 Box
4937 3542 Box
4959 3677 Box
4961 3811 Box
4992 3946 Box
5004 4080 Box
5033 4214 Box
5081 4349 Box
5127 4483 Box
5193 4618 Box
5502 4752 Box
3143 3849 Box
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 2613 616 a FB(\(a\))h Fz(Satur)o(ated)20
b(UDP)f(demands)2040 1359 y
SDict begin H.S end
 2040 1359 a 2040 1359 a
SDict begin 10.5 H.A end
 2040
1359 a 2040 1359 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.12.2) cvn H.B /DEST
pdfmark end
 2040 1359 a 19 w @beginspecial 50
@llx 50 @lly 410 @urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/validation/TCP_noRTS/TCP-noRTS.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TCP-noRTS.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 22:12:35 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (TCP-noRTS.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 22:12:35 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
936 720 M
63 0 V
5793 0 R
-63 0 V
792 720 M
( 0) Rshow
1.000 UL
LTb
936 1224 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
( 1) Rshow
1.000 UL
LTb
936 1728 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
( 2) Rshow
1.000 UL
LTb
936 2232 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
( 3) Rshow
1.000 UL
LTb
936 2736 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
( 4) Rshow
1.000 UL
LTb
936 3240 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
( 5) Rshow
1.000 UL
LTb
936 3744 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
( 6) Rshow
1.000 UL
LTb
936 4248 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
( 7) Rshow
1.000 UL
LTb
936 4752 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
( 8) Rshow
1.000 UL
LTb
936 720 M
0 63 V
0 3969 R
0 -63 V
936 480 M
( 0) Cshow
1.000 UL
LTb
1668 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 1) Cshow
1.000 UL
LTb
2400 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
3132 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 3) Cshow
1.000 UL
LTb
3864 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
4596 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 5) Cshow
1.000 UL
LTb
5328 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
6060 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 7) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
1.000 UL
LTb
936 4752 N
936 720 L
5856 0 V
0 4032 V
-5856 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Actual throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3864 120 M
(Estimated throughput \(Mbps\) ) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 240 scalefont setfont
1025 781 M
58 40 V
58 40 V
58 40 V
58 40 V
58 40 V
57 39 V
58 40 V
58 40 V
58 40 V
58 40 V
58 40 V
58 39 V
57 40 V
58 40 V
58 40 V
58 40 V
58 40 V
58 39 V
57 40 V
58 40 V
58 40 V
58 40 V
58 40 V
58 39 V
58 40 V
57 40 V
58 40 V
58 40 V
58 40 V
58 39 V
58 40 V
58 40 V
57 40 V
58 40 V
58 40 V
58 39 V
58 40 V
58 40 V
57 40 V
58 40 V
58 40 V
58 39 V
58 40 V
58 40 V
58 40 V
57 40 V
58 40 V
58 39 V
58 40 V
58 40 V
58 40 V
58 40 V
57 40 V
58 39 V
58 40 V
58 40 V
58 40 V
58 40 V
57 40 V
58 39 V
58 40 V
58 40 V
58 40 V
58 40 V
58 40 V
57 39 V
58 40 V
58 40 V
58 40 V
58 40 V
58 40 V
58 39 V
57 40 V
58 40 V
58 40 V
58 40 V
58 39 V
58 40 V
57 40 V
58 40 V
58 40 V
58 40 V
58 39 V
58 40 V
58 40 V
57 40 V
58 40 V
58 40 V
58 39 V
58 40 V
58 40 V
58 40 V
57 40 V
58 40 V
58 39 V
58 40 V
58 40 V
58 40 V
57 40 V
stroke
LT1
/Helvetica findfont 240 scalefont setfont
1025 769 M
58 32 V
58 32 V
58 32 V
58 32 V
58 32 V
57 31 V
58 32 V
58 32 V
58 32 V
58 32 V
58 32 V
58 32 V
57 31 V
58 32 V
58 32 V
58 32 V
58 32 V
58 32 V
57 32 V
58 31 V
58 32 V
58 32 V
58 32 V
58 32 V
58 32 V
57 32 V
58 32 V
58 31 V
58 32 V
58 32 V
58 32 V
58 32 V
57 32 V
58 32 V
58 31 V
58 32 V
58 32 V
58 32 V
57 32 V
58 32 V
58 32 V
58 32 V
58 31 V
58 32 V
58 32 V
57 32 V
58 32 V
58 32 V
58 32 V
58 31 V
58 32 V
58 32 V
57 32 V
58 32 V
58 32 V
58 32 V
58 31 V
58 32 V
57 32 V
58 32 V
58 32 V
58 32 V
58 32 V
58 32 V
58 31 V
57 32 V
58 32 V
58 32 V
58 32 V
58 32 V
58 32 V
58 31 V
57 32 V
58 32 V
58 32 V
58 32 V
58 32 V
58 32 V
57 32 V
58 31 V
58 32 V
58 32 V
58 32 V
58 32 V
58 32 V
57 32 V
58 31 V
58 32 V
58 32 V
58 32 V
58 32 V
58 32 V
57 32 V
58 32 V
58 31 V
58 32 V
58 32 V
58 32 V
57 32 V
1.500 UP
stroke
LT2
/Helvetica findfont 240 scalefont setfont
2109 1287 CircleF
1319 957 CircleF
1859 1232 CircleF
2133 1307 CircleF
1658 1208 CircleF
2366 1464 CircleF
3878 2645 CircleF
1025 781 CircleF
1417 981 CircleF
1361 1013 CircleF
2341 1611 CircleF
3639 2468 CircleF
2188 1442 CircleF
3912 2639 CircleF
3905 2676 CircleF
2298 1546 CircleF
3662 2566 CircleF
2350 1609 CircleF
4576 3024 CircleF
3638 2288 CircleF
3917 2597 CircleF
3551 2518 CircleF
6752 4565 CircleF
3950 2681 CircleF
3862 2530 CircleF
3965 2705 CircleF
3902 2593 CircleF
4376 2972 CircleF
3963 2685 CircleF
3513 1958 CircleF
1.000 UL
LTb
936 4752 N
936 720 L
5856 0 V
0 4032 V
-5856 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 990 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/validation/TCP_noRTS/TCP-noRTS-cdf.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TCP-noRTS-cdf.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 22:12:35 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (TCP-noRTS-cdf.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 22:12:35 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0) Rshow
1.000 UL
LTb
1224 1123 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.1) Rshow
1.000 UL
LTb
1224 1526 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.2) Rshow
1.000 UL
LTb
1224 1930 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.3) Rshow
1.000 UL
LTb
1224 2333 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.4) Rshow
1.000 UL
LTb
1224 2736 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.5) Rshow
1.000 UL
LTb
1224 3139 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.6) Rshow
1.000 UL
LTb
1224 3542 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.7) Rshow
1.000 UL
LTb
1224 3946 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.8) Rshow
1.000 UL
LTb
1224 4349 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.9) Rshow
1.000 UL
LTb
1224 4752 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
2338 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.2) Cshow
1.000 UL
LTb
3451 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.4) Cshow
1.000 UL
LTb
4565 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.6) Cshow
1.000 UL
LTb
5678 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0.8) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Fractions of runs) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(Ratios between actual and estimated throughput) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.500 UP
1.000 UL
LT0
LTb
2664 4569 M
(scale=1.0) Rshow
LT0
2808 4569 M
670 0 V
5109 854 M
23 135 V
60 134 V
239 135 V
175 134 V
104 134 V
179 135 V
27 134 V
211 135 V
99 134 V
6 134 V
73 135 V
11 134 V
15 135 V
11 134 V
9 134 V
89 135 V
12 134 V
23 135 V
10 134 V
29 134 V
2 135 V
6 134 V
30 135 V
18 134 V
118 134 V
12 135 V
84 134 V
5 135 V
3 134 V
5109 854 Pls
5132 989 Pls
5192 1123 Pls
5431 1258 Pls
5606 1392 Pls
5710 1526 Pls
5889 1661 Pls
5916 1795 Pls
6127 1930 Pls
6226 2064 Pls
6232 2198 Pls
6305 2333 Pls
6316 2467 Pls
6331 2602 Pls
6342 2736 Pls
6351 2870 Pls
6440 3005 Pls
6452 3139 Pls
6475 3274 Pls
6485 3408 Pls
6514 3542 Pls
6516 3677 Pls
6522 3811 Pls
6552 3946 Pls
6570 4080 Pls
6688 4214 Pls
6700 4349 Pls
6784 4483 Pls
6789 4618 Pls
6792 4752 Pls
3143 4569 Pls
1.500 UP
1.000 UL
LT1
LTb
2664 4329 M
(scale=1.1) Rshow
LT1
2808 4329 M
670 0 V
4707 854 M
188 135 V
22 134 V
155 135 V
399 134 V
45 134 V
49 135 V
26 134 V
133 135 V
90 134 V
33 134 V
38 135 V
12 134 V
30 135 V
4 134 V
41 134 V
22 135 V
24 134 V
41 135 V
23 134 V
16 134 V
30 135 V
18 134 V
4 135 V
14 134 V
65 134 V
161 135 V
50 134 V
49 135 V
299 134 V
4707 854 Crs
4895 989 Crs
4917 1123 Crs
5072 1258 Crs
5471 1392 Crs
5516 1526 Crs
5565 1661 Crs
5591 1795 Crs
5724 1930 Crs
5814 2064 Crs
5847 2198 Crs
5885 2333 Crs
5897 2467 Crs
5927 2602 Crs
5931 2736 Crs
5972 2870 Crs
5994 3005 Crs
6018 3139 Crs
6059 3274 Crs
6082 3408 Crs
6098 3542 Crs
6128 3677 Crs
6146 3811 Crs
6150 3946 Crs
6164 4080 Crs
6229 4214 Crs
6390 4349 Crs
6440 4483 Crs
6489 4618 Crs
6788 4752 Crs
3143 4329 Crs
1.500 UP
1.000 UL
LT2
LTb
2664 4089 M
(scale=1.2) Rshow
LT2
2808 4089 M
670 0 V
4521 854 M
28 135 V
93 134 V
112 135 V
343 134 V
69 134 V
1 135 V
40 134 V
217 135 V
52 134 V
3 134 V
32 135 V
28 134 V
9 135 V
25 134 V
29 134 V
28 135 V
12 134 V
20 135 V
1 134 V
38 134 V
1 135 V
14 134 V
18 135 V
60 134 V
103 134 V
43 135 V
89 134 V
61 135 V
702 134 V
4521 854 Star
4549 989 Star
4642 1123 Star
4754 1258 Star
5097 1392 Star
5166 1526 Star
5167 1661 Star
5207 1795 Star
5424 1930 Star
5476 2064 Star
5479 2198 Star
5511 2333 Star
5539 2467 Star
5548 2602 Star
5573 2736 Star
5602 2870 Star
5630 3005 Star
5642 3139 Star
5662 3274 Star
5663 3408 Star
5701 3542 Star
5702 3677 Star
5716 3811 Star
5734 3946 Star
5794 4080 Star
5897 4214 Star
5940 4349 Star
6029 4483 Star
6090 4618 Star
6792 4752 Star
3143 4089 Star
1.500 UP
1.000 UL
LT3
LTb
2664 3849 M
(scale=1.5) Rshow
LT3
2808 3849 M
670 0 V
3820 854 M
63 135 V
59 134 V
124 135 V
213 134 V
155 134 V
16 135 V
103 134 V
54 135 V
13 134 V
60 134 V
1 135 V
7 134 V
14 135 V
33 134 V
6 134 V
19 135 V
10 134 V
1 135 V
4 134 V
53 134 V
4 135 V
22 134 V
9 135 V
114 134 V
3 134 V
54 135 V
18 134 V
137 135 V
1603 134 V
3820 854 Box
3883 989 Box
3942 1123 Box
4066 1258 Box
4279 1392 Box
4434 1526 Box
4450 1661 Box
4553 1795 Box
4607 1930 Box
4620 2064 Box
4680 2198 Box
4681 2333 Box
4688 2467 Box
4702 2602 Box
4735 2736 Box
4741 2870 Box
4760 3005 Box
4770 3139 Box
4771 3274 Box
4775 3408 Box
4828 3542 Box
4832 3677 Box
4854 3811 Box
4863 3946 Box
4977 4080 Box
4980 4214 Box
5034 4349 Box
5052 4483 Box
5189 4618 Box
6792 4752 Box
3143 3849 Box
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 2619 1447 a FB(\(b\))26 b Fz(Satur)o(ated)20
b(TCP)d(demands)3036 1510 y
SDict begin H.S end
 3036 1510 a 3036 1510 a
SDict begin 10.5 H.A end
 3036
1510 a 3036 1510 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.12) cvn H.B /DEST pdfmark
end
 3036 1510 a 2040 1650 a FA(Figur)o(e)d(12:)2386
1650 y
SDict begin H.S end
 2386 1650 a 2386 1650 a
SDict begin H.R end
 2386 1650 a 2386 1650
a
SDict begin [ /View [/XYZ H.V] /Dest (figure.12) cvn H.B /DEST pdfmark
end
 2386 1650 a FA(Thr)o(oughput)e(pr)o(ediction)h(accuracy)j(of)f(our)f
(model)h(in)f(our)2040 1737 y(testbed.)22 b(R)m(TS/CTS=OFF)-8
b(.)2064 2499 y @beginspecial 50 @llx 50 @lly 410 @urx
302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/LPvalidation/UDP_noRTS/LP-UDP-noRTS.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: LP-UDP-noRTS.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Tue Jun  3 10:32:47 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (LP-UDP-noRTS.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun  3 10:32:47 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1080 720 M
63 0 V
5649 0 R
-63 0 V
936 720 M
( 0) Rshow
1.000 UL
LTb
1080 1392 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 2) Rshow
1.000 UL
LTb
1080 2064 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 4) Rshow
1.000 UL
LTb
1080 2736 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 6) Rshow
1.000 UL
LTb
1080 3408 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 8) Rshow
1.000 UL
LTb
1080 4080 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 10) Rshow
1.000 UL
LTb
1080 4752 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 12) Rshow
1.000 UL
LTb
1080 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 1) Cshow
1.000 UL
LTb
1651 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2222 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 3) Cshow
1.000 UL
LTb
2794 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3365 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 5) Cshow
1.000 UL
LTb
3936 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4507 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 7) Cshow
1.000 UL
LTb
5078 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
5650 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 9) Cshow
1.000 UL
LTb
6221 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 11) Cshow
1.000 UL
LTb
1.000 UL
LTb
1080 4752 N
0 -4032 V
5712 0 V
0 4032 V
-5712 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Actual throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3936 120 M
(Estimated throughput \(Mbps\) ) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 240 scalefont setfont
1123 1081 M
57 34 V
57 33 V
57 34 V
58 34 V
57 33 V
57 34 V
57 34 V
57 33 V
58 34 V
57 34 V
57 33 V
57 34 V
57 34 V
58 33 V
57 34 V
57 34 V
57 33 V
57 34 V
58 33 V
57 34 V
57 34 V
57 33 V
57 34 V
58 34 V
57 33 V
57 34 V
57 34 V
57 33 V
57 34 V
58 34 V
57 33 V
57 34 V
57 33 V
57 34 V
58 34 V
57 33 V
57 34 V
57 34 V
57 33 V
58 34 V
57 34 V
57 33 V
57 34 V
57 34 V
58 33 V
57 34 V
57 33 V
57 34 V
57 34 V
58 33 V
57 34 V
57 34 V
57 33 V
57 34 V
58 34 V
57 33 V
57 34 V
57 34 V
57 33 V
58 34 V
57 33 V
57 34 V
57 34 V
57 33 V
58 34 V
57 34 V
57 33 V
57 34 V
57 34 V
57 33 V
58 34 V
57 34 V
57 33 V
57 34 V
57 34 V
58 33 V
57 34 V
57 33 V
57 34 V
57 34 V
58 33 V
57 34 V
57 34 V
57 33 V
57 34 V
58 34 V
57 33 V
57 34 V
57 34 V
57 33 V
58 34 V
57 33 V
57 34 V
57 34 V
57 33 V
58 34 V
57 34 V
57 33 V
57 34 V
stroke
LT1
/Helvetica findfont 240 scalefont setfont
1123 1009 M
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 26 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
57 26 V
58 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 26 V
57 27 V
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 27 V
57 26 V
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 26 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 26 V
57 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 27 V
57 26 V
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 26 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
57 27 V
58 27 V
57 27 V
57 27 V
57 27 V
1.500 UP
stroke
LT2
/Helvetica findfont 240 scalefont setfont
1897 1244 CircleF
1555 761 CircleF
1555 961 CircleF
1123 764 CircleF
1530 1173 CircleF
2074 1381 CircleF
3648 2266 CircleF
1148 871 CircleF
1272 996 CircleF
3319 2277 CircleF
1534 911 CircleF
3648 1534 CircleF
2978 1286 CircleF
3645 2276 CircleF
3648 2281 CircleF
2882 952 CircleF
3648 2236 CircleF
3409 1123 CircleF
3646 2268 CircleF
4484 1249 CircleF
4156 1582 CircleF
3724 839 CircleF
6785 3828 CircleF
4197 2300 CircleF
3645 1247 CircleF
4700 2142 CircleF
3661 1653 CircleF
5606 2267 CircleF
3645 2263 CircleF
4275 1872 CircleF
1.000 UL
LTb
1080 4752 N
0 -4032 V
5712 0 V
0 4032 V
-5712 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 991 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/LPvalidation/TCP_noRTS/LP-TCP-noRTS.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: LP-TCP-noRTS.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Jun  4 02:48:07 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (LP-TCP-noRTS.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  4 02:48:07 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1080 720 M
63 0 V
5649 0 R
-63 0 V
936 720 M
( 0) Rshow
1.000 UL
LTb
1080 1296 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 2) Rshow
1.000 UL
LTb
1080 1872 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 4) Rshow
1.000 UL
LTb
1080 2448 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 6) Rshow
1.000 UL
LTb
1080 3024 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 8) Rshow
1.000 UL
LTb
1080 3600 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 10) Rshow
1.000 UL
LTb
1080 4176 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 12) Rshow
1.000 UL
LTb
1080 4752 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 14) Rshow
1.000 UL
LTb
1080 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1896 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2712 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3528 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4344 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
5160 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5976 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
1.000 UL
LTb
1080 4752 N
0 -4032 V
5712 0 V
0 4032 V
-5712 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Actual throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3936 120 M
(Estimated throughput \(Mbps\) ) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 240 scalefont setfont
1810 1235 M
47 34 V
48 33 V
48 34 V
48 34 V
47 34 V
48 33 V
48 34 V
48 34 V
48 34 V
47 33 V
48 34 V
48 34 V
48 34 V
48 33 V
47 34 V
48 34 V
48 34 V
48 33 V
48 34 V
47 34 V
48 33 V
48 34 V
48 34 V
48 34 V
47 33 V
48 34 V
48 34 V
48 34 V
48 33 V
47 34 V
48 34 V
48 34 V
48 33 V
48 34 V
47 34 V
48 34 V
48 33 V
48 34 V
48 34 V
47 34 V
48 33 V
48 34 V
48 34 V
48 33 V
47 34 V
48 34 V
48 34 V
48 33 V
48 34 V
47 34 V
48 34 V
48 33 V
48 34 V
48 34 V
47 34 V
48 33 V
48 34 V
48 34 V
48 34 V
47 33 V
48 34 V
48 34 V
48 34 V
48 33 V
47 34 V
48 34 V
48 33 V
48 34 V
48 34 V
47 34 V
48 33 V
48 34 V
48 34 V
48 34 V
47 33 V
48 34 V
48 34 V
48 34 V
48 33 V
47 34 V
48 34 V
48 34 V
48 33 V
48 34 V
47 34 V
48 34 V
48 33 V
48 34 V
48 34 V
47 34 V
48 33 V
48 34 V
48 34 V
47 33 V
48 34 V
48 34 V
48 34 V
48 33 V
47 34 V
stroke
LT1
/Helvetica findfont 240 scalefont setfont
1810 1132 M
47 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 26 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
47 27 V
48 27 V
48 27 V
48 27 V
48 27 V
47 27 V
1.500 UP
stroke
LT2
/Helvetica findfont 240 scalefont setfont
2071 1051 CircleF
1827 850 CircleF
1827 1037 CircleF
2143 1129 CircleF
1810 1001 CircleF
2198 1144 CircleF
3322 1804 CircleF
2200 1122 CircleF
2195 1100 CircleF
3087 1819 CircleF
1812 970 CircleF
3322 1191 CircleF
2844 1174 CircleF
3320 1812 CircleF
2650 1123 CircleF
2775 1149 CircleF
3322 1805 CircleF
3151 1239 CircleF
3321 1782 CircleF
3919 1119 CircleF
3685 1555 CircleF
3377 1228 CircleF
5563 2914 CircleF
3714 1751 CircleF
3320 1068 CircleF
5555 2847 CircleF
3332 1471 CircleF
6541 2732 CircleF
3320 1823 CircleF
3770 1469 CircleF
1.000 UL
LTb
1080 4752 N
0 -4032 V
5712 0 V
0 4032 V
-5712 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 2284 2587 a FB(\(a\))19 b(Saturated)f(UDP)h(traf)n(\002c)f
(\(b\))h(Saturated)g(TCP)e(traf)n(\002c)2040 2630 y
SDict begin H.S end
 2040
2630 a 2040 2630 a
SDict begin 10.5 H.A end
 2040 2630 a 2040 2630 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.13) cvn H.B /DEST pdfmark
end
 2040 2630
a 157 x FA(Figur)o(e)k(13:)2401 2787 y
SDict begin H.S end
 2401 2787 a 2401
2787 a
SDict begin H.R end
 2401 2787 a 2401 2787 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.13) cvn H.B /DEST pdfmark
end
 2401 2787 a FA(Thr)o(oughput)f(pr)o
(ediction)h(accuracy)i(in)e(our)h(testbed)f(us-)2040
2874 y(ing)d(CG-model)h(f)n(or)g(saturated)g(demands)f(and)g(R)m
(TS/CTS)f(=)i(OFF)-8 b(.)2040 3111 y FB(impro)o(v)o(ement;)25
b(in)e(terms)f(of)h(normalized)g(throughput,)i(the)e(a)o(v)o(erage)g
(im-)2040 3198 y(pro)o(v)o(ement)g(ranges)g(from)g(100\045)g(to)f
(2400\045.)34 b(The)23 b(lar)o(ger)e(impro)o(v)o(ement)2040
3285 y(in)c(the)h(latter)e(suggests)i(that)f(rate)g(limiting)g(is)g
(especially)h(bene\002cial)f(to)g(the)2040 3373 y(\003o)n(ws)22
b(that)h(e)o(xperience)g(lo)n(w)g(throughput)h(under)f(no)g(rate)f
(limiting.)33 b(Lik)o(e)2040 3460 y(our)d(model,)i(the)d(CG-based)h
(model)g(is)f(able)g(to)g(identify)h(interference-)2040
3547 y(related)19 b(bottlenecks)g(and)g(impose)g(rate)f(limits.)k
(Therefore)d(it)f(helps)h(boost)2040 3634 y(netw)o(ork)26
b(throughput.)43 b(Ho)n(we)n(v)o(er)m(,)27 b(because)f(the)f(CG-based)h
(model)g(sig-)2040 3721 y(ni\002cantly)c(o)o(v)o(er)o(-predicts)g
(throughput)h(\(Section)3375 3722 y
SDict begin H.S end
 3375 3722 a -1 x
FB(7)3412 3673 y
SDict begin H.R end
 3412 3673 a 3412 3721 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.7) cvn H.B /ANN pdfmark end
 3412 3721 a
FB(\),)f(the)g(loss)f(rate)h(in)f(the)2040 3808 y(netw)o(ork)26
b(is)f(much)h(higher)g(and)g(the)f(throughput)i(is)e(consistently)h(lo)
n(wer)l(.)2040 3896 y(Figure)2258 3897 y
SDict begin H.S end
 2258 3897 a
-1 x FB(16)2332 3845 y
SDict begin H.R end
 2332 3845 a 2332 3896 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.16) cvn H.B /ANN pdfmark end
 2332 3896
a FB(\(b\))e(sho)n(ws)g(the)g(bene\002t)f(of)h(rate)f(limiting)g(e)o
(xtends)h(to)f(random)2040 3983 y(UDP)18 b(demands.)2115
4070 y(Figure)2336 4071 y
SDict begin H.S end
 2336 4071 a -1 x FB(17)2410
4019 y
SDict begin H.R end
 2410 4019 a 2410 4070 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.17) cvn H.B /ANN pdfmark end
 2410 4070 a 27 w FB(sho)n(ws)26
b(that)h(the)f(gain)g(from)g(rate)g(limiting)g(saturated)h(and)2040
4157 y(random)34 b(TCP)d(\003o)n(ws)h(is)g(a)h(more)g(modest)g
(10-50\045.)65 b(This)32 b(lo)n(wer)h(im-)2040 4244 y(pro)o(v)o(ement)
24 b(for)e(TCP)g(is)g(e)o(xpected)i(gi)n(v)o(en)f(that)g(we)f(e)o
(xperiment)h(with)g(in-)2040 4332 y(\002nitely)i(long)i(\003o)n(ws)f
(that)f(react)h(well)f(to)h(congestion,)j(thus)d(minimizing)2040
4419 y(interference-related)d(losses.)33 b(Ho)n(we)n(v)o(er)m(,)23
b(we)f(belie)n(v)o(e)h(that)f(rate)g(limiting)2040 4506
y(will)g(pro)o(vide)i(substantial)g(bene\002ts)f(when)h(TCP)e(traf)n
(\002c)h(is)f(composed)j(of)2040 4593 y(man)o(y)d(short)g(transfers,)g
(as)g(is)f(common)i(for)f(W)-6 b(eb)21 b(transactions,)i(because)2040
4680 y(an)f(aggre)o(gate)h(of)f(short)h(TCP)d(\003o)n(ws)i(is)g
(signi\002cantly)g(less)g(responsi)n(v)o(e)h(to)2040
4767 y(losses)c(than)h(long)f(TCP)f(\003o)n(ws.)2115
4855 y(Figure)2332 4856 y
SDict begin H.S end
 2332 4856 a -1 x FB(18)2406
4804 y
SDict begin H.R end
 2406 4804 a 2406 4855 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.18) cvn H.B /ANN pdfmark end
 2406 4855 a 23 w FB(sho)n(ws)23
b(the)f(netw)o(ork)i(throughput)g(impro)o(v)o(ement)f(for)f(v)n(ari-)
2040 4942 y(ous)h(simulated)g(con\002gurations)h(with)e(UDP)g(traf)n
(\002c.)33 b(The)22 b(error)g(bars)h(de-)2040 5029 y(note)e(standard)h
(de)n(viation.)30 b(W)-6 b(e)20 b(see)h(results)f(consistent)i(with)e
(the)h(testbed)2040 5116 y(across)f(all)e(con\002gurations.)2115
5203 y(Figure)2327 5205 y
SDict begin H.S end
 2327 5205 a -2 x FB(19)2401
5153 y
SDict begin H.R end
 2401 5153 a 2401 5203 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.19) cvn H.B /ANN pdfmark end
 2401 5203 a 19 w FB(sho)n(ws)g(the)g(ef)
n(fecti)n(v)o(eness)h(of)e(rate)h(limiting)f(for)h(TCP)e(traf)n(\002c)
2040 5290 y(in)i(simulated)h(con\002gurations)h(with)e(and)h(without)g
(R)l(TS/CTS.)c(W)-6 b(e)18 b(see,)g(as)2040 5378 y(with)k(the)g
(testbed,)g(the)g(bene\002t)g(of)g(rate)g(limiting)f(tends)i(to)e
(increase)i(with)p eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152
-359 a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.11) cvn H.B /DEST pdfmark
end
 -152 -359
a -155 529 a
SDict begin H.S end
 -155 529 a -155 529 a
SDict begin 10.5 H.A end
 -155 529 a -155 529
a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.14.1) cvn H.B /DEST
pdfmark end
 -155 529 a 18 w @beginspecial 50 @llx 50 @lly 410 @urx
302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/Fairness/UDP_noRTS/UDP_Fairness.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: UDP_Fairness.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sun Jun  1 12:01:21 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (UDP_Fairness.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun  1 12:01:21 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0) Rshow
1.000 UL
LTb
1224 1453 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.2) Rshow
1.000 UL
LTb
1224 2186 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.4) Rshow
1.000 UL
LTb
1224 2919 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.6) Rshow
1.000 UL
LTb
1224 3652 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.8) Rshow
1.000 UL
LTb
1224 4385 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1920 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2616 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3312 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4704 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5400 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6096 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Fairness index) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(Num of Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
2232 1383 M
(wo/ RL) Rshow
LT0
2376 1383 M
702 0 V
1572 4385 M
1920 3182 L
2616 1899 L
4008 1694 L
5400 1452 L
6792 1264 L
stroke
LT1
LTb
2232 1143 M
(CG RL) Rshow
LT1
2376 1143 M
702 0 V
1572 4385 M
348 -508 V
696 -470 V
4008 3287 L
5400 3120 L
1392 495 V
2.000 UP
stroke
LT2
LTb
2232 903 M
(Our RL) Rshow
LT2
2376 903 M
702 0 V
1572 4385 M
348 0 V
696 -85 V
1392 -3 V
1392 64 V
1392 -4 V
1572 4385 Pls
1920 4385 Pls
2616 4300 Pls
4008 4297 Pls
5400 4361 Pls
6792 4357 Pls
2727 903 Pls
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial -42 616 a FB(\(a\))25 b Fz(Satur)o(ated)20
b(UDP)e(tr)o(af)o(\002c)854 529 y
SDict begin H.S end
 854 529 a 854 529 a
SDict begin 10.5 H.A end

854 529 a 854 529 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.14.2) cvn H.B /DEST
pdfmark end
 854 529 a 19 w @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/Fairness/TCP_noRTS/TCP_Fairness.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TCP_Fairness.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sun Jun  1 12:01:59 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (TCP_Fairness.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun  1 12:01:59 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0) Rshow
1.000 UL
LTb
1224 1453 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.2) Rshow
1.000 UL
LTb
1224 2186 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.4) Rshow
1.000 UL
LTb
1224 2919 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.6) Rshow
1.000 UL
LTb
1224 3652 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.8) Rshow
1.000 UL
LTb
1224 4385 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1920 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2616 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3312 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4704 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5400 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6096 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Fairness index) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(Num of Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
2232 1383 M
(wo/ RL) Rshow
LT0
2376 1383 M
702 0 V
1572 4385 M
348 -658 V
2616 2202 L
4008 1935 L
5400 1623 L
1392 -85 V
stroke
LT1
LTb
2232 1143 M
(CG RL) Rshow
LT1
2376 1143 M
702 0 V
1572 4385 M
348 -571 V
696 -95 V
1392 44 V
5400 3586 L
1392 266 V
2.000 UP
stroke
LT2
LTb
2232 903 M
(Our RL) Rshow
LT2
2376 903 M
702 0 V
1572 4385 M
348 0 V
696 -240 V
1392 218 V
1392 -5 V
1392 27 V
1572 4385 Pls
1920 4385 Pls
2616 4145 Pls
4008 4363 Pls
5400 4358 Pls
6792 4385 Pls
2727 903 Pls
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 982 616 a FB(\(b\))26 b Fz(Satur)o(ated)20
b(TCP)e(tr)o(af)o(\002c)-152 643 y
SDict begin H.S end
 -152 643 a -152 643
a
SDict begin 10.5 H.A end
 -152 643 a -152 643 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.14) cvn H.B /DEST pdfmark
end
 -152 643 a -101 785 a FA(Figur)o(e)g(14:)251
785 y
SDict begin H.S end
 251 785 a 251 785 a
SDict begin H.R end
 251 785 a 251 785 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.14) cvn H.B /DEST pdfmark
end
 251 785
a FA(F)n(air)o(ness)g(comparison)h(in)f(testbed.)k(R)m(TS/CTS=OFF)-8
b(.)-152 831 y
SDict begin H.S end
 -152 831 a -152 831 a
SDict begin 10.5 H.A end
 -152 831 a -152
831 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.15.1) cvn H.B /DEST
pdfmark end
 -152 831 a -131 1494 a @beginspecial 50 @llx 50
@lly 410 @urx 302 @ury 1137 @rwi @setspecial
%%BeginDocument: Figs/sim/FAIR/PL1024/grid-sparse-inf-rts0/fair-id-m2-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/FAIR/results/PL1024/grid-sparse-inf-rts0/fair-id-m2-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sat May 31 04:15:59 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/FAIR/results/PL1024/grid-sparse-inf-rts0/fair-id-m2-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat May 31 04:15:59 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
(-0.4) Rshow
1.000 UL
LTb
1224 1258 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
(-0.2) Rshow
1.000 UL
LTb
1224 1795 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0) Rshow
1.000 UL
LTb
1224 2333 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.2) Rshow
1.000 UL
LTb
1224 2870 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.4) Rshow
1.000 UL
LTb
1224 3408 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.6) Rshow
1.000 UL
LTb
1224 3946 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.8) Rshow
1.000 UL
LTb
1224 4483 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1781 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2338 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
2894 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
3451 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
4565 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
5122 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
5678 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
6235 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 18) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 20) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Fairness index) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(# Flows) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
1368 2103 M
(UDP wo/ RL) Lshow
LT0
3384 2103 M
670 0 V
1502 4483 M
279 -772 V
557 -735 V
3451 2327 L
4565 2118 L
1113 56 V
1114 -79 V
stroke
LT1
LTb
1368 1863 M
(UDP w/ CG RL) Lshow
LT1
3384 1863 M
670 0 V
1502 4483 M
279 -490 V
557 -769 V
3451 2669 L
4565 2378 L
1113 -93 V
1114 -46 V
1.500 UP
stroke
LT2
LTb
1368 1623 M
(UDP w/ our RL) Lshow
LT2
3384 1623 M
670 0 V
1502 4483 M
279 -15 V
557 -239 V
1113 163 V
4565 4193 L
1113 20 V
6792 4033 L
1502 4483 Pls
1781 4468 Pls
2338 4229 Pls
3451 4392 Pls
4565 4193 Pls
5678 4213 Pls
6792 4033 Pls
3719 1623 Pls
1.000 UL
LT3
LTb
1368 1383 M
(TCP wo/ RL) Lshow
LT3
3384 1383 M
670 0 V
1502 4483 M
279 -569 V
557 -733 V
3451 2687 L
4565 2394 L
1113 -59 V
1114 -60 V
stroke
LT4
LTb
1368 1143 M
(TCP w/ CG RL) Lshow
LT4
3384 1143 M
670 0 V
1502 4483 M
279 -572 V
557 -597 V
3451 2868 L
4565 2538 L
1113 -89 V
1114 -71 V
1.500 UP
stroke
LT5
LTb
1368 903 M
(TCP w/ our RL) Lshow
LT5
3384 903 M
670 0 V
1502 4483 M
279 -34 V
557 -265 V
1113 128 V
1114 -48 V
1113 39 V
1114 -79 V
1502 4483 Crs
1781 4449 Crs
2338 4184 Crs
3451 4312 Crs
4565 4264 Crs
5678 4303 Crs
6792 4224 Crs
3719 903 Crs
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial -150 1582 a FB(\(a\))29 b Fz(Grid)d(topolo)o(gy)l(,)j
(satur)o(ated)f(de-)-150 1656 y(mands,)19 b(RTS/CTS=OFF)854
1494 y
SDict begin H.S end
 854 1494 a 854 1494 a
SDict begin 10.5 H.A end
 854 1494 a 854 1494 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.15.2) cvn H.B /DEST
pdfmark end
 854
1494 a 19 w @beginspecial 50 @llx 50 @lly 410 @urx 302
@ury 1137 @rwi @setspecial
%%BeginDocument: Figs/sim/FAIR/PL1024/rand-sparse-inf-rts0/fair-id-m2-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/FAIR/results/PL1024/rand-sparse-inf-rts0/fair-id-m2-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sat May 31 04:15:59 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/FAIR/results/PL1024/rand-sparse-inf-rts0/fair-id-m2-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat May 31 04:15:59 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
(-0.4) Rshow
1.000 UL
LTb
1224 1258 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
(-0.2) Rshow
1.000 UL
LTb
1224 1795 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0) Rshow
1.000 UL
LTb
1224 2333 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.2) Rshow
1.000 UL
LTb
1224 2870 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.4) Rshow
1.000 UL
LTb
1224 3408 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.6) Rshow
1.000 UL
LTb
1224 3946 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.8) Rshow
1.000 UL
LTb
1224 4483 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1781 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2338 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
2894 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
3451 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
4565 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
5122 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
5678 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
6235 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 18) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 20) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Fairness index) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(# Flows) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
1368 2103 M
(UDP wo/ RL) Lshow
LT0
3384 2103 M
670 0 V
1502 4483 M
279 -561 V
557 -886 V
3451 2511 L
4565 2256 L
1113 -26 V
1114 -91 V
stroke
LT1
LTb
1368 1863 M
(UDP w/ CG RL) Lshow
LT1
3384 1863 M
670 0 V
1502 4483 M
279 -360 V
557 -706 V
3451 2766 L
4565 2517 L
1113 -18 V
6792 2292 L
1.500 UP
stroke
LT2
LTb
1368 1623 M
(UDP w/ our RL) Lshow
LT2
3384 1623 M
670 0 V
1502 4483 M
279 -20 V
557 19 V
1113 -5 V
1114 -34 V
1113 18 V
1114 -83 V
1502 4483 Pls
1781 4463 Pls
2338 4482 Pls
3451 4477 Pls
4565 4443 Pls
5678 4461 Pls
6792 4378 Pls
3719 1623 Pls
1.000 UL
LT3
LTb
1368 1383 M
(TCP wo/ RL) Lshow
LT3
3384 1383 M
670 0 V
1502 4483 M
279 -669 V
557 -873 V
3451 2740 L
4565 2453 L
1113 32 V
6792 2261 L
stroke
LT4
LTb
1368 1143 M
(TCP w/ CG RL) Lshow
LT4
3384 1143 M
670 0 V
1502 4483 M
279 -593 V
557 -621 V
3451 2991 L
4565 2688 L
1113 81 V
6792 2491 L
1.500 UP
stroke
LT5
LTb
1368 903 M
(TCP w/ our RL) Lshow
LT5
3384 903 M
670 0 V
1502 4483 M
279 -125 V
557 106 V
1113 -27 V
1114 -6 V
1113 -1 V
1114 -46 V
1502 4483 Crs
1781 4358 Crs
2338 4464 Crs
3451 4437 Crs
4565 4431 Crs
5678 4430 Crs
6792 4384 Crs
3719 903 Crs
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 854 1582 a FB(\(b\))46 b FA(Random)63 b(topology)p
Fz(,)74 b(satu-)854 1656 y(r)o(ated)19 b(demands,)h(RTS/CTS=OFF)-150
2379 y
SDict begin H.S end
 -150 2379 a -150 2379 a
SDict begin 10.5 H.A end
 -150 2379 a -150 2379
a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.15.3) cvn H.B /DEST
pdfmark end
 -150 2379 a 19 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1137 @rwi @setspecial
%%BeginDocument: Figs/sim/FAIR/PL1024/grid-sparse-rand-rts0/fair-id-m2-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/FAIR/results/PL1024/grid-sparse-rand-rts0/fair-id-m2-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sat May 31 04:15:59 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/FAIR/results/PL1024/grid-sparse-rand-rts0/fair-id-m2-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat May 31 04:15:59 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
(-0.4) Rshow
1.000 UL
LTb
1224 1258 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
(-0.2) Rshow
1.000 UL
LTb
1224 1795 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0) Rshow
1.000 UL
LTb
1224 2333 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.2) Rshow
1.000 UL
LTb
1224 2870 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.4) Rshow
1.000 UL
LTb
1224 3408 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.6) Rshow
1.000 UL
LTb
1224 3946 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.8) Rshow
1.000 UL
LTb
1224 4483 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1781 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2338 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
2894 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
3451 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
4565 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
5122 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
5678 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
6235 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 18) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 20) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Fairness index) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(# Flows) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
1368 2103 M
(UDP wo/ RL) Lshow
LT0
3384 2103 M
670 0 V
1502 4483 M
279 -365 V
2338 3057 L
3451 2374 L
1114 62 V
5678 2177 L
1114 -70 V
stroke
LT1
LTb
1368 1863 M
(UDP w/ CG RL) Lshow
LT1
3384 1863 M
670 0 V
1502 4483 M
279 -200 V
557 -957 V
3451 2661 L
4565 2479 L
5678 2319 L
6792 2162 L
1.500 UP
stroke
LT2
LTb
1368 1623 M
(UDP w/ our RL) Lshow
LT2
3384 1623 M
670 0 V
1502 4483 M
279 -48 V
557 -303 V
1113 294 V
1114 -60 V
1113 -49 V
6792 4186 L
1502 4483 Pls
1781 4435 Pls
2338 4132 Pls
3451 4426 Pls
4565 4366 Pls
5678 4317 Pls
6792 4186 Pls
3719 1623 Pls
1.000 UL
LT3
LTb
1368 1383 M
(TCP wo/ RL) Lshow
LT3
3384 1383 M
670 0 V
1502 4483 M
279 -586 V
557 -748 V
3451 2684 L
1114 -42 V
5678 2490 L
6792 2351 L
stroke
LT4
LTb
1368 1143 M
(TCP w/ CG RL) Lshow
LT4
3384 1143 M
670 0 V
1502 4483 M
279 -523 V
557 -755 V
3451 3045 L
4565 2601 L
1113 -45 V
6792 2369 L
1.500 UP
stroke
LT5
LTb
1368 903 M
(TCP w/ our RL) Lshow
LT5
3384 903 M
670 0 V
1502 4483 M
279 -115 V
557 -301 V
1113 251 V
1114 2 V
1113 -23 V
1114 -19 V
1502 4483 Crs
1781 4368 Crs
2338 4067 Crs
3451 4318 Crs
4565 4320 Crs
5678 4297 Crs
6792 4278 Crs
3719 903 Crs
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial -150 2467 a FB(\(c\))32 b Fz(Grid)g(topolo)o(gy)l(,)38
b FA(random)33 b(de-)-150 2541 y(mand)p Fz(,)18 b(RTS/CTS=OFF)854
2379 y
SDict begin H.S end
 854 2379 a 854 2379 a
SDict begin 10.5 H.A end
 854 2379 a 854 2379 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.15.4) cvn H.B /DEST
pdfmark end
 854
2379 a 19 w @beginspecial 50 @llx 50 @lly 410 @urx 302
@ury 1137 @rwi @setspecial
%%BeginDocument: Figs/sim/FAIR/PL1024/grid-sparse-inf-rts1/fair-id-m2-rts1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/FAIR/results/PL1024/grid-sparse-inf-rts1/fair-id-m2-rts1.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sat May 31 04:15:59 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/FAIR/results/PL1024/grid-sparse-inf-rts1/fair-id-m2-rts1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat May 31 04:15:59 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
(-0.4) Rshow
1.000 UL
LTb
1224 1258 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
(-0.2) Rshow
1.000 UL
LTb
1224 1795 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0) Rshow
1.000 UL
LTb
1224 2333 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.2) Rshow
1.000 UL
LTb
1224 2870 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.4) Rshow
1.000 UL
LTb
1224 3408 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.6) Rshow
1.000 UL
LTb
1224 3946 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.8) Rshow
1.000 UL
LTb
1224 4483 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1781 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2338 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
2894 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
3451 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
4565 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
5122 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
5678 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
6235 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 18) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 20) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Fairness index) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(# Flows) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
1368 2103 M
(UDP wo/ RL) Lshow
LT0
3384 2103 M
670 0 V
1502 4483 M
279 -711 V
557 -457 V
3451 2455 L
4565 2212 L
1113 34 V
6792 2111 L
stroke
LT1
LTb
1368 1863 M
(UDP w/ CG RL) Lshow
LT1
3384 1863 M
670 0 V
1502 4483 M
279 -358 V
557 -610 V
3451 2898 L
4565 2508 L
1113 -73 V
1114 -51 V
1.500 UP
stroke
LT2
LTb
1368 1623 M
(UDP w/ our RL) Lshow
LT2
3384 1623 M
670 0 V
1502 4483 M
279 -30 V
557 -156 V
1113 164 V
1114 -25 V
1113 -13 V
1114 -3 V
1502 4483 Pls
1781 4453 Pls
2338 4297 Pls
3451 4461 Pls
4565 4436 Pls
5678 4423 Pls
6792 4420 Pls
3719 1623 Pls
1.000 UL
LT3
LTb
1368 1383 M
(TCP wo/ RL) Lshow
LT3
3384 1383 M
670 0 V
1502 4483 M
279 -572 V
557 -524 V
3451 2861 L
4565 2604 L
5678 2476 L
1114 -99 V
stroke
LT4
LTb
1368 1143 M
(TCP w/ CG RL) Lshow
LT4
3384 1143 M
670 0 V
1502 4483 M
279 -387 V
557 -482 V
3451 3144 L
4565 2712 L
1113 -61 V
6792 2486 L
1.500 UP
stroke
LT5
LTb
1368 903 M
(TCP w/ our RL) Lshow
LT5
3384 903 M
670 0 V
1502 4483 M
279 -34 V
557 -156 V
1113 153 V
1114 -25 V
1113 -12 V
1114 -4 V
1502 4483 Crs
1781 4449 Crs
2338 4293 Crs
3451 4446 Crs
4565 4421 Crs
5678 4409 Crs
6792 4405 Crs
3719 903 Crs
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 854 2467 a FB(\(d\))28 b Fz(Grid)e(topolo)o(gy)l(,)i
(satur)o(ated)e(de-)854 2541 y(mand,)19 b FA(R)m(TS/CTS=ON)845
2601 y
SDict begin H.S end
 845 2601 a 845 2601 a
SDict begin 10.5 H.A end
 845 2601 a 845 2601 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.15) cvn H.B /DEST pdfmark
end
 845
2601 a -152 2741 a FA(Figur)o(e)24 b(15:)217 2741 y
SDict begin H.S end
 217
2741 a 217 2741 a
SDict begin H.R end
 217 2741 a 217 2741 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.15) cvn H.B /DEST pdfmark
end
 217 2741 a FA(F)n(air)o(ness)g
(impr)o(o)o(v)o(ement)h(in)f(simulation)g(f)n(or)h(differ)o(ence)-152
2828 y(con\002gurations.)k(The)20 b(aspect)h(of)g(a)g(con\002guration)f
(that)g(differs)h(fr)o(om)-152 2915 y(the)e(\002rst)f(one)h(is)f(in)g
(bold.)-152 3026 y FB(more)26 b(\003o)n(ws.)43 b(Its)25
b(bene\002t)g(increases)h(to)g(20-40\045)g(when)h(the)e(number)i(of)
-152 3114 y(\003o)n(ws)f(reaches)i(20.)45 b(In)27 b(general,)h(rate)e
(limiting)g(helps)h(TCP)e(traf)n(\002c)h(less)-152 3201
y(than)20 b(UDP)e(traf)n(\002c.)-152 3283 y
SDict begin H.S end
 -152 3283
a -152 3283 a
SDict begin 10.5 H.A end
 -152 3283 a -152 3283 a
SDict begin [ /View [/XYZ H.V] /Dest (section.9) cvn H.B /DEST pdfmark
end
 -152 3283 a 116
x FC(9.)100 b(THE)25 b(R)m(OLE)g(OF)g(R)m(OUTING)-77
3507 y FB(All)g(the)g(results)g(abo)o(v)o(e)i(are)e(based)h(on)g
(routing)g(paths)g(chosen)h(by)f(the)-152 3594 y(ETX)14
b(protocol.)22 b(In)15 b(this)f(section,)h(we)g(sho)n(w)g(that,)f
(surprisingly)-5 b(,)16 b(the)f(choice)-152 3681 y(of)23
b(the)f(e)o(xact)h(routing)g(protocol)g(mak)o(es)g(little)e(dif)n
(ference)i(in)g(our)f(e)o(xperi-)-152 3768 y(ments.)i(W)-6
b(e)18 b(study)i(three)f(other)g(protocols)h(and)g(\002nd)e(that)h(all)
g(four)g(beha)o(v)o(e)-152 3856 y(similarly)-5 b(.)42
b(What)25 b(seems)g(to)g(matter)g(most)g(is)g(whether)h(\003o)n(ws)f
(are)g(being)-152 3943 y(rate-limited.)-77 4030 y(The)19
b(three)g(other)g(protocols)h(that)f(we)g(study)g(are)g(the)g(follo)n
(wing.)-40 4191 y Fr(\017)38 b Fz(HOP)18 b FB(selects)h(a)g(path)g
(with)g(minimum)g(hop-count.)-40 4311 y Fr(\017)38 b
Fz(MIC)16 b FB([)213 4312 y
SDict begin H.S end
 213 4312 a -1 x FB(35)287
4261 y
SDict begin H.R end
 287 4261 a 287 4311 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.mic) cvn H.B /ANN pdfmark end
 287 4311 a FB(])g(scales)g(ETX)f(v)n
(alues)i(of)f(a)g(link)g(by)g(multiplying)h(it)e(by)i(the)35
4399 y(sum)k(of)g(the)f(neighbors)i(of)f(the)g(tw)o(o)f(end)i(points.)
28 b(It)20 b(then)h(selects)g(a)35 4486 y(path)e(with)g(the)g(minimum)g
(scaled)h(ETX)e(v)n(alue.)-40 4607 y Fr(\017)38 b Fz(CG)29
b FB(selects)h(the)g(routes)g(by)g(casting)g(the)g(routing)h(problem)f
(to)g(a)35 4694 y(maximum)g(\003o)n(w)f(problem)g(augmented)i(with)e
(interference)g(con-)35 4781 y(straints)f(deri)n(v)o(ed)g(by)h(a)f
(con\003ict)f(graph)i([)1165 4781 y
SDict begin H.S end
 1165 4781 a FB(14)1239
4730 y
SDict begin H.R end
 1239 4730 a 1239 4781 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.JPPQ03) cvn H.B /ANN pdfmark end
 1239 4781 a FB(].)50 b(These)28
b(routes)h(are)35 4868 y(close)17 b(to)g(optimal)f(if)g(nodes)i(can)f
(\002nely)g(coordinate)g(transmissions.)-77 5029 y(W)-6
b(e)20 b(consider)i(only)f(the)g(goal)g(of)g(maximizing)h(throughput)g
(in)f(this)f(pa-)-152 5116 y(per)m(,)f(b)o(ut)g(we)g(obtain)g(similar)f
(results)h(for)g(maximizing)h(f)o(airness.)-77 5203 y(Figure)132
5204 y
SDict begin H.S end
 132 5204 a -1 x FB(20)206 5153 y
SDict begin H.R end
 206 5153 a 206
5203 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.20) cvn H.B /ANN pdfmark end
 206 5203 a 15 w FB(sho)n(ws)15 b(UDP)f(and)h(TCP)e(performance)j
(under)f(dif)n(ferent)g(rout-)-152 5290 y(ing)i(schemes.)23
b(The)17 b(bottom)g(four)g(curv)o(es)g(are)f(the)h(performance)h(of)e
(dif)n(fer)o(-)-152 5378 y(ent)j(routing)h(schemes)g(under)g(no)g(rate)
e(limiting,)h(and)g(the)g(top)h(four)f(curv)o(es)2040
-152 y
SDict begin H.S end
 2040 -152 a 2040 -152 a
SDict begin 10.5 H.A end
 2040 -152 a 2040 -152
a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.16.1) cvn H.B /DEST
pdfmark end
 2040 -152 a 2064 529 a @beginspecial 50 @llx 50 @lly
410 @urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/LPvalidation/UDP_noRTS/UDP_ETX.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: UDP_ETX.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Tue Jun  3 10:32:47 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (UDP_ETX.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun  3 10:32:47 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.5) Rshow
1.000 UL
LTb
1224 1123 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 1526 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.5) Rshow
1.000 UL
LTb
1224 1930 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2) Rshow
1.000 UL
LTb
1224 2333 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2.5) Rshow
1.000 UL
LTb
1224 2736 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3) Rshow
1.000 UL
LTb
1224 3139 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3.5) Rshow
1.000 UL
LTb
1224 3542 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4) Rshow
1.000 UL
LTb
1224 3946 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4.5) Rshow
1.000 UL
LTb
1224 4349 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 5) Rshow
1.000 UL
LTb
1224 4752 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 5.5) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1920 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2616 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3312 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4704 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5400 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6096 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Throughput (Mbps)) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(Num of Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
2232 4569 M
(wo/ RL) Rshow
LT0
2376 4569 M
702 0 V
1572 1064 M
348 456 V
696 243 V
4008 1229 L
5400 1039 L
1392 222 V
1572 1064 Pls
1920 1520 Pls
2616 1763 Pls
4008 1229 Pls
5400 1039 Pls
6792 1261 Pls
2727 4569 Pls
2.000 UP
1.000 UL
LT1
LTb
2232 4329 M
(CG RL) Rshow
LT1
2376 4329 M
702 0 V
1572 942 M
348 1387 V
696 238 V
4008 2346 L
1392 945 V
1392 193 V
1572 942 Crs
1920 2329 Crs
2616 2567 Crs
4008 2346 Crs
5400 3291 Crs
6792 3484 Crs
2727 4329 Crs
2.000 UP
1.000 UL
LT2
LTb
2232 4089 M
(Our RL) Rshow
LT2
2376 4089 M
702 0 V
1572 967 M
348 1172 V
696 717 V
1392 72 V
5400 4749 L
6792 3826 L
1572 967 Star
1920 2139 Star
2616 2856 Star
4008 2928 Star
5400 4749 Star
6792 3826 Star
2727 4089 Star
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 991 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/LPvalidation/UDP_noRTS/UDP_RATIO_ETX.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: UDP_RATIO_ETX.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Tue Jun  3 10:32:47 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (UDP_RATIO_ETX.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun  3 10:32:47 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1080 720 M
63 0 V
5649 0 R
-63 0 V
936 720 M
( 0) Rshow
1.000 UL
LTb
1080 1392 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 5) Rshow
1.000 UL
LTb
1080 2064 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 10) Rshow
1.000 UL
LTb
1080 2736 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 15) Rshow
1.000 UL
LTb
1080 3408 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 20) Rshow
1.000 UL
LTb
1080 4080 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 25) Rshow
1.000 UL
LTb
1080 4752 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 30) Rshow
1.000 UL
LTb
1080 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1794 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2508 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3222 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
3936 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4650 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5364 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6078 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1080 4752 N
0 -4032 V
5712 0 V
0 4032 V
-5712 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Throughput w RL/Throughput no RL) Cshow
grestore
LTb
LCb setrgbcolor
3936 120 M
(Num of Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
5658 1143 M
(CG RL) Rshow
LT0
5802 1143 M
702 0 V
1437 950 M
357 66 V
714 955 V
1428 859 V
5364 1303 L
1428 289 V
1437 950 Pls
1794 1016 Pls
2508 1971 Pls
3936 2830 Pls
5364 1303 Pls
6792 1592 Pls
6153 1143 Pls
2.000 UP
1.000 UL
LT1
LTb
5658 903 M
(Our RL) Rshow
LT1
5802 903 M
702 0 V
1437 1154 M
1794 948 L
714 1306 V
3936 4179 L
5364 1836 L
6792 1645 L
1437 1154 Crs
1794 948 Crs
2508 2254 Crs
3936 4179 Crs
5364 1836 Crs
6792 1645 Crs
6153 903 Crs
1.000 UL
LTb
1080 4752 N
0 -4032 V
5712 0 V
0 4032 V
-5712 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 2624 616 a FB(\(a\))25 b Fz(Satur)o(ated)20
b(UDP)e(demand)2046 1359 y
SDict begin H.S end
 2046 1359 a 2046 1359 a
SDict begin 10.5 H.A end
 2046
1359 a 2046 1359 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.16.2) cvn H.B /DEST
pdfmark end
 2046 1359 a 18 w @beginspecial 50
@llx 50 @lly 410 @urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/randomDemand/UDP_noRTS/UDP_ETX.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: UDP_ETX.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Tue Jun  3 15:17:35 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (UDP_ETX.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun  3 15:17:35 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.5) Rshow
1.000 UL
LTb
1224 1123 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 1526 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.5) Rshow
1.000 UL
LTb
1224 1930 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2) Rshow
1.000 UL
LTb
1224 2333 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2.5) Rshow
1.000 UL
LTb
1224 2736 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3) Rshow
1.000 UL
LTb
1224 3139 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3.5) Rshow
1.000 UL
LTb
1224 3542 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4) Rshow
1.000 UL
LTb
1224 3946 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4.5) Rshow
1.000 UL
LTb
1224 4349 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 5) Rshow
1.000 UL
LTb
1224 4752 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 5.5) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1920 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2616 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3312 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4704 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5400 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6096 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Throughput (Mbps)) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(Num of Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
2232 4569 M
(wo/ RL) Rshow
LT0
2376 4569 M
702 0 V
1572 1168 M
348 1268 V
696 -734 V
4008 948 L
1392 301 V
1392 324 V
1572 1168 Pls
1920 2436 Pls
2616 1702 Pls
4008 948 Pls
5400 1249 Pls
6792 1573 Pls
2727 4569 Pls
2.000 UP
1.000 UL
LT1
LTb
2232 4329 M
(CG RL) Rshow
LT1
2376 4329 M
702 0 V
1572 1154 M
348 1436 V
696 -320 V
4008 3415 L
1392 194 V
1392 837 V
1572 1154 Crs
1920 2590 Crs
2616 2270 Crs
4008 3415 Crs
5400 3609 Crs
6792 4446 Crs
2727 4329 Crs
2.000 UP
1.000 UL
LT2
LTb
2232 4089 M
(Our RL) Rshow
LT2
2376 4089 M
702 0 V
1572 1161 M
348 1261 V
696 64 V
4008 3674 L
1392 161 V
1392 654 V
1572 1161 Star
1920 2422 Star
2616 2486 Star
4008 3674 Star
5400 3835 Star
6792 4489 Star
2727 4089 Star
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 991 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/randomDemand/UDP_noRTS/UDP_RATIO_ETX.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: UDP_RATIO_ETX.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Tue Jun  3 15:17:35 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (UDP_RATIO_ETX.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun  3 15:17:35 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1080 720 M
63 0 V
5649 0 R
-63 0 V
936 720 M
( 0) Rshow
1.000 UL
LTb
1080 1392 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 2) Rshow
1.000 UL
LTb
1080 2064 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 4) Rshow
1.000 UL
LTb
1080 2736 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 6) Rshow
1.000 UL
LTb
1080 3408 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 8) Rshow
1.000 UL
LTb
1080 4080 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 10) Rshow
1.000 UL
LTb
1080 4752 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 12) Rshow
1.000 UL
LTb
1080 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1794 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2508 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3222 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
3936 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4650 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5364 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6078 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1080 4752 N
0 -4032 V
5712 0 V
0 4032 V
-5712 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Throughput w RL/Throughput no RL) Cshow
grestore
LTb
LCb setrgbcolor
3936 120 M
(Num of Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
5658 1143 M
(CG RL) Rshow
LT0
5802 1143 M
702 0 V
1437 1111 M
357 578 V
714 -388 V
3936 3362 L
1428 -91 V
1428 319 V
1437 1111 Pls
1794 1689 Pls
2508 1301 Pls
3936 3362 Pls
5364 3271 Pls
6792 3590 Pls
6153 1143 Pls
2.000 UP
1.000 UL
LT1
LTb
5658 903 M
(Our RL) Rshow
LT1
5802 903 M
702 0 V
1437 1161 M
357 435 V
714 -306 V
3936 3792 L
1428 726 V
6792 3427 L
1437 1161 Crs
1794 1596 Crs
2508 1290 Crs
3936 3792 Crs
5364 4518 Crs
6792 3427 Crs
6153 903 Crs
1.000 UL
LTb
1080 4752 N
0 -4032 V
5712 0 V
0 4032 V
-5712 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 2642 1447 a FB(\(b\))25 b Fz(Random)20 b(UDP)e(demand)3036
1510 y
SDict begin H.S end
 3036 1510 a 3036 1510 a
SDict begin 10.5 H.A end
 3036 1510 a 3036 1510
a
SDict begin [ /View [/XYZ H.V] /Dest (figure.16) cvn H.B /DEST pdfmark
end
 3036 1510 a 2040 1590 a FA(Figur)o(e)23 b(16:)2406
1590 y
SDict begin H.S end
 2406 1590 a 2406 1590 a
SDict begin H.R end
 2406 1590 a 2406 1590
a
SDict begin [ /View [/XYZ H.V] /Dest (figure.16) cvn H.B /DEST pdfmark
end
 2406 1590 a FA(UDP)g(thr)o(oughput)f(impr)o(o)o(v)o(ement)i(in)e(our)
i(testbed)e(with)2040 1677 y(rate)d(limiting)o(.)2040
1744 y
SDict begin H.S end
 2040 1744 a 2040 1744 a
SDict begin 10.5 H.A end
 2040 1744 a 2040 1744
a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.17.1) cvn H.B /DEST
pdfmark end
 2040 1744 a 2064 2425 a @beginspecial 50 @llx 50 @lly
410 @urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/LPvalidation/TCP_noRTS/TCP_ETX.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TCP_ETX.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Jun  4 02:48:07 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (TCP_ETX.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  4 02:48:07 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 1224 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.5) Rshow
1.000 UL
LTb
1224 1728 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2) Rshow
1.000 UL
LTb
1224 2232 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2.5) Rshow
1.000 UL
LTb
1224 2736 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3) Rshow
1.000 UL
LTb
1224 3240 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3.5) Rshow
1.000 UL
LTb
1224 3744 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4) Rshow
1.000 UL
LTb
1224 4248 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4.5) Rshow
1.000 UL
LTb
1224 4752 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 5) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1920 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2616 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3312 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4704 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5400 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6096 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Throughput (Mbps)) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(Num of Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
2232 4569 M
(wo/ RL) Rshow
LT0
2376 4569 M
702 0 V
1572 766 M
348 1250 V
696 -278 V
1392 574 V
1392 512 V
6792 4213 L
1572 766 Pls
1920 2016 Pls
2616 1738 Pls
4008 2312 Pls
5400 2824 Pls
6792 4213 Pls
2727 4569 Pls
2.000 UP
1.000 UL
LT1
LTb
2232 4329 M
(CG RL) Rshow
LT1
2376 4329 M
702 0 V
1572 740 M
348 1344 V
696 -502 V
1392 576 V
1392 994 V
6792 4431 L
1572 740 Crs
1920 2084 Crs
2616 1582 Crs
4008 2158 Crs
5400 3152 Crs
6792 4431 Crs
2727 4329 Crs
2.000 UP
1.000 UL
LT2
LTb
2232 4089 M
(Our RL) Rshow
LT2
2376 4089 M
702 0 V
1572 749 M
348 1302 V
696 -126 V
1392 633 V
5400 4221 L
1392 460 V
1572 749 Star
1920 2051 Star
2616 1925 Star
4008 2558 Star
5400 4221 Star
6792 4681 Star
2727 4089 Star
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 991 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/LPvalidation/TCP_noRTS/TCP_RATIO_ETX.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TCP_RATIO_ETX.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Jun  4 02:48:07 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (TCP_RATIO_ETX.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  4 02:48:07 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.9) Rshow
1.000 UL
LTb
1224 1296 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 1872 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.1) Rshow
1.000 UL
LTb
1224 2448 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.2) Rshow
1.000 UL
LTb
1224 3024 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.3) Rshow
1.000 UL
LTb
1224 3600 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.4) Rshow
1.000 UL
LTb
1224 4176 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.5) Rshow
1.000 UL
LTb
1224 4752 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.6) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1920 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2616 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3312 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4704 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5400 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6096 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Throughput w RL/Throughput no RL) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(Num of Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
5658 1143 M
(CG RL) Rshow
LT0
5802 1143 M
702 0 V
-4932 11 R
348 411 V
696 -84 V
1392 562 V
5400 1781 L
6792 1446 L
1572 1154 Pls
1920 1565 Pls
2616 1481 Pls
4008 2043 Pls
5400 1781 Pls
6792 1446 Pls
6153 1143 Pls
2.000 UP
1.000 UL
LT1
LTb
5658 903 M
(Our RL) Rshow
LT1
5802 903 M
702 0 V
1572 1250 M
348 259 V
696 422 V
1392 439 V
5400 4615 L
6792 1954 L
1572 1250 Crs
1920 1509 Crs
2616 1931 Crs
4008 2370 Crs
5400 4615 Crs
6792 1954 Crs
6153 903 Crs
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 2632 2512 a FB(\(a\))25 b Fz(Satur)o(ated)20
b(TCP)e(demand)2046 3255 y
SDict begin H.S end
 2046 3255 a 2046 3255 a
SDict begin 10.5 H.A end
 2046
3255 a 2046 3255 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.17.2) cvn H.B /DEST
pdfmark end
 2046 3255 a 18 w @beginspecial 50
@llx 50 @lly 410 @urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/randomDemand/TCP_noRTS/TCP_ETX.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TCP_ETX.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Tue Jun  3 17:56:07 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (TCP_ETX.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun  3 17:56:07 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 1296 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.5) Rshow
1.000 UL
LTb
1224 1872 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2) Rshow
1.000 UL
LTb
1224 2448 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2.5) Rshow
1.000 UL
LTb
1224 3024 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3) Rshow
1.000 UL
LTb
1224 3600 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3.5) Rshow
1.000 UL
LTb
1224 4176 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4) Rshow
1.000 UL
LTb
1224 4752 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4.5) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1920 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2616 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3312 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4704 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5400 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6096 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Throughput (Mbps)) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(Num of Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
2232 4569 M
(wo/ RL) Rshow
LT0
2376 4569 M
702 0 V
1572 1378 M
348 -82 V
696 458 V
4008 3018 L
1392 783 V
1392 357 V
1572 1378 Pls
1920 1296 Pls
2616 1754 Pls
4008 3018 Pls
5400 3801 Pls
6792 4158 Pls
2727 4569 Pls
2.000 UP
1.000 UL
LT1
LTb
2232 4329 M
(CG RL) Rshow
LT1
2376 4329 M
702 0 V
1572 1255 M
348 499 V
696 284 V
4008 3515 L
1392 621 V
1392 309 V
1572 1255 Crs
1920 1754 Crs
2616 2038 Crs
4008 3515 Crs
5400 4136 Crs
6792 4445 Crs
2727 4329 Crs
2.000 UP
1.000 UL
LT2
LTb
2232 4089 M
(Our RL) Rshow
LT2
2376 4089 M
702 0 V
1572 1246 M
348 513 V
696 684 V
4008 3947 L
1392 279 V
1392 238 V
1572 1246 Star
1920 1759 Star
2616 2443 Star
4008 3947 Star
5400 4226 Star
6792 4464 Star
2727 4089 Star
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 991 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/randomDemand/TCP_noRTS/TCP_RATIO_ETX.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TCP_RATIO_ETX.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Tue Jun  3 17:56:07 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (TCP_RATIO_ETX.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun  3 17:56:07 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1368 720 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 0.95) Rshow
1.000 UL
LTb
1368 1123 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 1) Rshow
1.000 UL
LTb
1368 1526 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 1.05) Rshow
1.000 UL
LTb
1368 1930 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 1.1) Rshow
1.000 UL
LTb
1368 2333 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 1.15) Rshow
1.000 UL
LTb
1368 2736 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 1.2) Rshow
1.000 UL
LTb
1368 3139 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 1.25) Rshow
1.000 UL
LTb
1368 3542 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 1.3) Rshow
1.000 UL
LTb
1368 3946 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 1.35) Rshow
1.000 UL
LTb
1368 4349 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 1.4) Rshow
1.000 UL
LTb
1368 4752 M
63 0 V
5361 0 R
-63 0 V
-5505 0 R
( 1.45) Rshow
1.000 UL
LTb
1368 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
2046 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2724 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3402 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4080 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4758 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5436 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6114 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1368 4752 N
0 -4032 V
5424 0 V
0 4032 V
-5424 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Throughput w RL/Throughput no RL) Cshow
grestore
LTb
LCb setrgbcolor
4080 120 M
(Num of Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
5658 1143 M
(CG RL) Rshow
LT0
5802 1143 M
702 0 V
1707 746 M
339 3588 V
2724 2377 L
1356 648 V
5436 1908 L
1356 -71 V
1707 746 Pls
2046 4334 Pls
2724 2377 Pls
4080 3025 Pls
5436 1908 Pls
6792 1837 Pls
6153 1143 Pls
2.000 UP
1.000 UL
LT1
LTb
5658 903 M
(Our RL) Rshow
LT1
5802 903 M
702 0 V
1707 739 M
339 3754 V
678 -63 V
1356 316 V
5436 2354 L
6792 1861 L
1707 739 Crs
2046 4493 Crs
2724 4430 Crs
4080 4746 Crs
5436 2354 Crs
6792 1861 Crs
6153 903 Crs
1.000 UL
LTb
1368 4752 N
0 -4032 V
5424 0 V
0 4032 V
-5424 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 2650 3343 a FB(\(b\))26 b Fz(Random)19 b(TCP)f(demand)3036
3406 y
SDict begin H.S end
 3036 3406 a 3036 3406 a
SDict begin 10.5 H.A end
 3036 3406 a 3036 3406
a
SDict begin [ /View [/XYZ H.V] /Dest (figure.17) cvn H.B /DEST pdfmark
end
 3036 3406 a 2040 3486 a FA(Figur)o(e)23 b(17:)2407
3486 y
SDict begin H.S end
 2407 3486 a 2407 3486 a
SDict begin H.R end
 2407 3486 a 2407 3486
a
SDict begin [ /View [/XYZ H.V] /Dest (figure.17) cvn H.B /DEST pdfmark
end
 2407 3486 a FA(TCP)h(thr)o(oughput)e(impr)o(o)o(v)o(ement)i(in)f(our)
h(testbed)f(with)2040 3573 y(rate)c(limiting)o(.)2040
3721 y FB(sho)n(w)25 b(the)f(results)g(using)h(rate)f(limiting)g(based)
h(on)g(our)g(model,)g(with)f(the)2040 3808 y(objecti)n(v)o(e)f(of)g
(maximizing)g(total)f(throughput.)35 b(W)-6 b(e)22 b(see)g(that)g(the)h
(routing)2040 3896 y(schemes)28 b(are)e(almost)h(indistinguishable.)47
b(Rate-limiting)26 b(does)h(matter)m(,)2040 3983 y(ho)n(we)n(v)o(er)l
(.)h(F)o(or)19 b(each)i(scheme,)f(rate-limiting)g(using)g(our)h(model)f
(pro)o(vides)2040 4070 y(50-400\045)h(gain)e(for)f(UDP)h(and)g
(10-45\045)h(for)f(TCP)-8 b(.)2115 4157 y(In)19 b(Figure)2411
4157 y
SDict begin H.S end
 2411 4157 a FB(21)2485 4107 y
SDict begin H.R end
 2485 4107 a 2485
4157 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.21) cvn H.B /ANN pdfmark end
 2485 4157 a FB(,)h(we)f(can)h(see)g(the)g(same)g(ef)n(fect)f(in)
h(other)g(simulated)g(con-)2040 4244 y(\002gurations.)j(Routing)18
b(does)g(not)f(seem)h(to)f(matter)g(whether)g(we)g(ha)o(v)o(e)h(TCP)
2040 4332 y(or)29 b(UDP)f(traf)n(\002c,)i(saturated)f(or)f(random)i
(demands,)i(big)d(or)g(small)f(pay-)2040 4419 y(loads.)54
b(T)-6 b(o)29 b(rule)g(out)h(dif)n(ferences)g(in)f(probe)h(pack)o(et)g
(size)f(and)h(payload)2040 4506 y(size,)20 b(which)g(may)h(cause)f(ETX)
f(to)h(select)g(the)g(wrong)h(path,)f(we)g(also)g(con-)2040
4593 y(sidered)j(probe-sized)i(payload)f(pack)o(ets.)36
b(As)22 b(Figure)3509 4593 y
SDict begin H.S end
 3509 4593 a FB(21)3583 4542
y
SDict begin H.R end
 3583 4542 a 3583 4593 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(figure.21) cvn H.B /ANN pdfmark end
 3583 4593 a FB(\(d\))h(sho)n(ws,)i(that)2040
4680 y(does)20 b(not)f(mak)o(e)h(a)f(signi\002cant)g(dif)n(ference)g
(either)l(.)2115 4767 y(These)k(routing)h(protocols)g(dif)n(fer)f(in)g
(ho)n(w)h(the)o(y)f(account)h(for)f(interfer)o(-)2040
4855 y(ence,)31 b(b)o(ut)d(the)o(y)h(all)e(ha)o(v)o(e)i(their)f
(shortcomings)i(on)e(that)g(front)h(\(see)f(our)2040
4942 y(pre)n(vious)19 b(w)o(ork)f([)2508 4943 y
SDict begin H.S end
 2508
4943 a -1 x FB(20)2582 4891 y
SDict begin H.R end
 2582 4891 a 2582 4942 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.hotnets07) cvn H.B /ANN pdfmark end

2582 4942 a FB(])g(for)g(more)g(details\).)k(F)o(or)17
b(e)o(xample,)h(the)g(ETX)f(metric)2040 5029 y(is)23
b(determined)h(by)f(pack)o(et)h(loss)f(rates)g(at)g(recei)n(v)o(ers,)h
(so)f(it)f(only)i(captures)2040 5116 y(recei)n(v)o(er)o(-side)h
(interference)g(b)o(ut)g(f)o(ails)g(to)f(capture)i(sender)o(-side)f
(interfer)o(-)2040 5203 y(ence)f(that)e(stops)h(nodes)h(from)f
(transmitting.)35 b(Moreo)o(v)o(er)m(,)25 b(the)d(character)o(-)2040
5290 y(istics)29 b(of)g(probing)i(traf)n(\002c)e(and)h(data)g(traf)n
(\002c)f(can)g(be)h(quite)g(dif)n(ferent)f(in)2040 5378
y(terms)18 b(of,)h(for)f(instance,)h(v)o(olume,)g(pack)o(et)g(sizes)g
(and)g(generation)g(pattern,)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152
-359 a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.12) cvn H.B /DEST pdfmark
end
 -152 -359
a -152 -152 a
SDict begin H.S end
 -152 -152 a -152 -152 a
SDict begin 10.5 H.A end
 -152 -152 a -152
-152 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.18.1) cvn H.B /DEST
pdfmark end
 -152 -152 a -131 512 a @beginspecial 50 @llx 50
@lly 410 @urx 302 @ury 1137 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts0/cmp-rate-m2-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/cmp-rate-m2-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/cmp-rate-m2-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 780 M
63 0 V
5681 0 R
-63 0 V
858 780 M
( 0) Rshow
1.000 UL
LTb
1014 1274 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 1) Rshow
1.000 UL
LTb
1014 1767 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 2) Rshow
1.000 UL
LTb
1014 2261 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 3) Rshow
1.000 UL
LTb
1014 2754 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 4) Rshow
1.000 UL
LTb
1014 3248 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 5) Rshow
1.000 UL
LTb
1014 3741 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 6) Rshow
1.000 UL
LTb
1014 4235 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 7) Rshow
1.000 UL
LTb
1014 4728 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 8) Rshow
1.000 UL
LTb
1014 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1536 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2058 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2581 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3103 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3625 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4147 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
4669 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5191 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
5714 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6236 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Total throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3886 130 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LTa
LTb
1170 4535 M
(w/o RL) Lshow
LTa
2730 4535 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1275 1217 M
0 142 V
-31 -142 R
62 0 V
-62 142 R
62 0 V
230 195 R
0 686 V
-31 -686 R
62 0 V
-62 686 R
62 0 V
491 -368 R
0 407 V
-31 -407 R
62 0 V
-62 407 R
62 0 V
3103 1524 M
0 742 V
-31 -742 R
62 0 V
-62 742 R
62 0 V
4147 1426 M
0 519 V
-31 -519 R
62 0 V
-62 519 R
62 0 V
5191 1759 M
0 560 V
-31 -560 R
62 0 V
-62 560 R
62 0 V
6236 1824 M
0 478 V
-31 -478 R
62 0 V
-62 478 R
62 0 V
1275 1288 Pls
1536 1897 Pls
2058 2075 Pls
3103 1895 Pls
4147 1685 Pls
5191 2039 Pls
6236 2063 Pls
3105 4535 Pls
1.000 UL
LTa
1275 1288 M
261 609 V
522 178 V
3103 1895 L
4147 1685 L
1044 354 V
1045 24 V
2.000 UP
stroke
LT1
LTb
1170 4275 M
(w/ CG RL) Lshow
LT1
2730 4275 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1353 1294 M
0 118 V
-31 -118 R
62 0 V
-62 118 R
62 0 V
231 476 R
0 663 V
-31 -663 R
62 0 V
-62 663 R
62 0 V
491 -401 R
0 497 V
-31 -497 R
62 0 V
-62 497 R
62 0 V
3181 2012 M
0 829 V
-31 -829 R
62 0 V
-62 829 R
62 0 V
4225 2329 M
0 684 V
-31 -684 R
62 0 V
-62 684 R
62 0 V
5270 2810 M
0 878 V
-31 -878 R
62 0 V
-62 878 R
62 0 V
6314 3197 M
0 617 V
-31 -617 R
62 0 V
-62 617 R
62 0 V
1353 1353 Crs
1615 2219 Crs
2137 2398 Crs
3181 2427 Crs
4225 2671 Crs
5270 3249 Crs
6314 3506 Crs
3105 4275 Crs
1.000 UL
LT1
1353 1353 M
262 866 V
522 179 V
1044 29 V
1044 244 V
1045 578 V
1044 257 V
2.000 UP
stroke
LT0
LTb
1170 4015 M
(w/ our RL) Lshow
LT0
2730 4015 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1432 1296 M
0 110 V
-31 -110 R
62 0 V
-62 110 R
62 0 V
230 547 R
0 638 V
-31 -638 R
62 0 V
-62 638 R
62 0 V
491 -126 R
0 391 V
-31 -391 R
62 0 V
-62 391 R
62 0 V
3259 2730 M
0 733 V
-31 -733 R
62 0 V
-62 733 R
62 0 V
4304 3178 M
0 387 V
-31 -387 R
62 0 V
-62 387 R
62 0 V
1013 286 R
0 407 V
-31 -407 R
62 0 V
-62 407 R
62 0 V
1013 -27 R
0 304 V
-31 -304 R
62 0 V
-62 304 R
62 0 V
1432 1351 Star
1693 2272 Star
2215 2660 Star
3259 3096 Star
4304 3372 Star
5348 4054 Star
6392 4383 Star
3105 4015 Star
1.000 UL
LT0
1432 1351 M
261 921 V
522 388 V
1044 436 V
1045 276 V
1044 682 V
1044 329 V
stroke
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial -150 599 a FB(\(a\))50 b Fz(Grid)71 b(topolo)o(gy)l(,)85
b(satur)o(ated)-150 674 y(UDP)18 b(demand,)i(RTS/CTS=OFF)854
512 y
SDict begin H.S end
 854 512 a 854 512 a
SDict begin 10.5 H.A end
 854 512 a 854 512 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.18.2) cvn H.B /DEST
pdfmark end
 854 512
a 19 w @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
1137 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/rand-sparse-inf-rts0/cmp-rate-m2-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-inf-rts0/cmp-rate-m2-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-inf-rts0/cmp-rate-m2-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 780 M
63 0 V
5681 0 R
-63 0 V
858 780 M
( 0) Rshow
1.000 UL
LTb
1014 1219 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 1) Rshow
1.000 UL
LTb
1014 1657 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 2) Rshow
1.000 UL
LTb
1014 2096 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 3) Rshow
1.000 UL
LTb
1014 2535 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 4) Rshow
1.000 UL
LTb
1014 2973 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 5) Rshow
1.000 UL
LTb
1014 3412 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 6) Rshow
1.000 UL
LTb
1014 3851 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 7) Rshow
1.000 UL
LTb
1014 4289 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 8) Rshow
1.000 UL
LTb
1014 4728 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 9) Rshow
1.000 UL
LTb
1014 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1536 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2058 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2581 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3103 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3625 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4147 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
4669 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5191 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
5714 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6236 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Total throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3886 130 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LTa
LTb
1170 4535 M
(w/o RL) Lshow
LTa
2730 4535 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1275 1555 M
0 327 V
-31 -327 R
62 0 V
-62 327 R
62 0 V
230 -398 R
0 424 V
-31 -424 R
62 0 V
-62 424 R
62 0 V
491 132 R
0 514 V
-31 -514 R
62 0 V
-62 514 R
62 0 V
3103 1917 M
0 476 V
-31 -476 R
62 0 V
-62 476 R
62 0 V
4147 2127 M
0 461 V
-31 -461 R
62 0 V
-62 461 R
62 0 V
5191 1902 M
0 869 V
-31 -869 R
62 0 V
-62 869 R
62 0 V
6236 1816 M
0 419 V
-31 -419 R
62 0 V
-62 419 R
62 0 V
1275 1718 Pls
1536 1696 Pls
2058 2297 Pls
3103 2155 Pls
4147 2358 Pls
5191 2336 Pls
6236 2026 Pls
3105 4535 Pls
1.000 UL
LTa
1275 1718 M
261 -22 V
522 601 V
3103 2155 L
1044 203 V
1044 -22 V
6236 2026 L
2.000 UP
stroke
LT1
LTb
1170 4275 M
(w/ CG RL) Lshow
LT1
2730 4275 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1353 1567 M
0 319 V
-31 -319 R
62 0 V
-62 319 R
62 0 V
231 -267 R
0 376 V
-31 -376 R
62 0 V
-62 376 R
62 0 V
491 293 R
0 489 V
-31 -489 R
62 0 V
-62 489 R
62 0 V
3181 2619 M
0 702 V
-31 -702 R
62 0 V
-62 702 R
62 0 V
4225 3184 M
0 582 V
-31 -582 R
62 0 V
-62 582 R
62 0 V
5270 3040 M
0 763 V
-31 -763 R
62 0 V
-62 763 R
62 0 V
6314 3243 M
0 819 V
-31 -819 R
62 0 V
-62 819 R
62 0 V
1353 1726 Crs
1615 1807 Crs
2137 2532 Crs
3181 2970 Crs
4225 3475 Crs
5270 3422 Crs
6314 3652 Crs
3105 4275 Crs
1.000 UL
LT1
1353 1726 M
262 81 V
522 725 V
1044 438 V
1044 505 V
1045 -53 V
1044 230 V
2.000 UP
stroke
LT0
LTb
1170 4015 M
(w/ our RL) Lshow
LT0
2730 4015 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1432 1574 M
0 311 V
-31 -311 R
62 0 V
-62 311 R
62 0 V
230 -217 R
0 313 V
-31 -313 R
62 0 V
-62 313 R
62 0 V
491 477 R
0 355 V
-31 -355 R
62 0 V
-62 355 R
62 0 V
1013 81 R
0 540 V
-31 -540 R
62 0 V
-62 540 R
62 0 V
1014 34 R
0 607 V
-31 -607 R
62 0 V
-62 607 R
62 0 V
5348 3447 M
0 645 V
-31 -645 R
62 0 V
-62 645 R
62 0 V
6392 3800 M
0 641 V
-31 -641 R
62 0 V
-62 641 R
62 0 V
1432 1730 Star
1693 1824 Star
2215 2636 Star
3259 3164 Star
4304 3772 Star
5348 3770 Star
6392 4121 Star
3105 4015 Star
1.000 UL
LT0
1432 1730 M
261 94 V
522 812 V
1044 528 V
1045 608 V
1044 -2 V
1044 351 V
stroke
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 854 599 a FB(\(b\))119 b FA(Random)213 b(topology)p
Fz(,)854 674 y(satur)o(ated)149 b(UDP)e(demand,)854 749
y(RTS/CTS=OFF)-150 1463 y
SDict begin H.S end
 -150 1463 a -150 1463 a
SDict begin 10.5 H.A end
 -150
1463 a -150 1463 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.18.3) cvn H.B /DEST
pdfmark end
 -150 1463 a 19 w @beginspecial 50
@llx 50 @lly 410 @urx 302 @ury 1137 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-rand-rts0/cmp-rate-m2-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-rand-rts0/cmp-rate-m2-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-rand-rts0/cmp-rate-m2-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 780 M
63 0 V
5681 0 R
-63 0 V
858 780 M
( 0) Rshow
1.000 UL
LTb
1014 1344 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 1) Rshow
1.000 UL
LTb
1014 1908 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 2) Rshow
1.000 UL
LTb
1014 2472 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 3) Rshow
1.000 UL
LTb
1014 3036 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 4) Rshow
1.000 UL
LTb
1014 3600 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 5) Rshow
1.000 UL
LTb
1014 4164 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 6) Rshow
1.000 UL
LTb
1014 4728 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 7) Rshow
1.000 UL
LTb
1014 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1536 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2058 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2581 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3103 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3625 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4147 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
4669 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5191 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
5714 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6236 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Total throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3886 130 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LTa
LTb
1170 4535 M
(w/o RL) Lshow
LTa
2730 4535 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1275 1222 M
0 175 V
-31 -175 R
62 0 V
-62 175 R
62 0 V
230 312 R
0 469 V
-31 -469 R
62 0 V
-62 469 R
62 0 V
491 -285 R
0 557 V
-31 -557 R
62 0 V
-62 557 R
62 0 V
3103 1466 M
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
1013 509 R
0 631 V
-31 -631 R
62 0 V
-62 631 R
62 0 V
5191 2019 M
0 330 V
-31 -330 R
62 0 V
-62 330 R
62 0 V
6236 1820 M
0 364 V
-31 -364 R
62 0 V
-62 364 R
62 0 V
1275 1309 Pls
1536 1943 Pls
2058 2172 Pls
3103 1555 Pls
4147 2469 Pls
5191 2184 Pls
6236 2002 Pls
3105 4535 Pls
1.000 UL
LTa
1275 1309 M
261 634 V
522 229 V
3103 1555 L
1044 914 V
5191 2184 L
6236 2002 L
2.000 UP
stroke
LT1
LTb
1170 4275 M
(w/ CG RL) Lshow
LT1
2730 4275 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1353 1255 M
0 181 V
-31 -181 R
62 0 V
-62 181 R
62 0 V
231 254 R
0 471 V
-31 -471 R
62 0 V
-62 471 R
62 0 V
491 -96 R
0 494 V
-31 -494 R
62 0 V
-62 494 R
62 0 V
3181 1953 M
0 106 V
-31 -106 R
62 0 V
-62 106 R
62 0 V
1013 459 R
0 603 V
-31 -603 R
62 0 V
-62 603 R
62 0 V
5270 2967 M
0 444 V
-31 -444 R
62 0 V
-62 444 R
62 0 V
6314 3301 M
0 590 V
-31 -590 R
62 0 V
-62 590 R
62 0 V
1353 1346 Crs
1615 1925 Crs
2137 2312 Crs
3181 2006 Crs
4225 2820 Crs
5270 3189 Crs
6314 3596 Crs
3105 4275 Crs
1.000 UL
LT1
1353 1346 M
262 579 V
522 387 V
3181 2006 L
1044 814 V
1045 369 V
1044 407 V
2.000 UP
stroke
LT0
LTb
1170 4015 M
(w/ our RL) Lshow
LT0
2730 4015 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1432 1265 M
0 179 V
-31 -179 R
62 0 V
-62 179 R
62 0 V
230 378 R
0 404 V
-31 -404 R
62 0 V
-62 404 R
62 0 V
491 151 R
0 523 V
-31 -523 R
62 0 V
-62 523 R
62 0 V
3259 2425 M
0 366 V
-31 -366 R
62 0 V
-62 366 R
62 0 V
1014 791 R
0 768 V
-31 -768 R
62 0 V
-62 768 R
62 0 V
5348 3821 M
0 531 V
-31 -531 R
62 0 V
-62 531 R
62 0 V
6392 4146 M
0 507 V
-31 -507 R
62 0 V
-62 507 R
62 0 V
1432 1354 Star
1693 2024 Star
2215 2638 Star
3259 2608 Star
4304 3966 Star
5348 4087 Star
6392 4400 Star
3105 4015 Star
1.000 UL
LT0
1432 1354 M
261 670 V
522 614 V
1044 -30 V
4304 3966 L
1044 121 V
1044 313 V
stroke
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial -150 1550 a FB(\(c\))25 b Fz(Grid)18 b(topolo)o(gy)l(,)h
FA(random)g(UDP)-150 1625 y(demand)p Fz(,)f(RTS/CTS=OFF)854
1463 y
SDict begin H.S end
 854 1463 a 854 1463 a
SDict begin 10.5 H.A end
 854 1463 a 854 1463 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.18.4) cvn H.B /DEST
pdfmark end
 854
1463 a 19 w @beginspecial 50 @llx 50 @lly 410 @urx 302
@ury 1137 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts1/cmp-rate-m2-t1-rts1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts1/cmp-rate-m2-t1-rts1.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts1/cmp-rate-m2-t1-rts1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 780 M
63 0 V
5681 0 R
-63 0 V
858 780 M
( 0) Rshow
1.000 UL
LTb
1014 1274 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 1) Rshow
1.000 UL
LTb
1014 1767 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 2) Rshow
1.000 UL
LTb
1014 2261 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 3) Rshow
1.000 UL
LTb
1014 2754 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 4) Rshow
1.000 UL
LTb
1014 3248 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 5) Rshow
1.000 UL
LTb
1014 3741 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 6) Rshow
1.000 UL
LTb
1014 4235 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 7) Rshow
1.000 UL
LTb
1014 4728 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 8) Rshow
1.000 UL
LTb
1014 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1536 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2058 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2581 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3103 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3625 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4147 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
4669 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5191 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
5714 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6236 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Total throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3886 130 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LTa
LTb
1170 4535 M
(w/o RL) Lshow
LTa
2730 4535 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1275 1125 M
0 122 V
-31 -122 R
62 0 V
-62 122 R
62 0 V
230 352 R
0 641 V
-31 -641 R
62 0 V
-62 641 R
62 0 V
491 -403 R
0 338 V
-31 -338 R
62 0 V
-62 338 R
62 0 V
3103 1475 M
0 649 V
-31 -649 R
62 0 V
-62 649 R
62 0 V
4147 1476 M
0 552 V
-31 -552 R
62 0 V
-62 552 R
62 0 V
5191 1886 M
0 646 V
-31 -646 R
62 0 V
-62 646 R
62 0 V
6236 1826 M
0 318 V
-31 -318 R
62 0 V
-62 318 R
62 0 V
1275 1186 Pls
1536 1920 Pls
2058 2006 Pls
3103 1799 Pls
4147 1752 Pls
5191 2209 Pls
6236 1985 Pls
3105 4535 Pls
1.000 UL
LTa
1275 1186 M
261 734 V
522 86 V
3103 1799 L
1044 -47 V
1044 457 V
6236 1985 L
2.000 UP
stroke
LT1
LTb
1170 4275 M
(w/ CG RL) Lshow
LT1
2730 4275 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1353 1196 M
0 105 V
-31 -105 R
62 0 V
-62 105 R
62 0 V
231 469 R
0 615 V
-31 -615 R
62 0 V
-62 615 R
62 0 V
491 -356 R
0 445 V
-31 -445 R
62 0 V
-62 445 R
62 0 V
3181 2041 M
0 710 V
-31 -710 R
62 0 V
-62 710 R
62 0 V
4225 2351 M
0 601 V
-31 -601 R
62 0 V
-62 601 R
62 0 V
5270 2742 M
0 733 V
-31 -733 R
62 0 V
-62 733 R
62 0 V
6314 3343 M
0 463 V
-31 -463 R
62 0 V
-62 463 R
62 0 V
1353 1248 Crs
1615 2078 Crs
2137 2251 Crs
3181 2396 Crs
4225 2651 Crs
5270 3108 Crs
6314 3575 Crs
3105 4275 Crs
1.000 UL
LT1
1353 1248 M
262 830 V
522 173 V
1044 145 V
1044 255 V
1045 457 V
1044 467 V
2.000 UP
stroke
LT0
LTb
1170 4015 M
(w/ our RL) Lshow
LT0
2730 4015 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1432 1244 M
0 101 V
-31 -101 R
62 0 V
-62 101 R
62 0 V
230 515 R
0 584 V
-31 -584 R
62 0 V
-62 584 R
62 0 V
491 -152 R
0 354 V
-31 -354 R
62 0 V
-62 354 R
62 0 V
3259 2540 M
0 662 V
-31 -662 R
62 0 V
-62 662 R
62 0 V
4304 2983 M
0 360 V
-31 -360 R
62 0 V
-62 360 R
62 0 V
1013 303 R
0 482 V
-31 -482 R
62 0 V
-62 482 R
62 0 V
6392 3946 M
0 301 V
-31 -301 R
62 0 V
-62 301 R
62 0 V
1432 1295 Star
1693 2152 Star
2215 2469 Star
3259 2871 Star
4304 3163 Star
5348 3887 Star
6392 4096 Star
3105 4015 Star
1.000 UL
LT0
1432 1295 M
261 857 V
522 317 V
1044 402 V
1045 292 V
1044 724 V
1044 209 V
stroke
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 854 1550 a FB(\(d\))50 b Fz(Grid)69 b(topolo)o(gy)l(,)83
b(satur)o(ated)854 1625 y(UDP)18 b(demand,)i FA(R)m(TS/CTS=ON)845
1684 y
SDict begin H.S end
 845 1684 a 845 1684 a
SDict begin 10.5 H.A end
 845 1684 a 845 1684 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.18) cvn H.B /DEST pdfmark
end
 845
1684 a -152 1824 a FA(Figur)o(e)27 b(18:)225 1824 y
SDict begin H.S end
 225
1824 a 225 1824 a
SDict begin H.R end
 225 1824 a 225 1824 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.18) cvn H.B /DEST pdfmark
end
 225 1824 a FA(Thr)o(oughput)d
(impr)o(o)o(v)o(ement)k(in)e(simulation)g(with)g(rate)-152
1912 y(limiting)20 b(f)n(or)h(UDP)f(traf\002c)h(f)n(or)g(v)o(arious)g
(con\002gurations.)29 b(The)20 b(aspect)-152 1999 y(that)f(differs)f
(fr)o(om)h(the)f(\002rst)g(con\002guration)h(is)f(in)g(bold.)-160
2740 y
SDict begin H.S end
 -160 2740 a -160 2740 a
SDict begin 10.5 H.A end
 -160 2740 a -160 2740
a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.19.1) cvn H.B /DEST
pdfmark end
 -160 2740 a 19 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1171 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts0/cmp-rate-m2-t0-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/cmp-rate-m2-t0-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts0/cmp-rate-m2-t0-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 780 M
63 0 V
5681 0 R
-63 0 V
858 780 M
( 0) Rshow
1.000 UL
LTb
1014 1344 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 1) Rshow
1.000 UL
LTb
1014 1908 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 2) Rshow
1.000 UL
LTb
1014 2472 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 3) Rshow
1.000 UL
LTb
1014 3036 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 4) Rshow
1.000 UL
LTb
1014 3600 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 5) Rshow
1.000 UL
LTb
1014 4164 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 6) Rshow
1.000 UL
LTb
1014 4728 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 7) Rshow
1.000 UL
LTb
1014 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1536 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2058 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2581 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3103 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3625 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4147 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
4669 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5191 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
5714 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6236 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Total throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3886 130 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LTa
LTb
1170 4535 M
(w/o RL) Lshow
LTa
2730 4535 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1275 1281 M
0 103 V
-31 -103 R
62 0 V
-62 103 R
62 0 V
230 470 R
0 697 V
-31 -697 R
62 0 V
-62 697 R
62 0 V
491 -428 R
0 472 V
-31 -472 R
62 0 V
-62 472 R
62 0 V
3103 2249 M
0 665 V
-31 -665 R
62 0 V
-62 665 R
62 0 V
4147 2636 M
0 443 V
-31 -443 R
62 0 V
-62 443 R
62 0 V
1013 246 R
0 734 V
-31 -734 R
62 0 V
-62 734 R
62 0 V
6236 3380 M
0 428 V
-31 -428 R
62 0 V
-62 428 R
62 0 V
1275 1332 Pls
1536 2203 Pls
2058 2359 Pls
3103 2582 Pls
4147 2858 Pls
5191 3692 Pls
6236 3594 Pls
3105 4535 Pls
1.000 UL
LTa
1275 1332 M
261 871 V
522 156 V
1045 223 V
1044 276 V
1044 834 V
1045 -98 V
2.000 UP
stroke
LT1
LTb
1170 4275 M
(w/ CG RL) Lshow
LT1
2730 4275 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1353 1283 M
0 102 V
-31 -102 R
62 0 V
-62 102 R
62 0 V
231 479 R
0 706 V
-31 -706 R
62 0 V
-62 706 R
62 0 V
491 -339 R
0 521 V
-31 -521 R
62 0 V
-62 521 R
62 0 V
3181 2193 M
0 776 V
-31 -776 R
62 0 V
-62 776 R
62 0 V
4225 2737 M
0 599 V
-31 -599 R
62 0 V
-62 599 R
62 0 V
1014 32 R
0 934 V
-31 -934 R
62 0 V
-62 934 R
62 0 V
6314 3324 M
0 707 V
-31 -707 R
62 0 V
-62 707 R
62 0 V
1353 1334 Crs
1615 2217 Crs
2137 2491 Crs
3181 2581 Crs
4225 3037 Crs
5270 3835 Crs
6314 3678 Crs
3105 4275 Crs
1.000 UL
LT1
1353 1334 M
262 883 V
522 274 V
1044 90 V
1044 456 V
1045 798 V
6314 3678 L
2.000 UP
stroke
LT0
LTb
1170 4015 M
(w/ our RL) Lshow
LT0
2730 4015 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1432 1269 M
0 101 V
-31 -101 R
62 0 V
-62 101 R
62 0 V
230 528 R
0 688 V
-31 -688 R
62 0 V
-62 688 R
62 0 V
491 -85 R
0 456 V
-31 -456 R
62 0 V
-62 456 R
62 0 V
3259 2665 M
0 778 V
-31 -778 R
62 0 V
-62 778 R
62 0 V
4304 3117 M
0 400 V
-31 -400 R
62 0 V
-62 400 R
62 0 V
1013 491 R
0 497 V
-31 -497 R
62 0 V
-62 497 R
62 0 V
6392 4220 M
0 276 V
-31 -276 R
62 0 V
-62 276 R
62 0 V
1432 1319 Star
1693 2242 Star
2215 2729 Star
3259 3054 Star
4304 3317 Star
5348 4256 Star
6392 4358 Star
3105 4015 Star
1.000 UL
LT0
1432 1319 M
261 923 V
522 487 V
1044 325 V
1045 263 V
1044 939 V
1044 102 V
stroke
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 49 2827 a FB(\(a\))25 b Fz(RTS/CTS=OFF)854
2740 y
SDict begin H.S end
 854 2740 a 854 2740 a
SDict begin 10.5 H.A end
 854 2740 a 854 2740 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.19.2) cvn H.B /DEST
pdfmark end
 854
2740 a 19 w @beginspecial 50 @llx 50 @lly 410 @urx 302
@ury 1171 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/grid-sparse-inf-rts1/cmp-rate-m2-t0-rts1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts1/cmp-rate-m2-t0-rts1.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/grid-sparse-inf-rts1/cmp-rate-m2-t0-rts1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 780 M
63 0 V
5681 0 R
-63 0 V
858 780 M
( 0) Rshow
1.000 UL
LTb
1014 1344 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 1) Rshow
1.000 UL
LTb
1014 1908 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 2) Rshow
1.000 UL
LTb
1014 2472 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 3) Rshow
1.000 UL
LTb
1014 3036 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 4) Rshow
1.000 UL
LTb
1014 3600 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 5) Rshow
1.000 UL
LTb
1014 4164 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 6) Rshow
1.000 UL
LTb
1014 4728 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 7) Rshow
1.000 UL
LTb
1014 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1536 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2058 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2581 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3103 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3625 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4147 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
4669 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5191 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
5714 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6236 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Total throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3886 130 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LTa
LTb
1170 4535 M
(w/o RL) Lshow
LTa
2730 4535 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1275 1266 M
0 105 V
-31 -105 R
62 0 V
-62 105 R
62 0 V
230 484 R
0 630 V
-31 -630 R
62 0 V
-62 630 R
62 0 V
491 -331 R
0 391 V
-31 -391 R
62 0 V
-62 391 R
62 0 V
3103 2217 M
0 588 V
-31 -588 R
62 0 V
-62 588 R
62 0 V
4147 2462 M
0 350 V
-31 -350 R
62 0 V
-62 350 R
62 0 V
1013 282 R
0 700 V
-31 -700 R
62 0 V
-62 700 R
62 0 V
6236 3071 M
0 402 V
-31 -402 R
62 0 V
-62 402 R
62 0 V
1275 1318 Pls
1536 2170 Pls
2058 2349 Pls
3103 2511 Pls
4147 2637 Pls
5191 3444 Pls
6236 3272 Pls
3105 4535 Pls
1.000 UL
LTa
1275 1318 M
261 852 V
522 179 V
1045 162 V
1044 126 V
1044 807 V
6236 3272 L
2.000 UP
stroke
LT1
LTb
1170 4275 M
(w/ CG RL) Lshow
LT1
2730 4275 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1353 1266 M
0 105 V
-31 -105 R
62 0 V
-62 105 R
62 0 V
231 504 R
0 647 V
-31 -647 R
62 0 V
-62 647 R
62 0 V
491 -341 R
0 469 V
-31 -469 R
62 0 V
-62 469 R
62 0 V
3181 2268 M
0 697 V
-31 -697 R
62 0 V
-62 697 R
62 0 V
4225 2754 M
0 567 V
-31 -567 R
62 0 V
-62 567 R
62 0 V
1014 -40 R
0 750 V
-31 -750 R
62 0 V
-62 750 R
62 0 V
6314 3645 M
0 444 V
-31 -444 R
62 0 V
-62 444 R
62 0 V
1353 1319 Crs
1615 2199 Crs
2137 2415 Crs
3181 2616 Crs
4225 3038 Crs
5270 3656 Crs
6314 3867 Crs
3105 4275 Crs
1.000 UL
LT1
1353 1319 M
262 880 V
522 216 V
1044 201 V
1044 422 V
1045 618 V
1044 211 V
2.000 UP
stroke
LT0
LTb
1170 4015 M
(w/ our RL) Lshow
LT0
2730 4015 M
750 0 V
-750 31 R
0 -62 V
750 62 R
0 -62 V
1432 1259 M
0 103 V
-31 -103 R
62 0 V
-62 103 R
62 0 V
230 523 R
0 629 V
-31 -629 R
62 0 V
-62 629 R
62 0 V
491 -138 R
0 384 V
-31 -384 R
62 0 V
-62 384 R
62 0 V
3259 2591 M
0 688 V
-31 -688 R
62 0 V
-62 688 R
62 0 V
4304 3048 M
0 339 V
-31 -339 R
62 0 V
-62 339 R
62 0 V
1013 346 R
0 504 V
-31 -504 R
62 0 V
-62 504 R
62 0 V
6392 4084 M
0 262 V
-31 -262 R
62 0 V
-62 262 R
62 0 V
1432 1311 Star
1693 2200 Star
2215 2568 Star
3259 2935 Star
4304 3218 Star
5348 3985 Star
6392 4215 Star
3105 4015 Star
1.000 UL
LT0
1432 1311 M
261 889 V
522 368 V
1044 367 V
1045 283 V
1044 767 V
1044 230 V
stroke
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 1081 2827 a FB(\(b\))h Fz(RTS/CTS=ON)-152
2852 y
SDict begin H.S end
 -152 2852 a -152 2852 a
SDict begin 10.5 H.A end
 -152 2852 a -152 2852
a
SDict begin [ /View [/XYZ H.V] /Dest (figure.19) cvn H.B /DEST pdfmark
end
 -152 2852 a 143 x FA(Figur)o(e)h(19:)225 2995 y
SDict begin H.S end
 225
2995 a 225 2995 a
SDict begin H.R end
 225 2995 a 225 2995 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.19) cvn H.B /DEST pdfmark
end
 225 2995 a FA(Thr)o(oughput)d
(impr)o(o)o(v)o(ement)k(in)e(simulation)g(with)g(rate)-152
3082 y(limiting)18 b(f)n(or)h(saturated)g(TCP)f(demand)g(and)g(grid)h
(topology)-5 b(.)-146 3820 y
SDict begin H.S end
 -146 3820 a -146 3820 a
SDict begin 10.5 H.A end

-146 3820 a -146 3820 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.20.1) cvn H.B /DEST
pdfmark end
 -146 3820 a 19 w @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/udpCmp/UDP_cmp_both.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: UDP_cmp_both.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Jun  4 02:52:35 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (UDP_cmp_both.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  4 02:52:35 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.5) Rshow
1.000 UL
LTb
1224 1123 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 1526 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.5) Rshow
1.000 UL
LTb
1224 1930 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2) Rshow
1.000 UL
LTb
1224 2333 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2.5) Rshow
1.000 UL
LTb
1224 2736 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3) Rshow
1.000 UL
LTb
1224 3139 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3.5) Rshow
1.000 UL
LTb
1224 3542 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4) Rshow
1.000 UL
LTb
1224 3946 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4.5) Rshow
1.000 UL
LTb
1224 4349 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 5) Rshow
1.000 UL
LTb
1224 4752 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 5.5) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1920 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2616 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3312 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4704 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5400 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6096 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
1368 4569 M
(wo/ RL) Lshow
LT0
2808 4569 M
702 0 V
1572 952 M
348 1417 V
696 -463 V
4008 1043 L
1392 511 V
1392 768 V
stroke
LT1
1572 1064 M
348 456 V
696 243 V
4008 1229 L
5400 1039 L
1392 222 V
stroke
LT2
1572 988 M
348 729 V
696 -5 V
4008 974 L
1392 492 V
1392 542 V
stroke
LT3
1572 1020 M
348 930 V
696 -179 V
4008 766 L
1392 425 V
1392 836 V
2.000 UP
stroke
LT4
LTb
1368 4329 M
(w/ our RL) Lshow
LT4
2808 4329 M
702 0 V
1572 986 M
348 1497 V
696 414 V
1392 48 V
5400 4526 L
6792 4114 L
1572 986 Pls
1920 2483 Pls
2616 2897 Pls
4008 2945 Pls
5400 4526 Pls
6792 4114 Pls
3159 4329 Pls
2.000 UP
1.000 UL
LT5
1572 967 M
348 1172 V
696 717 V
1392 72 V
5400 4749 L
6792 3826 L
1572 967 Crs
1920 2139 Crs
2616 2856 Crs
4008 2928 Crs
5400 4749 Crs
6792 3826 Crs
2.000 UP
1.000 UL
LT6
1572 963 M
348 1238 V
696 1007 V
4008 2890 L
5400 4507 L
6792 4111 L
1572 963 Star
1920 2201 Star
2616 3208 Star
4008 2890 Star
5400 4507 Star
6792 4111 Star
2.000 UP
1.000 UL
LT7
1572 947 M
348 1540 V
696 397 V
1392 63 V
5400 4443 L
6792 4095 L
1572 947 Box
1920 2487 Box
2616 2884 Box
4008 2947 Box
5400 4443 Box
6792 4095 Box
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial -63 3908 a FB(\(a\))25 b Fz(Satur)o(ated)20
b(UDP)e(demand)863 3820 y
SDict begin H.S end
 863 3820 a 863 3820 a
SDict begin 10.5 H.A end
 863 3820
a 863 3820 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.20.2) cvn H.B /DEST
pdfmark end
 863 3820 a @beginspecial 50 @llx 50 @lly
410 @urx 302 @ury 1166 @rwi @setspecial
%%BeginDocument: Figs/testbed/tcpCmp/TCP_cmp_both.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TCP_cmp_both.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Jun  4 02:49:35 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (TCP_cmp_both.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Yi Li,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  4 02:49:35 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 0.5) Rshow
1.000 UL
LTb
1224 1168 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1) Rshow
1.000 UL
LTb
1224 1616 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 1.5) Rshow
1.000 UL
LTb
1224 2064 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2) Rshow
1.000 UL
LTb
1224 2512 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 2.5) Rshow
1.000 UL
LTb
1224 2960 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3) Rshow
1.000 UL
LTb
1224 3408 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 3.5) Rshow
1.000 UL
LTb
1224 3856 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4) Rshow
1.000 UL
LTb
1224 4304 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 4.5) Rshow
1.000 UL
LTb
1224 4752 M
63 0 V
5505 0 R
-63 0 V
-5649 0 R
( 5) Rshow
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 0) Cshow
1.000 UL
LTb
1920 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 2) Cshow
1.000 UL
LTb
2616 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
3312 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 6) Cshow
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
4704 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 10) Cshow
1.000 UL
LTb
5400 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
6096 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 14) Cshow
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
LCb setrgbcolor
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
4008 120 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
4362 1143 M
(wo/ RL) Lshow
LT0
5802 1143 M
702 0 V
-4932 93 R
348 1159 V
696 -50 V
1392 129 V
1392 557 V
6792 4353 L
stroke
LT1
1572 1209 M
348 1111 V
696 -247 V
1392 511 V
1392 455 V
6792 4273 L
stroke
LT2
1572 1104 M
348 1320 V
696 -295 V
1392 374 V
1392 333 V
6792 4216 L
stroke
LT3
1572 1162 M
348 1406 V
696 -365 V
1392 464 V
1392 571 V
6792 4430 L
2.000 UP
stroke
LT4
LTb
4362 903 M
(w/ our RL) Lshow
LT4
5802 903 M
702 0 V
1572 1169 M
348 1197 V
696 38 V
1392 260 V
5400 4286 L
1392 417 V
1572 1169 Pls
1920 2366 Pls
2616 2404 Pls
4008 2664 Pls
5400 4286 Pls
6792 4703 Pls
6153 903 Pls
2.000 UP
1.000 UL
LT5
1572 1194 M
348 1157 V
696 -112 V
1392 563 V
5400 4280 L
1392 409 V
1572 1194 Crs
1920 2351 Crs
2616 2239 Crs
4008 2802 Crs
5400 4280 Crs
6792 4689 Crs
2.000 UP
1.000 UL
LT6
1572 1077 M
348 1338 V
696 8 V
1392 301 V
5400 4279 L
1392 445 V
1572 1077 Star
1920 2415 Star
2616 2423 Star
4008 2724 Star
5400 4279 Star
6792 4724 Star
2.000 UP
1.000 UL
LT7
1572 1116 M
348 1355 V
696 -101 V
1392 354 V
5400 4266 L
1392 433 V
1572 1116 Box
1920 2471 Box
2616 2370 Box
4008 2724 Box
5400 4266 Box
6792 4699 Box
1.000 UL
LTb
1224 4752 N
0 -4032 V
5568 0 V
0 4032 V
-5568 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 943 3908 a FB(\(b\))25 b Fz(Satur)o(ated)20
b(TCP)e(demand)-152 3932 y
SDict begin H.S end
 -152 3932 a -152 3932 a
SDict begin 10.5 H.A end
 -152
3932 a -152 3932 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.20) cvn H.B /DEST pdfmark
end
 -152 3932 a 143 x FA(Figur)o(e)e(20:)197
4075 y
SDict begin H.S end
 197 4075 a 197 4075 a
SDict begin H.R end
 197 4075 a 197 4075 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.20) cvn H.B /DEST pdfmark
end
 197
4075 a FA(Thr)o(oughput)f(in)h(our)g(testbed)g(of)h(the)f(f)n(our)h(r)o
(outing)f(meth-)-152 4162 y(ods)23 b(with)f(and)g(without)g
(rate-limiting)o(.)35 b(The)23 b(top)f(f)n(our)h(lines)f(in)h(each)-152
4250 y(graph)e(ar)o(e)f(f)n(or)h(the)f(case)h(of)f(rate-limiting)g(and)
g(the)g(bottom)g(f)n(our)g(ar)o(e)-152 4337 y(f)n(or)g
(non-rate-limiting)o(.)-152 4506 y FB(which)26 b(mak)o(es)h(the)f(tw)o
(o)g(observ)o(e)h(dif)n(ferent)f(loss)g(rates.)43 b(Therefore,)28
b(the)-152 4593 y(ETX)18 b(metric)h(does)g(not)h(accurately)f(predict)g
(the)g(actual)g(performance)i(e)o(x-)-152 4680 y(perienced)k(by)f(data)
g(traf)n(\002c.)36 b(The)23 b(MIC)h(metric)f(is)g(based)h(on)g(ETX,)f
(so)g(it)-152 4767 y(has)c(similar)e(issues.)23 b(The)18
b(CG-based)h(routing)g(assumes)f(perfect)h(schedul-)-152
4855 y(ing)26 b(and)g(tends)f(to)h(select)f(longer)h(detours,)h(which)e
(perform)h(well)f(under)-152 4942 y(perfect)19 b(scheduling)i(b)o(ut)e
(not)g(under)h(802.11.)-77 5029 y(What)30 b(we)g(sho)n(w)h(is)f(that)g
(once)i(we)e(ha)o(v)o(e)g(properly)i(managed)g(inter)o(-)-152
5116 y(ference)22 b(through)h(rate-limiting,)e(the)h(small)f(v)n
(ariations)h(in)f(routing)h(paths)-152 5203 y(produced)c(by)e(these)g
(protocols)g(ha)o(v)o(e)g(relati)n(v)o(ely)f(lo)n(w)h(impact)f(on)i
(total)e(net-)-152 5290 y(w)o(ork)k(throughput.)25 b(W)-6
b(e)17 b(also)i(repeat)f(that)g(our)h(methods)g(for)f(rate-limiting)
-152 5378 y(are)h(agnostic)h(to)g(the)f(choice)h(of)f(the)g(underlying)
i(routing)f(protocol.)k(The)o(y)2040 -152 y
SDict begin H.S end
 2040 -152
a 2040 -152 a
SDict begin 10.5 H.A end
 2040 -152 a 2040 -152 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.21.1) cvn H.B /DEST
pdfmark end
 2040 -152 a 2059
553 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
1137 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/rand-sparse-inf-rts0/cmp-routing-both-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-inf-rts0/cmp-routing-both-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-inf-rts0/cmp-routing-both-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 780 M
63 0 V
5681 0 R
-63 0 V
858 780 M
( 1) Rshow
1.000 UL
LTb
1014 1344 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 2) Rshow
1.000 UL
LTb
1014 1908 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 3) Rshow
1.000 UL
LTb
1014 2472 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 4) Rshow
1.000 UL
LTb
1014 3036 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 5) Rshow
1.000 UL
LTb
1014 3600 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 6) Rshow
1.000 UL
LTb
1014 4164 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 7) Rshow
1.000 UL
LTb
1014 4728 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 8) Rshow
1.000 UL
LTb
1014 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1536 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2058 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2581 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3103 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3625 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4147 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
4669 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5191 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
5714 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6236 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Total throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3886 130 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
1170 4535 M
(w/o RL) Lshow
LT0
2730 4535 M
750 0 V
1275 1413 M
261 -27 V
522 839 V
3103 2094 L
1044 134 V
1044 70 V
6236 1827 L
stroke
LT1
1275 1422 M
261 -28 V
522 773 V
3103 1984 L
1044 260 V
1044 -27 V
6236 1818 L
stroke
LT2
1275 1366 M
261 49 V
522 766 V
3103 1951 L
1044 198 V
1044 125 V
6236 1604 L
stroke
LT3
1275 1319 M
261 -4 V
522 565 V
1045 15 V
1044 -3 V
5191 1684 L
6236 1390 L
2.000 UP
stroke
LT4
LTb
1170 4275 M
(w/ our RL) Lshow
LT4
2730 4275 M
750 0 V
1432 1426 M
261 126 V
522 986 V
1044 760 V
1045 730 V
1044 27 V
1044 632 V
1432 1426 Pls
1693 1552 Pls
2215 2538 Pls
3259 3298 Pls
4304 4028 Pls
5348 4055 Pls
6392 4687 Pls
3105 4275 Pls
2.000 UP
1.000 UL
LT5
1432 1437 M
261 122 V
522 1043 V
1044 679 V
1045 782 V
1044 -3 V
1044 451 V
1432 1437 Crs
1693 1559 Crs
2215 2602 Crs
3259 3281 Crs
4304 4063 Crs
5348 4060 Crs
6392 4511 Crs
2.000 UP
1.000 UL
LT6
1432 1404 M
261 144 V
522 1073 V
1044 725 V
1045 761 V
1044 82 V
1044 304 V
1432 1404 Star
1693 1548 Star
2215 2621 Star
3259 3346 Star
4304 4107 Star
5348 4189 Star
6392 4493 Star
2.000 UP
1.000 UL
LT7
1432 1287 M
261 180 V
522 1027 V
1044 833 V
1045 733 V
1044 120 V
1044 464 V
1432 1287 Box
1693 1467 Box
2215 2494 Box
3259 3327 Box
4304 4060 Box
5348 4180 Box
6392 4644 Box
1.000 UL
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 2040 641 a FB(\(a\))31 b Fz(Random)i(topolo)o(gy)l(,)i
(satur)o(ated)2040 715 y(UDP)46 b(demand,)54 b(1024-byte)48
b(pay-)2040 790 y(load)3047 553 y
SDict begin H.S end
 3047 553 a 3047 553
a
SDict begin 10.5 H.A end
 3047 553 a 3047 553 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.21.2) cvn H.B /DEST
pdfmark end
 3047 553 a 19 w @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 1137 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/rand-sparse-inf-rts0/cmp-routing-both-t0-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-inf-rts0/cmp-routing-both-t0-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-inf-rts0/cmp-routing-both-t0-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 780 M
63 0 V
5681 0 R
-63 0 V
858 780 M
( 1) Rshow
1.000 UL
LTb
1014 1438 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 2) Rshow
1.000 UL
LTb
1014 2096 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 3) Rshow
1.000 UL
LTb
1014 2754 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 4) Rshow
1.000 UL
LTb
1014 3412 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 5) Rshow
1.000 UL
LTb
1014 4070 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 6) Rshow
1.000 UL
LTb
1014 4728 M
63 0 V
5681 0 R
-63 0 V
-5837 0 R
( 7) Rshow
1.000 UL
LTb
1014 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1536 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2058 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2581 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3103 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3625 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4147 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
4669 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5191 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
5714 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6236 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Total throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
3886 130 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
1170 4535 M
(w/o RL) Lshow
LT0
2730 4535 M
750 0 V
1275 1350 M
261 112 V
522 929 V
1045 576 V
1044 513 V
1044 -18 V
1045 164 V
stroke
LT1
1275 1363 M
261 127 V
522 953 V
1045 527 V
1044 390 V
1044 23 V
1045 198 V
stroke
LT2
1275 1333 M
261 140 V
522 1048 V
1045 452 V
1044 452 V
1044 -42 V
1045 90 V
stroke
LT3
1275 1289 M
261 238 V
522 863 V
1045 520 V
1044 319 V
1044 -81 V
1045 307 V
2.000 UP
stroke
LT4
LTb
1170 4275 M
(w/ our RL) Lshow
LT4
2730 4275 M
750 0 V
1432 1338 M
261 143 V
522 1018 V
1044 888 V
1045 665 V
1044 157 V
1044 294 V
1432 1338 Pls
1693 1481 Pls
2215 2499 Pls
3259 3387 Pls
4304 4052 Pls
5348 4209 Pls
6392 4503 Pls
3105 4275 Pls
2.000 UP
1.000 UL
LT5
1432 1349 M
261 132 V
522 1096 V
1044 846 V
1045 648 V
1044 -21 V
1044 514 V
1432 1349 Crs
1693 1481 Crs
2215 2577 Crs
3259 3423 Crs
4304 4071 Crs
5348 4050 Crs
6392 4564 Crs
2.000 UP
1.000 UL
LT6
1432 1319 M
261 196 V
522 1094 V
1044 812 V
1045 676 V
1044 -43 V
1044 506 V
1432 1319 Star
1693 1515 Star
2215 2609 Star
3259 3421 Star
4304 4097 Star
5348 4054 Star
6392 4560 Star
2.000 UP
1.000 UL
LT7
1432 1254 M
261 201 V
522 1007 V
1044 870 V
1045 722 V
1044 173 V
1044 350 V
1432 1254 Box
1693 1455 Box
2215 2462 Box
3259 3332 Box
4304 4054 Box
5348 4227 Box
6392 4577 Box
1.000 UL
LTb
1014 4728 N
0 -3948 V
5744 0 V
0 3948 V
-5744 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 3047 641 a FB(\(b\))27 b Fz(Random)c(topolo)o(gy)l(,)h
FA(saturated)3047 715 y(TCP)41 b(demand)p Fz(,)k(1024-byte)e(pay-)3047
790 y(load)2040 1546 y
SDict begin H.S end
 2040 1546 a 2040 1546 a
SDict begin 10.5 H.A end
 2040 1546
a 2040 1546 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.21.3) cvn H.B /DEST
pdfmark end
 2040 1546 a 19 w @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 1137 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL1024/rand-sparse-rand-rts0/cmp-routing-both-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-rand-rts0/cmp-routing-both-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:32:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL1024/rand-sparse-rand-rts0/cmp-routing-both-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:32:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1326 780 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 1) Rshow
1.000 UL
LTb
1326 1219 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 1.5) Rshow
1.000 UL
LTb
1326 1657 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 2) Rshow
1.000 UL
LTb
1326 2096 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 2.5) Rshow
1.000 UL
LTb
1326 2535 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 3) Rshow
1.000 UL
LTb
1326 2973 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 3.5) Rshow
1.000 UL
LTb
1326 3412 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 4) Rshow
1.000 UL
LTb
1326 3851 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 4.5) Rshow
1.000 UL
LTb
1326 4289 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 5) Rshow
1.000 UL
LTb
1326 4728 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 5.5) Rshow
1.000 UL
LTb
1326 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1820 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2314 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2807 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3301 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3795 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4289 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
4783 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5277 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
5770 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6264 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Total throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
4042 130 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
1482 4535 M
(w/o RL) Lshow
LT0
3042 4535 M
750 0 V
1573 1397 M
1820 961 L
494 1409 V
987 161 V
988 -453 V
988 93 V
987 -546 V
stroke
LT1
1573 1412 M
247 -311 V
494 1241 V
987 23 V
988 -153 V
988 -5 V
987 -671 V
stroke
LT2
1573 1324 M
1820 959 L
494 1392 V
987 77 V
988 -263 V
988 -188 V
987 -369 V
stroke
LT3
1573 1270 M
247 -240 V
494 1061 V
987 -316 V
988 -65 V
988 96 V
987 -628 V
2.000 UP
stroke
LT4
LTb
1482 4275 M
(w/ our RL) Lshow
LT4
3042 4275 M
750 0 V
1721 1425 M
247 -264 V
494 1678 V
987 1030 V
988 666 V
988 2 V
987 21 V
1721 1425 Pls
1968 1161 Pls
2462 2839 Pls
3449 3869 Pls
4437 4535 Pls
5425 4537 Pls
6412 4558 Pls
3417 4275 Pls
2.000 UP
1.000 UL
LT5
1721 1442 M
247 -185 V
494 1752 V
987 876 V
988 582 V
988 109 V
987 -30 V
1721 1442 Crs
1968 1257 Crs
2462 3009 Crs
3449 3885 Crs
4437 4467 Crs
5425 4576 Crs
6412 4546 Crs
2.000 UP
1.000 UL
LT6
1721 1390 M
247 -208 V
494 1789 V
987 897 V
988 655 V
988 44 V
987 -132 V
1721 1390 Star
1968 1182 Star
2462 2971 Star
3449 3868 Star
4437 4523 Star
5425 4567 Star
6412 4435 Star
2.000 UP
1.000 UL
LT7
1721 1229 M
247 -118 V
494 1922 V
987 725 V
988 771 V
988 -119 V
987 113 V
1721 1229 Box
1968 1111 Box
2462 3033 Box
3449 3758 Box
4437 4529 Box
5425 4410 Box
6412 4523 Box
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 2040 1633 a FB(\(c\))36 b Fz(Random)43 b(topolo)o(gy)l(,)
48 b FA(random)2040 1708 y(UDP)39 b(demand)p Fz(,)44
b(1024-byte)e(pay-)2040 1782 y(load)3047 1546 y
SDict begin H.S end
 3047
1546 a 3047 1546 a
SDict begin 10.5 H.A end
 3047 1546 a 3047 1546 a
SDict begin [ /View [/XYZ H.V] /Dest (subfigure.21.4) cvn H.B /DEST
pdfmark end
 3047 1546
a 19 w @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
1137 @rwi @setspecial
%%BeginDocument: Figs/sim/GPUT/PL106/rand-sparse-inf-rts0/cmp-routing-both-t1-rts0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../CAMERA-READY-RUNS/GPUT/results/PL106/rand-sparse-inf-rts0/cmp-routing-both-t1-rts0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri May 30 14:33:00 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../CAMERA-READY-RUNS/GPUT/results/PL106/rand-sparse-inf-rts0/cmp-routing-both-t1-rts0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Lili Qiu,ACES 6.242,512 232 7890,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 14:33:00 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1326 780 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 0.5) Rshow
1.000 UL
LTb
1326 1570 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 1) Rshow
1.000 UL
LTb
1326 2359 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 1.5) Rshow
1.000 UL
LTb
1326 3149 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 2) Rshow
1.000 UL
LTb
1326 3938 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 2.5) Rshow
1.000 UL
LTb
1326 4728 M
63 0 V
5369 0 R
-63 0 V
-5525 0 R
( 3) Rshow
1.000 UL
LTb
1326 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 0) Cshow
1.000 UL
LTb
1820 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 2) Cshow
1.000 UL
LTb
2314 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 4) Cshow
1.000 UL
LTb
2807 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 6) Cshow
1.000 UL
LTb
3301 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 8) Cshow
1.000 UL
LTb
3795 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 10) Cshow
1.000 UL
LTb
4289 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 12) Cshow
1.000 UL
LTb
4783 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 14) Cshow
1.000 UL
LTb
5277 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 16) Cshow
1.000 UL
LTb
5770 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 18) Cshow
1.000 UL
LTb
6264 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 20) Cshow
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
LCb setrgbcolor
260 2754 M
currentpoint gsave translate 90 rotate 0 0 M
(Total throughput \(Mbps\)) Cshow
grestore
LTb
LCb setrgbcolor
4042 130 M
(# Flows) Cshow
LTb
2.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
1482 4535 M
(w/o RL) Lshow
LT0
3042 4535 M
750 0 V
1573 1133 M
247 -99 V
494 960 V
987 -34 V
988 68 V
988 49 V
987 -370 V
stroke
LT1
1573 1177 M
247 -107 V
494 1009 V
987 -375 V
988 98 V
988 -106 V
987 -212 V
stroke
LT2
1573 1176 M
247 -22 V
494 845 V
987 -429 V
988 64 V
988 20 V
987 -177 V
stroke
LT3
1573 1032 M
247 6 V
494 825 V
987 40 V
988 -123 V
988 -122 V
987 -323 V
2.000 UP
stroke
LT4
LTb
1482 4275 M
(w/ our RL) Lshow
LT4
3042 4275 M
750 0 V
1721 1084 M
247 -71 V
494 1119 V
987 629 V
988 1174 V
988 -166 V
987 429 V
1721 1084 Pls
1968 1013 Pls
2462 2132 Pls
3449 2761 Pls
4437 3935 Pls
5425 3769 Pls
6412 4198 Pls
3417 4275 Pls
2.000 UP
1.000 UL
LT5
1721 1169 M
247 -12 V
494 1100 V
987 616 V
988 1068 V
988 -307 V
987 626 V
1721 1169 Crs
1968 1157 Crs
2462 2257 Crs
3449 2873 Crs
4437 3941 Crs
5425 3634 Crs
6412 4260 Crs
2.000 UP
1.000 UL
LT6
1721 1141 M
247 31 V
494 1042 V
987 687 V
988 1065 V
988 -148 V
987 385 V
1721 1141 Star
1968 1172 Star
2462 2214 Star
3449 2901 Star
4437 3966 Star
5425 3818 Star
6412 4203 Star
2.000 UP
1.000 UL
LT7
1721 961 M
247 18 V
494 1143 V
987 735 V
988 988 V
988 -82 V
987 499 V
1721 961 Box
1968 979 Box
2462 2122 Box
3449 2857 Box
4437 3845 Box
5425 3763 Box
6412 4262 Box
1.000 UL
LTb
1326 4728 N
0 -3948 V
5432 0 V
0 3948 V
-5432 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 3047 1633 a FB(\(d\))28 b Fz(Random)c(topolo)o(gy)l(,)h
(satur)o(ated)3047 1708 y(UDP)45 b(demand,)53 b FA(106-byte)47
b(pay-)3047 1782 y(load)4033 1546 y
SDict begin H.S end
 4033 1546 a 4033
1546 a
SDict begin 10.5 H.A end
 4033 1546 a 4033 1546 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.21) cvn H.B /DEST pdfmark
end
 4033 1546 a 2040 1938
a FA(Figur)o(e)15 b(21:)2387 1938 y
SDict begin H.S end
 2387 1938 a 2387
1938 a
SDict begin H.R end
 2387 1938 a 2387 1938 a
SDict begin [ /View [/XYZ H.V] /Dest (figure.21) cvn H.B /DEST pdfmark
end
 2387 1938 a FA(Thr)o(oughput)f(in)h
(simulations)g(of)h(the)f(f)n(our)h(r)o(outing)f(meth-)2040
2025 y(ods)36 b(\226)h(HOP)-7 b(,)36 b(ETX,)g(MIC,)f(and)h(CG)g(\226)h
(with)e(and)h(without)f(rate-)2040 2112 y(limiting)o(.)64
b(The)32 b(top)g(f)n(our)h(lines)e(in)h(each)h(graph)g(ar)o(e)g(f)n(or)
g(the)f(case)2040 2199 y(of)23 b(rate-limiting)g(and)f(the)g(bottom)i
(f)n(our)f(ar)o(e)g(f)n(or)g(non-rate-limiting)o(.)2040
2286 y(The)18 b(aspect)h(that)g(differs)f(fr)o(om)h(the)f(\002rst)g
(con\002guration)h(is)f(in)g(bold.)2040 2436 y FB(can)k(thus)g(w)o(ork)
g(with)f(whiche)n(v)o(er)i(routing)f(method)h(that)e(pro)o(vides)h
(better)2040 2523 y(performance)e(in)f(the)g(gi)n(v)o(en)h(setting.)
2040 2619 y
SDict begin H.S end
 2040 2619 a 2040 2619 a
SDict begin 10.5 H.A end
 2040 2619 a 2040
2619 a
SDict begin [ /View [/XYZ H.V] /Dest (section.10) cvn H.B /DEST pdfmark
end
 2040 2619 a 100 x FC(10.)99 b(RELA)-9 b(TED)26
b(W)o(ORK)2115 2827 y FB(Our)d(w)o(ork)h(b)o(uilds)f(on)g(a)g(lar)o(ge)
g(body)h(of)g(prior)f(w)o(ork)g(that)g(we)g(broadly)2040
2914 y(classify)28 b(into)h(three)f(cate)o(gories:)42
b(\(i\))28 b(interference)h(modeling;)k(\(ii\))28 b(rate)2040
3001 y(control)19 b(and)h(scheduling;)g(and)g(\(iii\))e(routing.)2040
3111 y FA(Interfer)o(ence)h(modeling)112 b FB(There)19
b(is)f(a)h(rich)g(body)h(of)f(w)o(ork)h(on)f(model-)2040
3198 y(ing)c(wireless)f(interference.)22 b(One)15 b(class)g(of)f(w)o
(orks)h(focuses)h(on)f(asymptotic)2040 3285 y(performance)24
b(bounds.)35 b(The)23 b(seminal)g(w)o(ork)g(by)g(Gupta)f(and)i(K)o
(umar)e(an-)2040 3373 y(alyzed)g(the)f(capacity)g(of)g(a)g(wireless)g
(netw)o(ork)g(under)h(certain)f(traf)n(\002c)f(pat-)2040
3460 y(terns)25 b(and)h(topologies)h([)2705 3461 y
SDict begin H.S end
 2705
3461 a -1 x FB(13)2779 3409 y
SDict begin H.R end
 2779 3409 a 2779 3460 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.GK00) cvn H.B /ANN pdfmark end

2779 3460 a FB(].)42 b(Other)26 b(researchers)g(ha)o(v)o(e)f(since)h(e)
o(xtended)2040 3547 y(this)21 b(w)o(ork)i(to)e(other)h(traf)n(\002c)f
(patterns)h([)3079 3549 y
SDict begin H.S end
 3079 3549 a -2 x FB(19)3153
3496 y
SDict begin H.R end
 3153 3496 a 3153 3547 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.morris-wireless-cap) cvn H.B /ANN pdfmark end
 3153 3547 a FB(],)g(mobility)g([)3519
3547 y
SDict begin H.S end
 3519 3547 a FB(12)3593 3496 y
SDict begin H.R end
 3593 3496 a 3593
3547 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.mobility-thruput) cvn H.B /ANN pdfmark end
 3593 3547 a FB(],)g(and)h(netw)o(ork)2040 3634
y(coding)e([)2288 3634 y
SDict begin H.S end
 2288 3634 a FB(11)2362 3583
y
SDict begin H.R end
 2362 3583 a 2362 3634 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.GV02) cvn H.B /ANN pdfmark end
 2362 3634 a FB(].)k(While)19
b(these)h(w)o(orks)g(lend)h(useful)f(insight)f(into)h(the)g(perfor)o(-)
2040 3721 y(mance)k(of)f(wireless)g(netw)o(orks)i(in)e(the)g(limit,)g
(their)g(models)h(are)f(abstract)2040 3808 y(by)17 b(necessity)f(and)h
(cannot)g(be)g(used)g(to)f(model)g(an)o(y)h(speci\002c)f(real)g(netw)o
(ork.)2115 3896 y(The)28 b(second)i(class)f(of)f(w)o(orks)h(studies)g
(wireless)f(performance)i(for)e(a)2040 3983 y(gi)n(v)o(en)18
b(netw)o(ork)f(topology)h(and)g(traf)n(\002c)e(demands)i(b)o(ut)f(does)
g(not)g(model)g(the)2040 4070 y(MA)m(C)22 b(and)h(instead)g(assumes)g
(that)g(pack)o(et)g(transmissions)g(can)g(be)f(\002nely)2040
4157 y(scheduled)c(across)f(links)g([)2745 4157 y
SDict begin H.S end
 2745
4157 a FB(14)2819 4107 y
SDict begin H.R end
 2819 4107 a 2819 4157 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.JPPQ03) cvn H.B /ANN pdfmark end
 2819
4157 a FB(].)22 b(As)16 b(we)h(sho)n(w)g(in)f(Section)3574
4158 y
SDict begin H.S end
 3574 4158 a -1 x FB(7)3611 4109 y
SDict begin H.R end
 3611 4109 a
3611 4157 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(section.7) cvn H.B /ANN pdfmark end
 3611 4157 a FB(,)h(these)g(models)2040 4244
y(signi\002cantly)i(o)o(v)o(er)o(-estimate)g(the)g(performance)h(of)f
(802.11)h(netw)o(orks.)2115 4332 y(The)g(third)h(class)f(of)h(w)o(orks)
g(model)g(the)f(performance)i(of)f(802.11)g(DCF)2040
4419 y(MA)m(C.)e(Most)g(models)h(in)f(this)g(class)g(tar)o(get)f
(scenarios)i(where)g(e)n(v)o(ery)f(node)2040 4506 y(is)e(within)h
(communication)h(range)g(of)e(the)h(others)g([)3395 4506
y
SDict begin H.S end
 3395 4506 a FB(1)3432 4455 y
SDict begin H.R end
 3432 4455 a 3432 4506
a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.bianchi) cvn H.B /ANN pdfmark end
 3432 4506 a FB(,)3469 4507 y
SDict begin H.S end
 3469 4507 a -1 x FB(18)3543
4455 y
SDict begin H.R end
 3543 4455 a 3543 4506 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.Kumar-single-cell) cvn H.B /ANN pdfmark end
 3543 4506 a FB(,)3580
4507 y
SDict begin H.S end
 3580 4507 a -1 x FB(8)3617 4455 y
SDict begin H.R end
 3617 4455 a
3617 4506 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lui-model) cvn H.B /ANN pdfmark end
 3617 4506 a FB(,)3653 4507 y
SDict begin H.S end
 3653 4507 a
-1 x FB(10)3727 4455 y
SDict begin H.R end
 3727 4455 a 3727 4506 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.knightly-model) cvn H.B /ANN pdfmark end
 3727 4506
a FB(])g(or)g(where)2040 4593 y(traf)n(\002c)29 b(demands)j(are)e
(restricted)g(\(e.g.,)i(a)d(single)i(\003o)n(w)e([)3611
4594 y
SDict begin H.S end
 3611 4594 a -1 x FB(10)3685 4542 y
SDict begin H.R end
 3685 4542 a
3685 4593 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.knightly-model) cvn H.B /ANN pdfmark end
 3685 4593 a FB(,)3737 4594 y
SDict begin H.S end
 3737 4594 a
-1 x FB(8)3774 4542 y
SDict begin H.R end
 3774 4542 a 3774 4593 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lui-model) cvn H.B /ANN pdfmark end
 3774 4593
a FB(])h(or)g(tw)o(o)2040 4680 y(\003o)n(ws)25 b([)2250
4681 y
SDict begin H.S end
 2250 4681 a -1 x FB(30)2324 4630 y
SDict begin H.R end
 2324 4630 a
2324 4680 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.sigcomm06-Reis) cvn H.B /ANN pdfmark end
 2324 4680 a FB(])g(or)f(to)h(a)g(single)g(neighbor)h([)3119
4682 y
SDict begin H.S end
 3119 4682 a -2 x FB(9)3156 4630 y
SDict begin H.R end
 3156 4630 a
3156 4680 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.Garetto06:Infocom) cvn H.B /ANN pdfmark end
 3156 4680 a FB(]\).)40 b(In)25 b(addition,)h(all)f(the)f
(abo)o(v)o(e)2040 4767 y(models,)32 b(e)o(xcept)e([)2554
4768 y
SDict begin H.S end
 2554 4768 a -1 x FB(30)2628 4717 y
SDict begin H.R end
 2628 4717 a
2628 4767 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.sigcomm06-Reis) cvn H.B /ANN pdfmark end
 2628 4767 a FB(],)i(assume)d(binary)h(interference.)54
b([)3626 4768 y
SDict begin H.S end
 3626 4768 a -1 x FB(31)3700 4717 y
SDict begin H.R end
 3700
4717 a 3700 4767 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.salonidis-model) cvn H.B /ANN pdfmark end
 3700 4767 a FB(])30 b(is)f(one)g(of)2040
4855 y(the)c(fe)n(w)g(that)f(supports)i(non-binary)g(interference.)41
b(But)25 b(it)f(requires)h(de-)2040 4942 y(tailed)17
b(measurement)h(of)g(the)f(current)g(netw)o(ork)h(condition,)h(such)f
(as)f(chan-)2040 5029 y(nel)h(b)o(usy)f(probability)h(and)g(pack)o(et)h
(loss)e(rates)g(\(including)i(collision)e(rate\).)2040
5116 y(So)d(it)g(has)h(limited)f(prediction)i(po)n(wer)f(\226)g(it)f
(can)h(only)g(estimate)f(the)h(ef)n(fect)f(of)2040 5203
y(introducing)23 b(one)g(ne)n(w)f(\003o)n(w)g(to)g(the)g(netw)o(ork.)33
b(T)-6 b(w)o(o)22 b(recent)g(models)g([)3939 5204 y
SDict begin H.S end
 3939
5204 a -1 x FB(27)4013 5153 y
SDict begin H.R end
 4013 5153 a 4013 5203 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.lili-mobicom07) cvn H.B /ANN pdfmark end

4013 5203 a FB(,)2040 5291 y
SDict begin H.S end
 2040 5291 a -1 x FB(16)2114
5240 y
SDict begin H.R end
 2114 5240 a 2114 5290 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.stony-brook-model) cvn H.B /ANN pdfmark end
 2114 5290 a FB(])k(are)g(more)g(general)
h(b)o(ut)f(e)n(v)o(en)g(the)o(y)h(tar)o(get)e(only)h(one-hop)i(demands)
2040 5378 y(and)20 b(are)f(also)g(too)g(e)o(xpensi)n(v)o(e)h(to)f(be)g
(used)h(for)f(optimization.)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -152 -359 a
SDict begin H.S end
 -152
-359 a -152 -359 a
SDict begin H.R end
 -152 -359 a -152 -359 a
SDict begin [ /View [/XYZ H.V] /Dest (page.13) cvn H.B /DEST pdfmark
end
 -152 -359
a -77 -69 a FB(In)18 b(contrast,)g(we)g(tackle)g(the)g(most)g(general)g
(case)h(of)f(multi-hop)g(topolo-)-152 19 y(gies)29 b(and)g(end-to-end)i
(\003o)n(ws,)f(b)o(ut)f(e)n(v)o(en)g(so)g(our)g(model)g(is)f
(lightweight)-152 106 y(enough)21 b(to)e(be)g(directly)g(used)h(for)e
(optimization.)-152 218 y FA(Rate)e(contr)o(ol)e(and)h(scheduling)88
b FB(The)15 b(importance)h(of)f(rate)g(control)h(and)-152
306 y(scheduling)i(has)f(been)h(well)e(recognized.)24
b(Some)16 b(e)o(xisting)h(w)o(orks)g([)1637 307 y
SDict begin H.S end
 1637
307 a -1 x FB(33)1711 255 y
SDict begin H.R end
 1711 255 a 1711 306 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.back-pressure) cvn H.B /ANN pdfmark end
 1711
306 a FB(,)1747 306 y
SDict begin H.S end
 1747 306 a FB(21)1821 255 y
SDict begin H.R end
 1821
255 a 1821 306 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.joint-rate-control) cvn H.B /ANN pdfmark end
 1821 306 a FB(,)-152 394 y
SDict begin H.S end
 -152 394
a -1 x FB(5)-115 342 y
SDict begin H.R end
 -115 342 a -115 393 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.fair-resource-alloc) cvn H.B /ANN pdfmark end
 -115 393
a FB(])23 b(propose)i(joint)e(optimization)g(of)g(rate)g(control)h(and)
f(scheduling.)37 b(Dif-)-152 480 y(ferent)22 b(from)f(these)g(w)o
(orks,)i(our)e(approach)i(w)o(orks)f(with)f(e)o(xisting)g(802.11)-152
567 y(MA)m(C)28 b(scheduling.)52 b(IFRC)27 b(enables)h(f)o(air)g(rate)g
(control)g(for)g(sensor)h(net-)-152 654 y(w)o(orks)15
b(in)g(which)g(all)e(nodes)j(send)f(traf)n(\002c)f(to)n(w)o(ards)h(one)
g(or)g(more)f(sinks)h([)1740 656 y
SDict begin H.S end
 1740 656 a -2 x FB(29)1814
604 y
SDict begin H.R end
 1814 604 a 1814 654 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.rangwala06) cvn H.B /ANN pdfmark end
 1814 654 a FB(].)-152 741
y(It)25 b(is)g(speci\002c)h(to)f(the)h(tree)f(topologies)i(and)f
(sensor)g(netw)o(ork)h(w)o(orkload.)-152 829 y(Our)e(prior)f(w)o(ork)h
(sho)n(ws)g(preliminary)f(e)n(vidence)i(on)f(the)f(importance)i(of)-152
916 y(rate)j(limiting)f(and)i(the)f(possibility)g(of)g(using)g
(con\003ict)g(graphs)h(for)f(that)-152 1003 y(purpose)24
b([)132 1004 y
SDict begin H.S end
 132 1004 a -1 x FB(20)206 952 y
SDict begin H.R end
 206 952
a 206 1003 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.hotnets07) cvn H.B /ANN pdfmark end
 206 1003 a FB(].)32 b(In)22 b(this)g(paper)m(,)h(we)f(de)n
(v)o(elop)i(a)e(more)g(accurate)h(model)f(so)-152 1090
y(that)d(we)g(can)g(perform)h(predictable)f(performance)i
(optimization.)-152 1203 y FA(Routing)118 b FB(Most)20
b(routing)h(protocols)g(for)e(wireless)h(netw)o(orks)h(follo)n(w)f(a)
-152 1290 y(least-cost-path)j(model)f(b)o(ut)g(dif)n(fer)f(in)h(the)g
(methods)h(for)f(estimating)g(link)-152 1377 y(cost.)34
b(Some)22 b(use)h(hop)g(count)g([)682 1378 y
SDict begin H.S end
 682 1378
a -1 x FB(26)756 1326 y
SDict begin H.R end
 756 1326 a 756 1377 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.AODV) cvn H.B /ANN pdfmark end
 756 1377
a FB(,)799 1378 y
SDict begin H.S end
 799 1378 a -1 x FB(15)873 1326 y
SDict begin H.R end
 873
1326 a 873 1377 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.DSR) cvn H.B /ANN pdfmark end
 873 1377 a FB(],)g(some)g(use)g(e)o(xpected)g(number)
h(of)-152 1464 y(transmissions)i(\(ETX\))e([)525 1465
y
SDict begin H.S end
 525 1465 a -1 x FB(3)562 1414 y
SDict begin H.R end
 562 1414 a 562 1464
a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.ETX) cvn H.B /ANN pdfmark end
 562 1464 a FB(],)j(while)e(others)h(use)f(ETX)g(scaled)g(by)h(f)o
(actors)-152 1551 y(such)c(as)g(modulation)g(or)g(the)f(number)i(of)e
(neighbors)i([)1321 1551 y
SDict begin H.S end
 1321 1551 a FB(4)1358 1501
y
SDict begin H.R end
 1358 1501 a 1358 1551 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.WCETT) cvn H.B /ANN pdfmark end
 1358 1551 a FB(,)1398 1552
y
SDict begin H.S end
 1398 1552 a -1 x FB(35)1472 1501 y
SDict begin H.R end
 1472 1501 a 1472
1551 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.mic) cvn H.B /ANN pdfmark end
 1472 1551 a FB(,)1514 1552 y
SDict begin H.S end
 1514 1552 a -1 x
FB(32)1588 1501 y
SDict begin H.R end
 1588 1501 a 1588 1551 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 1] /Subtype /Link /Dest
(cite.iaware) cvn H.B /ANN pdfmark end
 1588 1551 a
FB(].)30 b(These)-152 1639 y(sequence)17 b(of)e(metrics)g(are)g(moti)n
(v)n(ated)h(by)g(impro)o(ving)g(the)f(performance)i(of)-152
1726 y(routing.)36 b(W)-6 b(e)23 b(sho)n(w)-5 b(,)24
b(ho)n(we)n(v)o(er)m(,)h(that)e(rate-limiting)f(\003o)n(ws)h(is)g(k)o
(e)o(y)h(to)f(pre-)-152 1813 y(dictable)k(and)g(high)g(performance)h
(\226)e(se)n(v)o(ere)h(performance)h(de)o(gradation)-152
1900 y(can)g(occur)g(in)f(its)g(absence)h(\226)g(and)g(the)f(dif)n
(ferences)h(in)f(routing)h(metrics)-152 1987 y(appear)20
b(to)f(matter)g(less.)-152 2089 y
SDict begin H.S end
 -152 2089 a -152 2089
a
SDict begin 10.5 H.A end
 -152 2089 a -152 2089 a
SDict begin [ /View [/XYZ H.V] /Dest (section.11) cvn H.B /DEST pdfmark
end
 -152 2089 a 100 x FC(11.)99
b(CONCLUSION)-77 2297 y FB(Our)14 b(w)o(ork)h(demonstrates)h(the)e
(feasibility)g(of)h(predictable)g(performance)-152 2384
y(optimization)25 b(for)f(wireless)f(netw)o(orks,)j(thus)e(making)h
(the)f(task)g(of)g(man-)-152 2471 y(aging)32 b(and)f(optimizing)g(them)
g(as)f(predictable)i(as)e(that)h(for)f(wired)h(net-)-152
2558 y(w)o(orks.)41 b(The)24 b(foundation)j(of)d(our)h(approach)h(is)e
(a)h(ne)n(w)g(model)g(that)f(cap-)-152 2646 y(tures)j(interference,)i
(traf)n(\002c,)e(and)g(MA)m(C-induced)h(dependencies)h(in)e(the)-152
2733 y(netw)o(ork)22 b(using)f(only)g(a)g(small)f(set)g(of)h
(constraints.)28 b(Our)21 b(model)g(is)f(realis-)-152
2820 y(tic)e(enough)i(to)f(handle)g(real-w)o(orld)g(comple)o(xities)g
(such)g(as)g(hidden)g(termi-)-152 2907 y(nals,)f(non-uniform)h
(demands,)g(and)f(non-binary)h(interference,)f(and)h(yet)e(it)-152
2994 y(is)i(lightweight)g(enough)i(to)d(dri)n(v)o(e)i(netw)o(ork)f
(optimization.)-77 3081 y(Ev)n(aluations)h(of)f(our)h(methodology)h
(using)f(a)f(testbed)g(and)h(simulations)-152 3169 y(sho)n(wed)28
b(that)f(it)f(is)h(v)o(ery)g(ef)n(fecti)n(v)o(e.)47 b(Across)27
b(a)g(range)h(of)f(topology)h(and)-152 3256 y(traf)n(\002c)k
(con\002gurations,)k(it)c(w)o(as)g(able)g(to)g(accurately)h
(approximate)h(the)-152 3343 y(throughput)22 b(that)d(the)h(netw)o(ork)
g(yielded.)26 b(It)19 b(rarely)g(under)o(-predicted,)i(and)-152
3430 y(for)c(80\045)g(of)f(the)g(cases,)h(it)f(estimated)g(within)g
(20\045)h(of)g(the)f(actual)h(through-)-152 3517 y(put.)45
b(When)27 b(maximizing)g(f)o(airness)f(using)h(our)g(methods,)h(we)e
(achie)n(v)o(ed)-152 3604 y(close)18 b(to)f(perfect)g(f)o(airness)h
(amongst)g(\003o)n(ws)f(for)g(both)g(UDP)g(and)g(TCP)f(traf-)-152
3692 y(\002c.)27 b(When)20 b(maximizing)h(throughput,)h(we)e(found)h
(that)f(our)h(methods)g(can)-152 3779 y(impro)o(v)o(e)27
b(netw)o(ork)g(throughput)g(by)f(100-200\045)i(for)e(UDP-based)g(traf)n
(\002c)-152 3866 y(and)20 b(10-50\045)g(for)f(TCP-based)g(traf)n
(\002c.)-77 3953 y(In)g(the)h(future,)f(we)g(plan)h(to)f(address)h(se)n
(v)o(eral)f(practical)h(issues)f(in)g(order)-152 4040
y(to)24 b(apply)h(the)f(approach)i(to)d(operational)i(wireless)f(netw)o
(orks.)39 b(First,)24 b(we)-152 4128 y(plan)19 b(to)e(de)n(v)o(elop)i
(no)o(v)o(el)g(measurement)g(techniques)g(to)e(passi)n(v)o(ely)i(and)g
(ac-)-152 4215 y(curately)d(estimate)g(interference)g(and)g(seed)g(our)
g(model.)23 b(Second,)17 b(we)e(plan)-152 4302 y(to)h(e)n(v)n(aluate)h
(our)g(approach)h(under)f(realistic)e(traf)n(\002c)h(demands)h(that)f
(change)-152 4389 y(with)21 b(time.)28 b(Third,)20 b(we)h(plan)g(to)g
(impro)o(v)o(e)g(the)g(ef)n(\002cienc)o(y)g(of)f(disseminat-)-152
4476 y(ing)j(the)g(inputs)g(to)g(our)g(algorithms)g(by)h(adapting)g
(the)e(update)i(frequenc)o(y)-152 4563 y(based)c(on)g(the)f(rate)f(of)h
(change)h(and)g(applying)g(delta)f(encoding.)-152 4736
y FA(Ackno)o(wledgments)52 b FB(This)18 b(w)o(ork)g(is)f(supported)j
(in)d(part)h(by)g(NSF)f(Grants)-152 4823 y(CNS-0546755,)j(CNS-0434515,)
g(CNS-0546720,)h(and)e(CNS-0627020.)-152 4919 y
SDict begin H.S end
 -152
4919 a -152 4919 a
SDict begin 8 H.A end
 -152 4919 a -152 4919 a
SDict begin [ /View [/XYZ H.V] /Dest (section.12) cvn H.B /DEST pdfmark
end
 -152 4919
a 106 x FC(12.)99 b(REFERENCES)-152 5029 y
SDict begin H.S end
 -152 5029
a -152 5029 a
SDict begin 8 H.A end
 -152 5029 a -152 5029 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.bianchi) cvn H.B /DEST pdfmark
end
 -152 5029 a -123
5095 a FE([1])38 b(G.)15 b(Bianchi.)e(Performance)j(analysis)e(of)h
(the)f(IEEE)f(802.11)i(distrib)o(uted)g(corrdination)-18
5162 y(function.)g(In)g FH(IEEE)f(J)o(ournal)f(on)i(Selected)f(Ar)n
(eas)f(in)i(Communications)p FE(,)f(Mar)m(.)g(2000.)-152
5178 y
SDict begin H.S end
 -152 5178 a -152 5178 a
SDict begin 8 H.A end
 -152 5178 a -152 5178
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.click) cvn H.B /DEST pdfmark
end
 -152 5178 a -123 5236 a FE([2])38 b(Click.)14 b
(http://pdos.csail.mit.edu/click/.)-152 5257 y
SDict begin H.S end
 -152 5257
a -152 5257 a
SDict begin 8 H.A end
 -152 5257 a -152 5257 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.ETX) cvn H.B /DEST pdfmark
end
 -152 5257 a -123
5311 a FE([3])38 b(D.)15 b(D.)f(Couto,)g(D.)g(Aguayo,)g(J.)f(Bick)o
(et,)i(and)f(R.)g(Morris.)g(A)h(high-throughput)h(path)-18
5378 y(metric)g(for)f(multi-hop)h(wireless)e(routing.)h(In)f
FH(Pr)m(oc.)g(of)h(A)n(CM)f(MOBICOM)p FE(,)g(Sept.)h(2003.)2040
-152 y
SDict begin H.S end
 2040 -152 a 2040 -152 a
SDict begin 8 H.A end
 2040 -152 a 2040 -152
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.WCETT) cvn H.B /DEST pdfmark
end
 2040 -152 a 2069 -69 a FE([4])38 b(R.)14 b(Dra)o(v)o(es,)g(J.)f(P)o
(adhye,)h(and)h(B.)f(Zill.)g(Routing)g(in)h(multi-radio,)h(multi-hop)g
(wireless)2174 -2 y(mesh)e(netw)o(orks.)h(In)g FH(Pr)m(oc.)e(of)i(A)n
(CM)g(MOBICOM)p FE(,)f(Sept.)g(-)h(Oct.)f(2004.)2040
19 y
SDict begin H.S end
 2040 19 a 2040 19 a
SDict begin 8 H.A end
 2040 19 a 2040 19 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.fair-resource-alloc) cvn
H.B /DEST pdfmark end
 2040 19
a 2069 72 a FE([5])38 b(A.)14 b(Eryilmaz)h(and)f(R.)g(Srikant.)h(F)o
(air)g(resource)g(allocation)f(in)h(wireless)f(netw)o(orks)h(using)2174
139 y(queue-length)g(based)f(scheduling)g(and)h(congestion)f(control.)h
(In)g FH(Pr)m(oc.)e(of)i(IEEE)2174 205 y(INFOCOM)p FE(,)f(Mar)m(.)g
(2005.)2040 222 y
SDict begin H.S end
 2040 222 a 2040 222 a
SDict begin 8 H.A end
 2040 222 a 2040
222 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.sally-e2e) cvn H.B /DEST
pdfmark end
 2040 222 a 2069 280 a FE([6])38 b(S.)15 b(Flo)o(yd)g(and)g(K.)f
(F)o(all.)g(Promoting)i(the)f(use)f(of)h(end-to-end)g(congestion)f
(control)i(in)e(the)2174 346 y(Internet.)h FH(IEEE/A)n(CM)f(T)m(r)o
(ansactions)g(on)g(Networking)p FE(,)f(7\(4\),)i(1999.)2040
367 y
SDict begin H.S end
 2040 367 a 2040 367 a
SDict begin 8 H.A end
 2040 367 a 2040 367 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.TCP-problem-TMC) cvn H.B
/DEST pdfmark end
 2040
367 a 2069 421 a FE([7])38 b(Z.)14 b(Fu,)g(H.)g(Luo,)g(P)-6
b(.)14 b(Zerfos,)g(S.)g(Lu,)g(L.)f(Zhang,)h(and)g(M.)g(Gerla.)g(The)g
(impact)h(of)g(of)2174 488 y(multihop)h(wireless)e(channel)g(on)h(TCP)f
(performance.)g FH(IEEE)g(T)m(r)o(ans.)f(on)i(Mobile)2174
554 y(Computing)p FE(,)g(Mar)m(.)e(2005.)2040 574 y
SDict begin H.S end
 2040
574 a 2040 574 a
SDict begin 8 H.A end
 2040 574 a 2040 574 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.lui-model) cvn H.B /DEST
pdfmark end
 2040 574 a 2069
629 a FE([8])38 b(Y)-7 b(.)14 b(Gao,)g(J.)f(Lui,)h(and)h(D.)f(M.)f
(Chiu.)h(Determining)i(the)e(end-to-end)i(throughput)2174
695 y(capacity)e(in)h(multi-hop)h(netw)o(orks:)j(Methodolgy)14
b(and)h(applications.)f(In)h FH(Pr)m(oc.)e(of)i(A)n(CM)2174
762 y(SIGMETRICS)p FE(,)g(Jun.)e(2006.)2040 778 y
SDict begin H.S end
 2040
778 a 2040 778 a
SDict begin 8 H.A end
 2040 778 a 2040 778 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Garetto06:Infocom) cvn H.B
/DEST pdfmark end
 2040 778 a 2069
836 a FE([9])38 b(M.)14 b(Garetto,)g(T)l(.)g(Salonidis,)g(,)g(and)h(E.)
e(Knightly)l(.)i(Modeling)g(per)o(-\003o)o(w)f(throughput)i(and)2174
903 y(capturing)f(starv)o(ation)g(in)f(CSMA)h(multi-hop)g(wireless)f
(netw)o(orks.)h(In)g FH(Pr)m(oc.)e(of)i(IEEE)2174 969
y(Infocom)p FE(,)g(March)f(2006.)2040 989 y
SDict begin H.S end
 2040 989
a 2040 989 a
SDict begin 8 H.A end
 2040 989 a 2040 989 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.knightly-model) cvn H.B
/DEST pdfmark end
 2040 989 a 55 x FE([10])38
b(M.)14 b(Garetto,)g(J.)g(Shi,)h(and)f(E.)g(Knightly)l(.)h(Modeling)f
(media)h(access)e(in)h(embedded)2174 1110 y(tw)o(o-\003o)o(w)i
(topologies)e(of)h(multi-hop)h(wireless)e(netw)o(orks.)h(In)f
FH(Pr)m(oc.)g(of)h(A)n(CM)2174 1177 y(MOBICOM)p FE(,)g(Aug.)f(-)h
(Sept.)f(2005.)2040 1198 y
SDict begin H.S end
 2040 1198 a 2040 1198 a
SDict begin 8 H.A end
 2040
1198 a 2040 1198 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.GV02) cvn H.B /DEST pdfmark
end
 2040 1198 a 53 x FE([11])38 b(M.)14
b(Gastpar)g(and)h(M.)e(V)-6 b(etterli.)15 b(On)f(the)h(capacity)f(of)h
(wireless)f(netw)o(orks:)k(the)d(relay)2174 1318 y(case.)e(In)i
FH(Pr)m(oc.)f(of)g(IEEE)g(INFOCOM)p FE(,)g(Jun.)f(2002.)2040
1338 y
SDict begin H.S end
 2040 1338 a 2040 1338 a
SDict begin 8 H.A end
 2040 1338 a 2040 1338
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.mobility-thruput) cvn H.B
/DEST pdfmark end
 2040 1338 a 55 x FE([12])38 b(M.)14 b(Grossglauser)g(and)g(D.)g(N.)g
(C.)g(Tse.)f(Mobility)i(increases)f(the)g(capacity)g(of)h(ad)g(hoc)2174
1459 y(wireless)f(netw)o(orks.)h(In)g FH(Pr)m(oc.)e(of)i(IEEE)e
(INFOCOM)p FE(,)h(Apr)m(.)g(2001.)2040 1480 y
SDict begin H.S end
 2040 1480
a 2040 1480 a
SDict begin 8 H.A end
 2040 1480 a 2040 1480 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.GK00) cvn H.B /DEST pdfmark
end
 2040 1480 a 54
x FE([13])38 b(P)-6 b(.)14 b(Gupta)h(and)f(P)-6 b(.)14
b(R.)g(K)o(umar)m(.)g(The)g(capacity)g(of)h(wireless)f(netw)o(orks.)h
FH(IEEE)2174 1600 y(T)m(r)o(ansactions)f(on)h(Information)g(Theory)p
FE(,)f(46\(2\),)h(Mar)m(.)e(2000.)2040 1620 y
SDict begin H.S end
 2040 1620
a 2040 1620 a
SDict begin 8 H.A end
 2040 1620 a 2040 1620 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.JPPQ03) cvn H.B /DEST pdfmark
end
 2040 1620 a 55
x FE([14])38 b(K.)14 b(Jain,)g(J.)g(P)o(adhye,)g(V)-7
b(.)13 b(N.)h(P)o(admanabhan,)g(and)h(L.)e(Qiu.)i(Impact)g(of)f
(interference)h(on)2174 1741 y(multi-hop)h(wireless)e(netw)o(ork)h
(performance.)g(In)g FH(Pr)m(oc.)e(A)n(CM)i(MOBICOM)p
FE(,)f(Sept.)2174 1808 y(2003.)2040 1817 y
SDict begin H.S end
 2040 1817
a 2040 1817 a
SDict begin 8 H.A end
 2040 1817 a 2040 1817 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.DSR) cvn H.B /DEST pdfmark
end
 2040 1817 a 65
x FE([15])38 b(D.)14 b(B.)g(Johnson,)g(D.)g(A.)g(Maltz,)f(and)i(J.)e
(Broch.)i(DSR:)f(The)g(dynamic)h(source)f(routing)2174
1949 y(protocol)i(for)f(multihop)g(wireless)f(ad)h(hoc)f(netw)o(orks.)h
(In)g FH(Ad)f(Hoc)g(Networking)p FE(,)f(2001.)2040 1970
y
SDict begin H.S end
 2040 1970 a 2040 1970 a
SDict begin 8 H.A end
 2040 1970 a 2040 1970 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.stony-brook-model) cvn H.B
/DEST pdfmark end
 2040
1970 a 53 x FE([16])38 b(A.)14 b(Kashyap,)f(S.)i(Das,)e(and)i(S.)f
(Ganguly)l(.)g(A)h(measurement-based)f(approach)h(to)2174
2090 y(modeling)g(link)g(capacity)f(in)h(802.11-based)f(wireless)g
(netw)o(orks.)h(In)g FH(Pr)m(oc.)e(of)i(A)n(CM)2174 2156
y(MOBICOM)p FE(,)g(Sept.)f(2007.)2040 2177 y
SDict begin H.S end
 2040 2177
a 2040 2177 a
SDict begin 8 H.A end
 2040 2177 a 2040 2177 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Kotz04) cvn H.B /DEST pdfmark
end
 2040 2177 a 54
x FE([17])38 b(D.)14 b(K)n(otz,)g(C.)g(Ne)o(wport,)g(R.)g(S.)g(Gray)l
(,)h(J.)e(Liu,)h(Y)-7 b(.)14 b(Y)-6 b(uan,)13 b(and)i(C.)e(Elliott.)i
(Experimental)2174 2297 y(e)o(v)o(aluation)f(of)h(wireless)f
(simulation)h(assumptions.)e(In)i FH(Pr)m(oc.)f(of)g(the)h(A)n(CM/IEEE)
2174 2364 y(International)g(Symposium)f(on)h(Modeling)o(,)g(Analysis)e
(and)i(Simulation)g(of)f(W)m(ir)n(eless)f(and)2174 2430
y(Mobile)i(Systems)f(\(MSW)m(iM\))p FE(,)i(Oct.)e(2004.)2040
2450 y
SDict begin H.S end
 2040 2450 a 2040 2450 a
SDict begin 8 H.A end
 2040 2450 a 2040 2450
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Kumar-single-cell) cvn H.B
/DEST pdfmark end
 2040 2450 a 55 x FE([18])38 b(A.)14 b(K)o(umar)n(,)h(E.)e(Altman,)i
(D.)f(Miorandi,)g(and)g(M.)g(Go)o(yal.)h(Ne)o(w)e(insights)i(from)g(a)g
(\002x)o(ed)2174 2571 y(point)g(analysis)f(of)h(single)f(cell)h(IEEE)e
(802.11)i(wireless)f(LANs.)f(In)i FH(Pr)m(oc.)e(of)i(IEEE)2174
2638 y(INFOCOM)p FE(,)f(Mar)m(.)g(2005.)2040 2655 y
SDict begin H.S end
 2040
2655 a 2040 2655 a
SDict begin 8 H.A end
 2040 2655 a 2040 2655 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.morris-wireless-cap) cvn
H.B /DEST pdfmark end
 2040 2655
a 58 x FE([19])38 b(J.)14 b(Li,)g(C.)f(Blak)o(e,)i(D.)f(S.)g(J.)g(D.)g
(Couto,)g(H.)g(I.)g(Lee,)f(and)i(R.)f(Morris.)g(Capacity)g(of)h(ad)f
(hoc)2174 2779 y(wireless)g(netw)o(orks.)h(In)g FH(Pr)m(oc.)e(of)i
(MOBICOM)p FE(,)f(Jul.)g(2001.)2040 2799 y
SDict begin H.S end
 2040 2799
a 2040 2799 a
SDict begin 8 H.A end
 2040 2799 a 2040 2799 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.hotnets07) cvn H.B /DEST
pdfmark end
 2040 2799 a 55
x FE([20])38 b(Y)-7 b(.)14 b(Li,)g(L.)f(Qiu,)h(Y)-7 b(.)14
b(Zhang,)f(R.)h(Mahajan,)g(Z.)f(Zhong,)h(G.)g(Deshpande,)f(and)i(E.)e
(Rozner)m(.)2174 2920 y(Ef)o(fects)h(of)h(interference)g(on)g
(throughput)g(of)g(wireless)f(mesh)g(netw)o(orks:)19
b(P)o(athologies)2174 2987 y(and)c(a)f(preliminary)i(solution.)e(In)h
FH(Pr)m(oc.)e(of)i(HotNets-VI)p FE(,)f(No)o(v)l(.)g(2007.)2040
3007 y
SDict begin H.S end
 2040 3007 a 2040 3007 a
SDict begin 8 H.A end
 2040 3007 a 2040 3007
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.joint-rate-control) cvn
H.B /DEST pdfmark end
 2040 3007 a 54 x FE([21])38 b(X.)14 b(Lin)h(and)f(N.)g(B.)g(Shrof)o
(f.)h(Joint)f(rate)h(control)g(and)g(scheduling)f(in)h(multihop)g
(wireless)2174 3128 y(netw)o(orks.)g(In)g FH(Pr)m(oc.)e(of)i(IEEE)e
(Confer)n(ence)h(on)g(Decision)g(and)h(Contr)m(ol)p FE(,)f(2004.)2040
3148 y
SDict begin H.S end
 2040 3148 a 2040 3148 a
SDict begin 8 H.A end
 2040 3148 a 2040 3148
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.wit) cvn H.B /DEST pdfmark
end
 2040 3148 a 54 x FE([22])38 b(R.)14 b(Mahajan,)g(M.)f(Rodrig,)i(D.)f
(W)-5 b(etherall,)14 b(and)h(J.)e(Zahorjan.)h(Analyzing)h(the)f(mac-le)
o(v)o(el)2174 3269 y(beha)o(vior)h(of)g(wireless)f(netw)o(orks.)g(In)h
FH(Pr)m(oc.)f(of)h(SIGCOMM)p FE(,)f(2006.)2040 3289 y
SDict begin H.S end

2040 3289 a 2040 3289 a
SDict begin 8 H.A end
 2040 3289 a 2040 3289 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.interference-map) cvn H.B
/DEST pdfmark end
 2040
3289 a 55 x FE([23])38 b(D.)14 b(Niculescu.)g(Interference)h(map)g(for)
g(802.11)f(netw)o(orks.)h(In)g FH(Pr)m(oc.)e(of)i(Internet)2174
3410 y(Measur)n(ement)f(Confer)n(ence)f(\(IMC\))p FE(,)j(No)o(v)l(.)e
(2007.)2040 3430 y
SDict begin H.S end
 2040 3430 a 2040 3430 a
SDict begin 8 H.A end
 2040 3430
a 2040 3430 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.nuttcp) cvn H.B /DEST pdfmark
end
 2040 3430 a 55 x FE([24])38 b(nuttcp.)15
b(ftp://ftp.lcp.nrl.na)o(vy)l(.mil/pub/nuttcp/.)2040
3506 y
SDict begin H.S end
 2040 3506 a 2040 3506 a
SDict begin 8 H.A end
 2040 3506 a 2040 3506
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.imc05) cvn H.B /DEST pdfmark
end
 2040 3506 a 53 x FE([25])38 b(J.)14 b(P)o(adhye,)g(S.)g(Agarw)o(al,)h
(V)-7 b(.)13 b(N.)h(P)o(admanabhan,)g(L.)g(Qiu,)g(A.)g(Rao,)g(and)g(B.)
g(Zill.)2174 3626 y(Estimation)g(of)h(link)g(interference)g(in)f
(static)g(multi-hop)i(wireless)d(netw)o(orks.)i(In)f
FH(Pr)m(oc.)f(of)2174 3692 y(Internet)i(Measur)n(ement)e(Confer)n(ence)
h(\(IMC\))p FE(,)h(Oct.)f(2005.)2040 3712 y
SDict begin H.S end
 2040 3712
a 2040 3712 a
SDict begin 8 H.A end
 2040 3712 a 2040 3712 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.AODV) cvn H.B /DEST pdfmark
end
 2040 3712 a 55
x FE([26])38 b(C.)14 b(E.)g(Perkins)h(and)f(E.)g(M.)f(Ro)o(yer)m(.)i
(Ad)f(hoc)h(on-demand)g(distance)f(v)o(ector)g(routing.)h(In)2174
3833 y FH(Pr)m(oc.)f(of)g(the)h(2nd)g(IEEE)e(W)-5 b(orkshop)14
b(on)h(Mobile)g(Computing)g(Systems)e(and)2174 3900 y(Applications)p
FE(,)h(Feb)n(.)g(1999.)2040 3920 y
SDict begin H.S end
 2040 3920 a 2040 3920
a
SDict begin 8 H.A end
 2040 3920 a 2040 3920 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.lili-mobicom07) cvn H.B
/DEST pdfmark end
 2040 3920 a 55 x FE([27])38
b(L.)14 b(Qiu,)g(Y)-7 b(.)14 b(Zhang,)f(F)-5 b(.)15 b(W)-5
b(ang,)14 b(M.)g(K.)g(Han,)g(and)g(R.)g(Mahajan.)f(A)i(general)f(model)
h(of)2174 4041 y(wireless)f(interference.)h(In)g FH(Pr)m(oc.)e(of)i(A)n
(CM)f(MOBICOM)p FE(,)h(Sept.)f(2007.)2040 4062 y
SDict begin H.S end
 2040
4062 a 2040 4062 a
SDict begin 8 H.A end
 2040 4062 a 2040 4062 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.qualnet) cvn H.B /DEST pdfmark
end
 2040 4062
a 54 x FE([28])38 b(The)14 b(Qualnet)h(simulator)g(from)g(Scalable)g
(Netw)o(orks)g(Inc.)2174 4182 y(http://www)l(.scalable-netw)o
(orks.com/.)2040 4203 y
SDict begin H.S end
 2040 4203 a 2040 4203 a
SDict begin 8 H.A end
 2040
4203 a 2040 4203 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.rangwala06) cvn H.B /DEST
pdfmark end
 2040 4203 a 54 x FE([29])38 b(S.)15
b(Rangw)o(ala,)f(R.)f(Gummadi,)i(R.)f(Go)o(vindan,)g(and)h(K.)f
(Psounis.)f(Interference-a)o(w)o(are)2174 4323 y(f)o(air)j(rate)f
(control)g(in)f(wireless)g(sensor)g(netw)o(orks.)h(In)g
FH(A)n(CM)f(SIGCOMM)p FE(,)h(Sept.)g(2006.)2040 4344
y
SDict begin H.S end
 2040 4344 a 2040 4344 a
SDict begin 8 H.A end
 2040 4344 a 2040 4344 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.sigcomm06-Reis) cvn H.B
/DEST pdfmark end
 2040
4344 a 54 x FE([30])38 b(C.)14 b(Reis,)f(R.)h(Mahajan,)g(M.)f(Rodrig,)i
(D.)f(W)-5 b(etherall,)14 b(and)h(J.)f(Zahorjan.)2174
4464 y(Measurement-based)g(models)g(of)h(deli)o(v)o(ery)g(and)f
(interference.)h(In)g FH(Pr)m(oc.)e(of)i(A)n(CM)2174
4531 y(SIGCOMM)p FE(,)g(2006.)2040 4547 y
SDict begin H.S end
 2040 4547 a
2040 4547 a
SDict begin 8 H.A end
 2040 4547 a 2040 4547 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.salonidis-model) cvn H.B
/DEST pdfmark end
 2040 4547 a 58 x
FE([31])38 b(T)l(.)14 b(Salonidis,)g(M.)g(Garetto,)g(A.)g(Saha,)g(and)h
(E.)e(Knightly)l(.)i(Identifying)h(high)f(throughput)2174
4672 y(paths)f(in)h(802.11)g(mesh)f(netw)o(orks:)k(a)d(model-based)f
(approach.)g(In)h FH(ICNP)p FE(,)f(Oct.)g(2007.)2040
4693 y
SDict begin H.S end
 2040 4693 a 2040 4693 a
SDict begin 8 H.A end
 2040 4693 a 2040 4693
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.iaware) cvn H.B /DEST pdfmark
end
 2040 4693 a 54 x FE([32])38 b(A.)14 b(P)-6 b(.)14 b(Subramanian,)h
(M.)f(M.)f(Buddhik)o(ot,)i(and)g(S.)f(Miller)m(.)g(Interference)h(a)o
(w)o(are)g(routing)2174 4813 y(in)g(multi-radio)h(wireless)e(mesh)g
(netw)o(orks.)h(In)g FH(IEEE)e(W)-5 b(orkshop)14 b(on)h(W)m(ir)n(eless)
e(Mesh)2174 4879 y(Networks)g(\(W)m(iMesh\))p FE(,)i(Sept.)g(2006.)2040
4900 y
SDict begin H.S end
 2040 4900 a 2040 4900 a
SDict begin 8 H.A end
 2040 4900 a 2040 4900
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.back-pressure) cvn H.B /DEST
pdfmark end
 2040 4900 a 54 x FE([33])38 b(L.)14 b(T)-5 b(assiulas)13
b(and)h(A.)g(Ephremides.)g(Stability)i(properties)f(of)g(constrained)f
(queueing)2174 5021 y(systems)g(and)g(scheduling)h(policies)f(for)h
(maximum)g(throughput)h(in)f(multihop)g(radio)2174 5087
y(netw)o(orks.)g(In)g FH(IEEE)e(T)m(r)o(ansactions)h(on)h(A)o(utomatic)
f(Contr)m(ol)p FE(,)g(Dec.)g(1992.)2040 5104 y
SDict begin H.S end
 2040 5104
a 2040 5104 a
SDict begin 8 H.A end
 2040 5104 a 2040 5104 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Tesseract) cvn H.B /DEST
pdfmark end
 2040 5104 a 58
x FE([34])38 b(H.)14 b(Y)-6 b(an,)14 b(D.)g(A.)g(Maltz,)g(T)l(.)f(S.)i
(E.)e(Ng,)h(H.)g(Gogineni,)h(and)f(H.)g(Zhang.)g(T)l(esseract:)i(A)f
(4d)2174 5228 y(netw)o(ork)h(control)f(plane.)f(In)h
FH(Pr)m(oc.)e(of)i(NSDI)p FE(,)f(Apr)m(.)g(2007.)2040
5249 y
SDict begin H.S end
 2040 5249 a 2040 5249 a
SDict begin 8 H.A end
 2040 5249 a 2040 5249
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.mic) cvn H.B /DEST pdfmark
end
 2040 5249 a 54 x FE([35])38 b(Y)-7 b(.)14 b(Y)-6 b(ang,)14
b(J.)g(W)-5 b(ang,)14 b(and)g(R.)g(Kra)o(v)o(ets.)g(Designing)g
(routing)i(metrics)e(for)i(mesh)2174 5369 y(netw)o(orks.)e(In)h
FH(IEEE)d(W)-5 b(orkshop)14 b(on)g(W)m(ir)n(eless)e(Mesh)i(Networks)f
(\(W)m(iMesh\))p FE(,)h(Sept.)g(2005.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
